From a9f26cc0779b262db6ede689467098f1f78f19c3 Mon Sep 17 00:00:00 2001
From: Piotr Gorski <lucjan.lucjanov@gmail.com>
Date: Tue, 31 May 2022 20:51:56 +0200
Subject: [PATCH 28/36] lrng-5.18: merge full ABI compliance branch

Signed-off-by: Piotr Gorski <lucjan.lucjanov@gmail.com>
---
 drivers/char/lrng/lrng_es_mgr.c               | 7 +++++++
 drivers/char/lrng/lrng_es_mgr.h               | 1 +
 drivers/char/lrng/lrng_interface_dev_common.c | 2 +-
 drivers/char/lrng/lrng_proc.c                 | 8 +++++---
 drivers/char/lrng/lrng_sysctl.c               | 9 ++-------
 5 files changed, 16 insertions(+), 11 deletions(-)

diff --git a/drivers/char/lrng/lrng_es_mgr.c b/drivers/char/lrng/lrng_es_mgr.c
index 050f96bfa..7e644bf04 100644
--- a/drivers/char/lrng/lrng_es_mgr.c
+++ b/drivers/char/lrng/lrng_es_mgr.c
@@ -251,6 +251,13 @@ u32 lrng_avail_entropy(void)
 	return ent;
 }
 
+u32 lrng_avail_entropy_aux(void)
+{
+	u32 ent_thresh = lrng_avail_entropy_thresh();
+
+	return lrng_es[lrng_ext_es_aux]->curr_entropy(ent_thresh);
+}
+
 /*
  * lrng_init_ops() - Set seed stages of LRNG
  *
diff --git a/drivers/char/lrng/lrng_es_mgr.h b/drivers/char/lrng/lrng_es_mgr.h
index e24f101de..30b81a570 100644
--- a/drivers/char/lrng/lrng_es_mgr.h
+++ b/drivers/char/lrng/lrng_es_mgr.h
@@ -31,6 +31,7 @@ bool lrng_state_operational(void);
 extern u32 lrng_write_wakeup_bits;
 void lrng_set_entropy_thresh(u32 new);
 u32 lrng_avail_entropy(void);
+u32 lrng_avail_entropy_aux(void);
 void lrng_reset_state(void);
 
 bool lrng_state_fully_seeded(void);
diff --git a/drivers/char/lrng/lrng_interface_dev_common.c b/drivers/char/lrng/lrng_interface_dev_common.c
index 8e80d5bd9..da4258749 100644
--- a/drivers/char/lrng/lrng_interface_dev_common.c
+++ b/drivers/char/lrng/lrng_interface_dev_common.c
@@ -232,7 +232,7 @@ long lrng_ioctl(struct file *f, unsigned int cmd, unsigned long arg)
 
 	switch (cmd) {
 	case RNDGETENTCNT:
-		ent_count_bits = lrng_avail_entropy();
+		ent_count_bits = lrng_avail_entropy_aux();
 		if (put_user(ent_count_bits, p))
 			return -EFAULT;
 		return 0;
diff --git a/drivers/char/lrng/lrng_proc.c b/drivers/char/lrng/lrng_proc.c
index 6e3e0699a..0be848c6d 100644
--- a/drivers/char/lrng/lrng_proc.c
+++ b/drivers/char/lrng/lrng_proc.c
@@ -26,7 +26,7 @@ void lrng_pool_inc_numa_node(void)
 static int lrng_proc_type_show(struct seq_file *m, void *v)
 {
 	struct lrng_drng *lrng_drng_init = lrng_drng_init_instance();
-	unsigned char buf[250];
+	unsigned char buf[270];
 	u32 i;
 
 	mutex_lock(&lrng_drng_init->lock);
@@ -36,13 +36,15 @@ static int lrng_proc_type_show(struct seq_file *m, void *v)
 		 "Number of DRNG instances: %u\n"
 		 "Standards compliance: %s\n"
 		 "LRNG minimally seeded: %s\n"
-		 "LRNG fully seeded: %s\n",
+		 "LRNG fully seeded: %s\n"
+		 "LRNG entropy level: %u\n",
 		 lrng_drng_init->drng_cb->drng_name(),
 		 lrng_security_strength(),
 		 numa_drngs,
 		 lrng_sp80090c_compliant() ? "SP800-90C " : "",
 		 lrng_state_min_seeded() ? "true" : "false",
-		 lrng_state_fully_seeded() ? "true" : "false");
+		 lrng_state_fully_seeded() ? "true" : "false",
+		 lrng_avail_entropy());
 	seq_write(m, buf, strlen(buf));
 
 	for_each_lrng_es(i) {
diff --git a/drivers/char/lrng/lrng_sysctl.c b/drivers/char/lrng/lrng_sysctl.c
index 0f657d01b..ecdd96a84 100644
--- a/drivers/char/lrng/lrng_sysctl.c
+++ b/drivers/char/lrng/lrng_sysctl.c
@@ -54,9 +54,7 @@ static int lrng_sysctl_do_entropy(struct ctl_table *table, int write,
 				void *buffer, size_t *lenp, loff_t *ppos)
 {
 	struct ctl_table fake_table;
-	int entropy_count;
-
-	entropy_count = lrng_avail_entropy();
+	int entropy_count = lrng_avail_entropy_aux();
 
 	fake_table.data = &entropy_count;
 	fake_table.maxlen = sizeof(entropy_count);
@@ -68,10 +66,7 @@ static int lrng_sysctl_do_poolsize(struct ctl_table *table, int write,
 				   void *buffer, size_t *lenp, loff_t *ppos)
 {
 	struct ctl_table fake_table;
-	u32 i, entropy_count = 0;
-
-	for_each_lrng_es(i)
-		entropy_count += lrng_es[i]->max_entropy();
+	u32 entropy_count = lrng_es[lrng_ext_es_aux]->max_entropy();
 
 	fake_table.data = &entropy_count;
 	fake_table.maxlen = sizeof(entropy_count);
-- 
2.37.0.rc0.15.g3b9a5a33c2

