From 6d48d10091da4997a2f42b841b844996eaba5546 Mon Sep 17 00:00:00 2001
From: Piotr Gorski <lucjan.lucjanov@gmail.com>
Date: Mon, 30 May 2022 22:11:11 +0200
Subject: [PATCH 27/27] lrng-5.18: update to the latest git HEAD

Signed-off-by: Piotr Gorski <lucjan.lucjanov@gmail.com>
---
 drivers/char/lrng/lrng_interface_aux.c        | 32 -------------------
 .../char/lrng/lrng_interface_random_kernel.c  |  7 ++--
 2 files changed, 5 insertions(+), 34 deletions(-)

diff --git a/drivers/char/lrng/lrng_interface_aux.c b/drivers/char/lrng/lrng_interface_aux.c
index a2236ff3b..0eb49bd6b 100644
--- a/drivers/char/lrng/lrng_interface_aux.c
+++ b/drivers/char/lrng/lrng_interface_aux.c
@@ -124,35 +124,3 @@ void invalidate_batched_entropy(void)
 		spin_unlock_irqrestore(&batched_entropy->batch_lock, flags);
 	}
 }
-
-/*
- * randomize_page - Generate a random, page aligned address
- * @start:	The smallest acceptable address the caller will take.
- * @range:	The size of the area, starting at @start, within which the
- *		random address must fall.
- *
- * If @start + @range would overflow, @range is capped.
- *
- * NOTE: Historical use of randomize_range, which this replaces, presumed that
- * @start was already page aligned.  We now align it regardless.
- *
- * Return: A page aligned address within [start, start + range).  On error,
- * @start is returned.
- */
-unsigned long randomize_page(unsigned long start, unsigned long range)
-{
-	if (!PAGE_ALIGNED(start)) {
-		range -= PAGE_ALIGN(start) - start;
-		start = PAGE_ALIGN(start);
-	}
-
-	if (start > ULONG_MAX - range)
-		range = ULONG_MAX - start;
-
-	range >>= PAGE_SHIFT;
-
-	if (range == 0)
-		return start;
-
-	return start + (get_random_long() % range << PAGE_SHIFT);
-}
diff --git a/drivers/char/lrng/lrng_interface_random_kernel.c b/drivers/char/lrng/lrng_interface_random_kernel.c
index 4dae08e06..81060ba98 100644
--- a/drivers/char/lrng/lrng_interface_random_kernel.c
+++ b/drivers/char/lrng/lrng_interface_random_kernel.c
@@ -25,9 +25,12 @@ static unsigned int lrng_ready_chain_used = 0;
 
 /********************************** Helper ***********************************/
 
-int __init rand_initialize(void)
+int __init random_init(const char *command_line)
 {
-	return lrng_rand_initialize();
+	int ret = lrng_rand_initialize();
+
+	lrng_pool_insert_aux(command_line, strlen(command_line), 0);
+	return ret;
 }
 
 bool lrng_ready_chain_has_sleeper(void)
-- 
2.36.1.74.g277cf0bc36

