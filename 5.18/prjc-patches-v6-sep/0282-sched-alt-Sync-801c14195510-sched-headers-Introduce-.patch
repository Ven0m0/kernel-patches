From 855e15343d55ef3174fa6ffafaecaca9f8035a4b Mon Sep 17 00:00:00 2001
From: Alfred Chen <cchalpha@gmail.com>
Date: Sat, 21 May 2022 11:44:15 +0000
Subject: [PATCH 282/285] sched/alt: [Sync] 801c14195510 sched/headers:
 Introduce kernel/sched/build_utility.c and build multiple .c files there

---
 kernel/sched/alt_sched.h     | 12 +++++++++---
 kernel/sched/build_utility.c |  4 +---
 2 files changed, 10 insertions(+), 6 deletions(-)

diff --git a/kernel/sched/alt_sched.h b/kernel/sched/alt_sched.h
index 7bbe006ce568..39c6057b0ad3 100644
--- a/kernel/sched/alt_sched.h
+++ b/kernel/sched/alt_sched.h
@@ -48,6 +48,7 @@
 
 #include "cpupri.h"
 
+#include <trace/events/power.h>
 #include <trace/events/sched.h>
 
 #ifdef CONFIG_SCHED_BMQ
@@ -452,9 +453,6 @@ this_rq_lock_irq(struct rq_flags *rf)
 	return rq;
 }
 
-extern void raw_spin_rq_lock_nested(struct rq *rq, int subclass);
-extern void raw_spin_rq_unlock(struct rq *rq);
-
 static inline raw_spinlock_t *__rq_lockp(struct rq *rq)
 {
 	return &rq->lock;
@@ -465,6 +463,14 @@ static inline raw_spinlock_t *rq_lockp(struct rq *rq)
 	return __rq_lockp(rq);
 }
 
+static inline void lockdep_assert_rq_held(struct rq *rq)
+{
+	lockdep_assert_held(__rq_lockp(rq));
+}
+
+extern void raw_spin_rq_lock_nested(struct rq *rq, int subclass);
+extern void raw_spin_rq_unlock(struct rq *rq);
+
 static inline void raw_spin_rq_lock(struct rq *rq)
 {
 	raw_spin_rq_lock_nested(rq, 0);
diff --git a/kernel/sched/build_utility.c b/kernel/sched/build_utility.c
index 4323e5536b6e..880f4f819d77 100644
--- a/kernel/sched/build_utility.c
+++ b/kernel/sched/build_utility.c
@@ -68,11 +68,9 @@
 # include "cpufreq_schedutil.c"
 #endif
 
-#ifdef CONFIG_SCHED_ALT
 #ifdef CONFIG_SCHED_DEBUG
 # include "debug.c"
 #endif
-#endif
 
 #ifdef CONFIG_SCHEDSTATS
 # include "stats.c"
@@ -86,7 +84,7 @@
 
 #ifdef CONFIG_SMP
 # include "cpupri.c"
-#ifdef CONFIG_SCHED_ALT
+#ifndef CONFIG_SCHED_ALT
 # include "stop_task.c"
 #endif
 # include "topology.c"
-- 
2.36.1.74.g277cf0bc36

