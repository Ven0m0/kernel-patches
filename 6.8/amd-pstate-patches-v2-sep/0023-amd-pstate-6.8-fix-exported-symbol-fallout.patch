From 279737a528241b56f6ff445010e0871430f5469e Mon Sep 17 00:00:00 2001
From: Oleksandr Natalenko <oleksandr@natalenko.name>
Date: Wed, 7 Feb 2024 15:54:09 +0100
Subject: [PATCH 23/27] amd-pstate-6.8: fix exported symbol fallout

Signed-off-by: Oleksandr Natalenko <oleksandr@natalenko.name>
---
 drivers/cpufreq/amd-pstate-ut.c |  2 +-
 drivers/cpufreq/amd-pstate.c    | 19 ++++++++++---------
 include/linux/amd-pstate.h      |  6 +++---
 3 files changed, 14 insertions(+), 13 deletions(-)

diff --git a/drivers/cpufreq/amd-pstate-ut.c b/drivers/cpufreq/amd-pstate-ut.c
index 91780ec42..c5e2ca02f 100644
--- a/drivers/cpufreq/amd-pstate-ut.c
+++ b/drivers/cpufreq/amd-pstate-ut.c
@@ -226,7 +226,7 @@ static void amd_pstate_ut_check_freq(u32 index)
 			goto skip_test;
 		}
 
-		if (global.cpb_supported) {
+		if (amd_pstate_global_params.cpb_supported) {
 			if ((policy->max == cpudata->max_freq) ||
 					(policy->max == cpudata->nominal_freq))
 				amd_pstate_ut_cases[index].result = AMD_PSTATE_UT_RESULT_PASS;
diff --git a/drivers/cpufreq/amd-pstate.c b/drivers/cpufreq/amd-pstate.c
index aebecd4e2..3e23d114c 100644
--- a/drivers/cpufreq/amd-pstate.c
+++ b/drivers/cpufreq/amd-pstate.c
@@ -68,7 +68,8 @@ static int cppc_state = AMD_PSTATE_UNDEFINED;
 static bool cppc_enabled;
 static bool amd_pstate_prefcore = true;
 static struct quirk_entry *quirks;
-struct global_params global;
+struct amd_pstate_global_params amd_pstate_global_params;
+EXPORT_SYMBOL_GPL(amd_pstate_global_params);
 
 /*
  * AMD Energy Preference Performance (EPP)
@@ -496,7 +497,7 @@ static void amd_pstate_update(struct amd_cpudata *cpudata, u32 min_perf,
 	value |= AMD_CPPC_DES_PERF(des_perf);
 
 	/* limit the max perf when core performance boost feature is disabled */
-	if (!global.cpb_boost)
+	if (!amd_pstate_global_params.cpb_boost)
 		max_perf = min_t(unsigned long, nominal_perf, max_perf);
 
 	value &= ~AMD_CPPC_MAX_PERF(~0L);
@@ -672,7 +673,7 @@ static int amd_get_max_freq(struct amd_cpudata *cpudata)
 	max_perf = READ_ONCE(cpudata->highest_perf);
 
 	/* when boost is off, the highest perf will be limited to nominal_perf */
-	if (!global.cpb_boost)
+	if (!amd_pstate_global_params.cpb_boost)
 		max_perf = nominal_perf;
 
 	boost_ratio = div_u64(max_perf << SCHED_CAPACITY_SHIFT,
@@ -737,8 +738,8 @@ static int amd_pstate_boost_init(struct amd_cpudata *cpudata)
 		return ret;
 	}
 
-	global.cpb_supported = !((boost_val >> 25) & 0x1);
-	global.cpb_boost = global.cpb_supported;
+	amd_pstate_global_params.cpb_supported = !((boost_val >> 25) & 0x1);
+	amd_pstate_global_params.cpb_boost = amd_pstate_global_params.cpb_supported;
 
 	return ret;
 }
@@ -1337,7 +1338,7 @@ static int amd_cpu_boost_update(struct amd_cpudata *cpudata, u32 on)
 static ssize_t cpb_boost_show(struct device *dev,
 			   struct device_attribute *attr, char *buf)
 {
-	return sysfs_emit(buf, "%u\n", global.cpb_boost);
+	return sysfs_emit(buf, "%u\n", amd_pstate_global_params.cpb_boost);
 }
 
 static ssize_t cpb_boost_store(struct device *dev, struct device_attribute *b,
@@ -1348,7 +1349,7 @@ static ssize_t cpb_boost_store(struct device *dev, struct device_attribute *b,
 	int cpu;
 
 	mutex_lock(&amd_pstate_driver_lock);
-	if (!global.cpb_supported) {
+	if (!amd_pstate_global_params.cpb_supported) {
 		pr_err("Boost mode is not supported by this processor or SBIOS\n");
 		return -EINVAL;
 	}
@@ -1357,7 +1358,7 @@ static ssize_t cpb_boost_store(struct device *dev, struct device_attribute *b,
 	if (ret)
 		return -EINVAL;
 
-	global.cpb_boost = !!new_state;
+	amd_pstate_global_params.cpb_boost = !!new_state;
 
 	for_each_possible_cpu(cpu) {
 
@@ -1371,7 +1372,7 @@ static ssize_t cpb_boost_store(struct device *dev, struct device_attribute *b,
 			goto err_exit;
 		}
 
-		amd_cpu_boost_update(cpudata, global.cpb_boost);
+		amd_cpu_boost_update(cpudata, amd_pstate_global_params.cpb_boost);
 		refresh_frequency_limits(policy);
 		cpufreq_cpu_put(policy);
 	}
diff --git a/include/linux/amd-pstate.h b/include/linux/amd-pstate.h
index b0db335f3..f6e2c9825 100644
--- a/include/linux/amd-pstate.h
+++ b/include/linux/amd-pstate.h
@@ -129,16 +129,16 @@ struct quirk_entry {
 };
 
 /**
- * struct global_params - Global parameters, mostly tunable via sysfs.
+ * struct amd_pstate_global_params - Global parameters, mostly tunable via sysfs.
  * @cpb_boost:		Whether or not to use boost CPU P-states.
  * @cpb_supported:	Whether or not CPU boost P-states are available
  *			based on the MSR_K7_HWCR bit[25] state
  */
-struct global_params {
+struct amd_pstate_global_params {
 	bool cpb_boost;
 	bool cpb_supported;
 };
 
-extern struct global_params global;
+extern struct amd_pstate_global_params amd_pstate_global_params;
 
 #endif /* _LINUX_AMD_PSTATE_H */
-- 
2.43.0.232.ge79552d197

