From 7f136e22139c75ba38dd8b2ec1487d96e026f7b7 Mon Sep 17 00:00:00 2001
From: Piotr Gorski <lucjan.lucjanov@gmail.com>
Date: Wed, 19 Jun 2024 15:22:01 +0200
Subject: [PATCH 34/34] amd-pstate-6.9: sync with CachyOS

Signed-off-by: Piotr Gorski <lucjan.lucjanov@gmail.com>
---
 arch/x86/include/asm/cpufeatures.h |  4 ++--
 drivers/cpufreq/amd-pstate.c       | 13 +++----------
 drivers/cpufreq/amd-pstate.h       |  1 +
 drivers/cpufreq/cpufreq.c          |  3 ++-
 4 files changed, 8 insertions(+), 13 deletions(-)

diff --git a/arch/x86/include/asm/cpufeatures.h b/arch/x86/include/asm/cpufeatures.h
index 1d72cdfe6..eceaa0df0 100644
--- a/arch/x86/include/asm/cpufeatures.h
+++ b/arch/x86/include/asm/cpufeatures.h
@@ -470,8 +470,8 @@
 #define X86_FEATURE_BHI_CTRL		(21*32+ 2) /* "" BHI_DIS_S HW control available */
 #define X86_FEATURE_CLEAR_BHB_HW	(21*32+ 3) /* "" BHI_DIS_S HW control enabled */
 #define X86_FEATURE_CLEAR_BHB_LOOP_ON_VMEXIT (21*32+ 4) /* "" Clear branch history at vmexit using SW loop */
-#define X86_FEATURE_HETERO_CORE_TOPOLOGY       (21*32+ 5) /* "" Heterogeneous Core Topology */
-#define X86_FEATURE_FAST_CPPC		(21*32 + 6) /* "" AMD Fast CPPC */
+#define X86_FEATURE_FAST_CPPC		(21*32 + 5) /* "" AMD Fast CPPC */
+#define X86_FEATURE_HETERO_CORE_TOPOLOGY       (21*32+ 6) /* "" Heterogeneous Core Topology */
 
 /*
  * BUG word(s)
diff --git a/drivers/cpufreq/amd-pstate.c b/drivers/cpufreq/amd-pstate.c
index 8045af714..0ac3debcb 100644
--- a/drivers/cpufreq/amd-pstate.c
+++ b/drivers/cpufreq/amd-pstate.c
@@ -278,10 +278,8 @@ static int amd_pstate_set_energy_pref_index(struct amd_cpudata *cpudata,
 	int epp = -EINVAL;
 	int ret;
 
-	if (!pref_index) {
-		pr_debug("EPP pref_index is invalid\n");
-		return -EINVAL;
-	}
+	if (!pref_index)
+		epp = cpudata->epp_default;
 
 	if (epp == -EINVAL)
 		epp = epp_values[pref_index];
@@ -1392,11 +1390,6 @@ static int amd_pstate_cpu_boost_update(struct cpufreq_policy *policy, bool on)
 	u32 highest_perf, nominal_perf, nominal_freq, max_freq;
 	int ret;
 
-	if (!policy) {
-		pr_err("policy is null\n");
-		return -ENODATA;
-	}
-
 	highest_perf = READ_ONCE(cpudata->highest_perf);
 	nominal_perf = READ_ONCE(cpudata->nominal_perf);
 	nominal_freq = READ_ONCE(cpudata->nominal_freq);
@@ -1617,7 +1610,7 @@ static int amd_pstate_epp_cpu_init(struct cpufreq_policy *policy)
 
 	policy->driver_data = cpudata;
 
-	cpudata->epp_cached = amd_pstate_get_epp(cpudata, 0);
+	cpudata->epp_cached = cpudata->epp_default = amd_pstate_get_epp(cpudata, 0);
 
 	policy->min = policy->cpuinfo.min_freq;
 	policy->max = policy->cpuinfo.max_freq;
diff --git a/drivers/cpufreq/amd-pstate.h b/drivers/cpufreq/amd-pstate.h
index 186ecd759..0d7ed7a6b 100644
--- a/drivers/cpufreq/amd-pstate.h
+++ b/drivers/cpufreq/amd-pstate.h
@@ -99,6 +99,7 @@ struct amd_cpudata {
 	u32	policy;
 	u64	cppc_cap1_cached;
 	bool	suspended;
+	s16	epp_default;
 	bool	boost_state;
 };
 
diff --git a/drivers/cpufreq/cpufreq.c b/drivers/cpufreq/cpufreq.c
index b5cc51ecd..50bf5bea3 100644
--- a/drivers/cpufreq/cpufreq.c
+++ b/drivers/cpufreq/cpufreq.c
@@ -1433,8 +1433,9 @@ static int cpufreq_online(unsigned int cpu)
 		if (cpufreq_driver->init_boost) {
 			ret = cpufreq_driver->init_boost(policy);
 			if (ret)
-				pr_debug("%s: %d: initialization boost failed\n", __func__,
+				pr_debug("%s: %d: boost initialization failed\n", __func__,
 					__LINE__);
+				goto out_offline_policy;
 		} else {
 			/* Let the per-policy boost flag mirror the cpufreq_driver boost during init */
 			policy->boost_enabled = cpufreq_boost_enabled() && policy_has_boost_freq(policy);
-- 
2.45.1.145.g83f1add914

