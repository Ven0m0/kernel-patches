From 06abd60557e29d7fca480e81fe0f2d86187c9107 Mon Sep 17 00:00:00 2001
From: Oleksandr Natalenko <oleksandr@natalenko.name>
Date: Fri, 14 Jun 2024 11:55:53 +0200
Subject: [PATCH 08/21] uvcvideo-6.9: update "media: uvcvideo: Fix hw timestamp
 handling for slow FPS"

Signed-off-by: Oleksandr Natalenko <oleksandr@natalenko.name>
---
 drivers/media/usb/uvc/uvc_video.c | 17 ++++++++---------
 1 file changed, 8 insertions(+), 9 deletions(-)

diff --git a/drivers/media/usb/uvc/uvc_video.c b/drivers/media/usb/uvc/uvc_video.c
index 900b57afa..451d6c1a2 100644
--- a/drivers/media/usb/uvc/uvc_video.c
+++ b/drivers/media/usb/uvc/uvc_video.c
@@ -473,29 +473,28 @@ static void uvc_video_clock_add_sample(struct uvc_clock *clock,
 
 	/*
 	 * If we write new data on the position where we had the last
-	 * overflow, remove the overflow pointer. There is no overflow
-	 * on the whole circular buffer.
+	 * overflow, remove the overflow pointer. There is no SOF overflow
+	 * in the whole circular buffer.
 	 */
 	if (clock->head == clock->last_sof_overflow)
 		clock->last_sof_overflow = -1;
 
 	spin_lock_irqsave(&clock->lock, flags);
 
-	/* Handle overflows */
+	/* Handle SOF overflows. */
 	if (clock->count > 0 && clock->last_sof > sample->dev_sof) {
 		/*
 		 * Remove data from the circular buffer that is older than the
-		 * last overflow. We only support one overflow per circular
-		 * buffer.
+		 * last SOF overflow. We only support one SOF overflow per
+		 * circular buffer.
 		 */
-		if (clock->last_sof_overflow != -1) {
+		if (clock->last_sof_overflow != -1)
 			clock->count = (clock->head - clock->last_sof_overflow
-					+ clock->count) % clock->count;
-		}
+					+ clock->size) % clock->size;
 		clock->last_sof_overflow = clock->head;
 	}
 
-	/* Add sample */
+	/* Add sample. */
 	clock->samples[clock->head] = *sample;
 	clock->head = (clock->head + 1) % clock->size;
 	clock->count = min(clock->count + 1, clock->size);
-- 
2.45.1.145.g83f1add914

