From c3b739e65dba98b65142048ba6ef692af6da66d7 Mon Sep 17 00:00:00 2001
From: Oleksandr Natalenko <oleksandr@natalenko.name>
Date: Tue, 11 Jun 2024 23:07:54 +0200
Subject: [PATCH 31/33] amd-pstate-6.9: update fixes and enhancements patchset
 to v3

Signed-off-by: Oleksandr Natalenko <oleksandr@natalenko.name>
---
 drivers/cpufreq/amd-pstate.c | 57 +++++++++++++++++++++++-------------
 1 file changed, 36 insertions(+), 21 deletions(-)

diff --git a/drivers/cpufreq/amd-pstate.c b/drivers/cpufreq/amd-pstate.c
index b1567ae93..9cd95bd5a 100644
--- a/drivers/cpufreq/amd-pstate.c
+++ b/drivers/cpufreq/amd-pstate.c
@@ -381,9 +381,18 @@ static int amd_pstate_get_cpu_type(int cpu)
 
 static u32 amd_pstate_highest_perf_set(struct amd_cpudata *cpudata)
 {
+	struct cpuinfo_x86 *c = &cpu_data(0);
 	u32 highest_perf;
 	int core_type;
 
+	/*
+	 * For AMD CPUs with Family ID 19H and Model ID range 0x70 to 0x7f,
+	 * the highest performance level is set to 196.
+	 * https://bugzilla.kernel.org/show_bug.cgi?id=218759
+	 */
+	if (c->x86 == 0x19 && (c->x86_model >= 0x70 && c->x86_model <= 0x7f))
+		return CPPC_HIGHEST_PERF_PERFORMANCE;
+
 	core_type = amd_pstate_get_cpu_type(cpudata->cpu);
 	pr_debug("core_type %d found\n", core_type);
 
@@ -974,7 +983,7 @@ static int amd_pstate_init_freq(struct amd_cpudata *cpudata)
 	 */
 	if (min_freq <= 0 || max_freq <= 0 || nominal_freq <= 0 || min_freq > max_freq) {
 		pr_err("min_freq(%d) or max_freq(%d) or nominal_freq(%d) value is incorrect\n",
-			min_freq, max_freq, nominal_freq);
+			min_freq, max_freq, nominal_freq * 1000);
 		return -EINVAL;
 	}
 
@@ -1939,24 +1948,24 @@ static bool amd_cppc_supported(void)
 	struct cpuinfo_x86 *c = &cpu_data(0);
 
 	if ((boot_cpu_data.x86 == 0x17) && (boot_cpu_data.x86_model < 0x30)) {
-		pr_debug_once("CPPC feature is not supported by the processor\n");
+		pr_notice_once("CPPC feature is not supported by the processor\n");
 		return false;
 	}
 
 	/*
-	 * If the CPPC flag is disabled in the BIOS for processors that support MSR-based CPPC
+	 * If the CPPC feature is disabled in the BIOS for processors that support MSR-based CPPC,
 	 * the AMD Pstate driver may not function correctly.
+	 * Check the CPPC flag and display a warning message if the platform supports CPPC.
+	 * Notice: below checking code will not abort the driver registeration process.
 	 */
 	if (!cpu_feature_enabled(X86_FEATURE_CPPC)) {
 		if (cpu_feature_enabled(X86_FEATURE_ZEN1) || cpu_feature_enabled(X86_FEATURE_ZEN2)) {
 			if (c->x86_model > 0x60 && c->x86_model < 0xaf)
 				goto warn;
 		} else if (cpu_feature_enabled(X86_FEATURE_ZEN3) || cpu_feature_enabled(X86_FEATURE_ZEN4)) {
-			if ((c->x86_model > 0x00 && c->x86_model < 0x0F) || (c->x86_model > 0x2f && c->x86_model < 0xaf) ||
-				(c->x86_model > 0x1f && c->x86_model < 0x1f)) {
+			if ((c->x86_model > 0x10 && c->x86_model < 0x1F) || (c->x86_model > 0x40 && c->x86_model < 0xaf))
 				goto warn;
-			}
-		} else {
+		} else if (cpu_feature_enabled(X86_FEATURE_ZEN5)) {
 			goto warn;
 		}
 	}
@@ -1964,9 +1973,9 @@ static bool amd_cppc_supported(void)
 	return true;
 
 warn:
-	pr_debug_once("The CPPC feature is supported but currently disabled by the BIOS.\n"
-					"Please enable it if your BIOS supports the CPPC option.\n");
-	return false;
+	pr_notice_once("The CPPC feature is supported but currently disabled by the BIOS.\n"
+					"Please enable it if your BIOS has the CPPC option.\n");
+	return true;
 }
 
 static int __init amd_pstate_init(void)
@@ -1996,18 +2005,24 @@ static int __init amd_pstate_init(void)
 	/* check if this machine need CPPC quirks */
 	dmi_check_system(amd_pstate_quirks_table);
 
-	/* get default driver mode for loading */
-	if (cppc_state == AMD_PSTATE_UNDEFINED)
-		cppc_state = CONFIG_X86_AMD_PSTATE_DEFAULT_MODE;
-
-	/* Disable on the following configs by default:
-	 * 1. Undefined platforms
-	 * 2. Server platforms
+	/*
+	 * get driver mode for loading from command line choice or kernel config
+	 * cppc_state will be AMD_PSTATE_UNDEFINED if no command line input
+	 * command line choice will override the kconfig option
 	 */
-	if (amd_pstate_acpi_pm_profile_undefined() ||
-		amd_pstate_acpi_pm_profile_server()) {
-		pr_info("driver load is disabled for server or undefined platform\n");
-		return -ENODEV;
+	if (cppc_state == AMD_PSTATE_UNDEFINED) {
+		/* Disable on the following configs by default:
+		 * 1. Undefined platforms
+		 * 2. Server platforms
+		 * 3. Shared memory designs
+		 */
+		if (amd_pstate_acpi_pm_profile_undefined() ||
+		    amd_pstate_acpi_pm_profile_server()) {
+			pr_info("driver load is disabled, boot with specific mode to enable this\n");
+			return -ENODEV;
+		}
+		/* get driver mode from kernel config option [1:4] */
+		cppc_state = CONFIG_X86_AMD_PSTATE_DEFAULT_MODE;
 	}
 
 	switch (cppc_state) {
-- 
2.45.1.145.g83f1add914

