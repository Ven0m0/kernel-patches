From cc9afa6aeb9255e55b8807d4cf739603f96622d8 Mon Sep 17 00:00:00 2001
From: Peter Zijlstra <peterz@infradead.org>
Date: Fri, 22 Sep 2023 21:56:06 +0200
Subject: [PATCH 6/6] futex: Force futex hash collision

If you hate performance -- use this.

Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
---
 kernel/futex/core.c     | 6 ++++++
 kernel/sched/features.h | 2 ++
 2 files changed, 8 insertions(+)

diff --git a/kernel/futex/core.c b/kernel/futex/core.c
index 9b7ea6b3e..df61433ba 100644
--- a/kernel/futex/core.c
+++ b/kernel/futex/core.c
@@ -129,6 +129,9 @@ static int futex_put_value(u32 val, u32 __user *to, unsigned int flags)
 	}
 }
 
+#include <linux/sched/cputime.h>
+#include "../sched/sched.h"
+
 /**
  * futex_hash - Return the hash bucket in the global hash
  * @key:	Pointer to the futex key for which the hash is calculated
@@ -160,6 +163,9 @@ struct futex_hash_bucket *futex_hash(union futex_key *key)
 		}
 	}
 
+	if (sched_feat(FUTEX_SQUASH))
+		hash = 0;
+
 	return &futex_queues[node][hash & (futex_hashsize - 1)];
 }
 
diff --git a/kernel/sched/features.h b/kernel/sched/features.h
index 143f55df8..2dcbeb031 100644
--- a/kernel/sched/features.h
+++ b/kernel/sched/features.h
@@ -87,3 +87,5 @@ SCHED_FEAT(UTIL_EST, true)
 SCHED_FEAT(LATENCY_WARN, false)
 
 SCHED_FEAT(HZ_BW, true)
+
+SCHED_FEAT(FUTEX_SQUASH, false)
-- 
2.44.0.325.g11c821f2f2

