From ffa2e2b9af2dfe49089fe1354325d31f18953636 Mon Sep 17 00:00:00 2001
From: Oleksandr Natalenko <oleksandr@natalenko.name>
Date: Thu, 9 May 2024 12:31:47 +0200
Subject: [PATCH 18/36] cpufreq: amd-pstate: rename boost to not conflict with
 acpi_cppc

Signed-off-by: Oleksandr Natalenko <oleksandr@natalenko.name>
---
 Documentation/admin-guide/pm/amd-pstate.rst |  8 ++++----
 drivers/cpufreq/amd-pstate.c                | 10 +++++-----
 2 files changed, 9 insertions(+), 9 deletions(-)

diff --git a/Documentation/admin-guide/pm/amd-pstate.rst b/Documentation/admin-guide/pm/amd-pstate.rst
index 98e43c53c..d190ea884 100644
--- a/Documentation/admin-guide/pm/amd-pstate.rst
+++ b/Documentation/admin-guide/pm/amd-pstate.rst
@@ -281,8 +281,8 @@ integer values defined between 0 to 255 when EPP feature is enabled by platform
 firmware, if EPP feature is disabled, driver will ignore the written value
 This attribute is read-write.
 
-``boost``
-The `boost` sysfs attribute provides control over the CPU core
+``amd_pstate_boost``
+The `amd_pstate_boost` sysfs attribute provides control over the CPU core
 performance boost, allowing users to manage the maximum frequency limitation
 of the CPU. This attribute can be used to enable or disable the boost feature
 on individual CPUs.
@@ -293,9 +293,9 @@ On the other hand, disabling the boost feature restricts the CPU to operate at t
 base frequency, which may be desirable in certain scenarios to prioritize power
 efficiency or manage temperature.
 
-To manipulate the `boost` attribute, users can write a value of `0` to disable the
+To manipulate the `amd_pstate_boost` attribute, users can write a value of `0` to disable the
 boost or `1` to enable it, for the respective CPU using the sysfs path
-`/sys/devices/system/cpu/cpuX/cpufreq/boost`, where `X` represents the CPU number.
+`/sys/devices/system/cpu/cpuX/cpufreq/amd_pstate_boost`, where `X` represents the CPU number.
 
 It is important to note that modifying the global variable
 `amd_pstate_global_params.cpb_boost` will override the individual CPU settings.
diff --git a/drivers/cpufreq/amd-pstate.c b/drivers/cpufreq/amd-pstate.c
index ab15c42d9..b291b6496 100644
--- a/drivers/cpufreq/amd-pstate.c
+++ b/drivers/cpufreq/amd-pstate.c
@@ -1387,7 +1387,7 @@ static int amd_pstate_cpu_boost(int cpu, bool state)
 	return ret < 0 ? ret : 0;
 }
 
-static ssize_t show_boost(struct cpufreq_policy *policy, char *buf)
+static ssize_t show_amd_pstate_boost(struct cpufreq_policy *policy, char *buf)
 {
 	struct amd_cpudata *cpudata = policy->driver_data;
 	bool boost_val;
@@ -1397,7 +1397,7 @@ static ssize_t show_boost(struct cpufreq_policy *policy, char *buf)
 	return sysfs_emit(buf, "%u\n", boost_val);
 }
 
-static ssize_t store_boost(
+static ssize_t store_amd_pstate_boost(
 		struct cpufreq_policy *policy, const char *buf, size_t count)
 {
 	bool boost_val;
@@ -1456,7 +1456,7 @@ cpufreq_freq_attr_ro(amd_pstate_prefcore_ranking);
 cpufreq_freq_attr_ro(amd_pstate_hw_prefcore);
 cpufreq_freq_attr_rw(energy_performance_preference);
 cpufreq_freq_attr_ro(energy_performance_available_preferences);
-cpufreq_freq_attr_rw(boost);
+cpufreq_freq_attr_rw(amd_pstate_boost);
 static DEVICE_ATTR_RW(status);
 static DEVICE_ATTR_RO(prefcore);
 static DEVICE_ATTR_RW(cpb_boost);
@@ -1467,7 +1467,7 @@ static struct freq_attr *amd_pstate_attr[] = {
 	&amd_pstate_highest_perf,
 	&amd_pstate_prefcore_ranking,
 	&amd_pstate_hw_prefcore,
-	&boost,
+	&amd_pstate_boost,
 	NULL,
 };
 
@@ -1479,7 +1479,7 @@ static struct freq_attr *amd_pstate_epp_attr[] = {
 	&amd_pstate_hw_prefcore,
 	&energy_performance_preference,
 	&energy_performance_available_preferences,
-	&boost,
+	&amd_pstate_boost,
 	NULL,
 };
 
-- 
2.45.1.145.g83f1add914

