.
├── amd-pstate-patches
│   └── 0001-amd-6.7-merge-changes-from-dev-tree.patch
├── amd-pstate-patches-all
│   └── 0001-amd-pstate-patches.patch
├── amd-pstate-patches-sep
│   ├── 0001-x86-Drop-CPU_SUP_INTEL-from-SCHED_MC_PRIO-for-the-ex.patch
│   ├── 0002-acpi-cppc-Add-get-the-highest-performance-cppc-contr.patch
│   ├── 0003-cpufreq-amd-pstate-Enable-amd-pstate-preferred-core-.patch
│   ├── 0004-cpufreq-Add-a-notification-message-that-the-highest-.patch
│   ├── 0005-cpufreq-amd-pstate-Update-amd-pstate-preferred-core-.patch
│   ├── 0006-Documentation-amd-pstate-introduce-amd-pstate-prefer.patch
│   └── 0007-Documentation-introduce-amd-pstate-preferrd-core-mod.patch
├── amd-pstate-patches-v2
│   └── 0001-amd-6.7-merge-changes-from-dev-tree.patch
├── amd-pstate-patches-v2-all
│   └── 0001-amd-pstate-patches.patch
├── amd-pstate-patches-v2-sep
│   ├── 0001-x86-Drop-CPU_SUP_INTEL-from-SCHED_MC_PRIO-for-the-ex.patch
│   ├── 0002-ACPI-CPPC-Add-get-the-highest-performance-cppc-contr.patch
│   ├── 0003-cpufreq-amd-pstate-Enable-amd-pstate-preferred-core-.patch
│   ├── 0004-cpufreq-Add-a-notification-message-that-the-highest-.patch
│   ├── 0005-cpufreq-amd-pstate-Update-amd-pstate-preferred-core-.patch
│   ├── 0006-Documentation-amd-pstate-introduce-amd-pstate-prefer.patch
│   └── 0007-Documentation-introduce-amd-pstate-preferrd-core-mod.patch
├── amd-pstate-patches-v3
│   └── 0001-amd-6.7-merge-changes-from-dev-tree.patch
├── amd-pstate-patches-v3-all
│   └── 0001-amd-pstate-patches.patch
├── amd-pstate-patches-v3-sep
│   ├── 0001-x86-Drop-CPU_SUP_INTEL-from-SCHED_MC_PRIO-for-the-ex.patch
│   ├── 0002-ACPI-CPPC-Add-get-the-highest-performance-cppc-contr.patch
│   ├── 0003-cpufreq-amd-pstate-Enable-amd-pstate-preferred-core-.patch
│   ├── 0004-cpufreq-Add-a-notification-message-that-the-highest-.patch
│   ├── 0005-cpufreq-amd-pstate-Update-amd-pstate-preferred-core-.patch
│   ├── 0006-Documentation-amd-pstate-introduce-amd-pstate-prefer.patch
│   └── 0007-Documentation-introduce-amd-pstate-preferrd-core-mod.patch
├── arch-patches
│   └── 0001-arch-patches.patch
├── arch-patches-sep
│   ├── 0001-ZEN-Add-sysctl-and-CONFIG-to-disallow-unprivileged-C.patch
│   └── 0002-drivers-firmware-skip-simpledrm-if-nvidia-drm.modese.patch
├── arch-patches-v2
│   └── 0001-arch-patches.patch
├── arch-patches-v2-sep
│   ├── 0001-ZEN-Add-sysctl-and-CONFIG-to-disallow-unprivileged-C.patch
│   ├── 0002-drivers-firmware-skip-simpledrm-if-nvidia-drm.modese.patch
│   ├── 0003-wifi-ath11k-rely-on-mac80211-debugfs-handling-for-vi.patch
│   └── 0004-arch-Kconfig-Default-to-maximum-amount-of-ASLR-bits.patch
├── bbr3-patches
│   └── 0001-tcp-bbr3-initial-import.patch
├── bcachefs-next-patches
│   └── 0001-bcachefs-6.7-merge-changes-from-dev-tree.patch
├── bcachefs-next-patches-v2
│   └── 0001-bcachefs-6.7-merge-changes-from-dev-tree.patch
├── bcachefs-next-patches-v3
│   └── 0001-bcachefs-6.7-merge-changes-from-dev-tree.patch
├── bcachefs-next-patches-v4
│   └── 0001-bcachefs-6.7-merge-changes-from-dev-tree.patch
├── bcachefs-next-patches-v5
│   └── 0001-bcachefs-6.7-merge-changes-from-dev-tree.patch
├── bcachefs-next-patches-v6
│   └── 0001-bcachefs-6.7-merge-changes-from-dev-tree.patch
├── bcachefs-patches
│   └── 0001-bcachefs-6.7-merge-changes-from-dev-tree.patch
├── bcachefs-patches-v2
│   └── 0001-bcachefs-6.7-merge-changes-from-dev-tree.patch
├── bcachefs-patches-v3
│   └── 0001-bcachefs-6.7-merge-changes-from-dev-tree.patch
├── bcachefs-patches-v4
│   └── 0001-bcachefs-6.7-merge-changes-from-dev-tree.patch
├── bcachefs-patches-v5
│   └── 0001-bcachefs-6.7-merge-changes-from-dev-tree.patch
├── bcachefs-patches-v6
│   └── 0001-bcachefs-6.7-merge-changes-from-dev-tree.patch
├── bcachefs-upstream-patches
│   └── 0001-bcachefs-6.7-merge-changes-from-dev-tree.patch
├── bcachefs-upstream-patches-v2
│   └── 0001-bcachefs-6.7-merge-changes-from-dev-tree.patch
├── bcachefs-upstream-patches-v3
│   └── 0001-bcachefs-6.7-merge-changes-from-dev-tree.patch
├── bcachefs-upstream-patches-v4
│   └── 0001-bcachefs-6.7-merge-changes-from-dev-tree.patch
├── bore-patches
│   └── 0001-linux6.7-bore4.0.0.patch
├── bore-patches-v2
│   └── 0001-linux6.7-bore4.0.1.patch
├── bore-patches-v3
│   └── 0001-linux6.7-bore4.0.2.patch
├── bore-patches-v4
│   └── 0001-linux6.7-bore4.0.3.patch
├── bore-patches-v5
│   └── 0001-linux6.7-bore4.0.4.patch
├── bore-patches-v6
│   └── 0001-linux6.7-bore4.1.0.patch
├── bore-patches-v7
│   └── 0001-linux6.7-bore4.1.1.patch
├── bore-sched-ext-patches
│   └── 0001-bore-6.7-introduce-BORE-Scheduler-with-BPF-extensibl.patch
├── bore-sched-ext-patches-all
│   └── 0001-bore-sched-ext-patches.patch
├── bore-sched-ext-patches-sep
│   ├── 0001-sched-6.7-Merge-BPF-changes.patch
│   ├── 0002-cgroup-Implement-cgroup_show_cftypes.patch
│   ├── 0003-sched-Restructure-sched_class-order-sanity-checks-in.patch
│   ├── 0004-sched-Allow-sched_cgroup_fork-to-fail-and-introduce-.patch
│   ├── 0005-sched-Add-sched_class-reweight_task.patch
│   ├── 0006-sched-Add-sched_class-switching_to-and-expose-check_.patch
│   ├── 0007-sched-Factor-out-cgroup-weight-conversion-functions.patch
│   ├── 0008-sched-Expose-css_tg-and-__setscheduler_prio.patch
│   ├── 0009-sched-Enumerate-CPU-cgroup-file-types.patch
│   ├── 0010-sched-Add-reason-to-sched_class-rq_-on-off-line.patch
│   ├── 0011-sched-Add-normal_policy.patch
│   ├── 0012-sched_ext-Add-boilerplate-for-extensible-scheduler-c.patch
│   ├── 0013-sched_ext-Implement-BPF-extensible-scheduler-class.patch
│   ├── 0014-sched_ext-Add-scx_simple-and-scx_example_qmap-exampl.patch
│   ├── 0015-sched_ext-Add-sysrq-S-which-disables-the-BPF-schedul.patch
│   ├── 0016-sched_ext-Implement-runnable-task-stall-watchdog.patch
│   ├── 0017-sched_ext-Allow-BPF-schedulers-to-disallow-specific-.patch
│   ├── 0018-sched_ext-Allow-BPF-schedulers-to-switch-all-eligibl.patch
│   ├── 0019-sched_ext-Print-sched_ext-info-when-dumping-stack.patch
│   ├── 0020-sched_ext-Implement-scx_bpf_kick_cpu-and-task-preemp.patch
│   ├── 0021-sched_ext-Add-a-central-scheduler-which-makes-all-sc.patch
│   ├── 0022-sched_ext-Make-watchdog-handle-ops.dispatch-looping-.patch
│   ├── 0023-sched_ext-Add-task-state-tracking-operations.patch
│   ├── 0024-sched_ext-Implement-tickless-support.patch
│   ├── 0025-sched_ext-Track-tasks-that-are-subjects-of-the-in-fl.patch
│   ├── 0026-sched_ext-Add-cgroup-support.patch
│   ├── 0027-sched_ext-Add-a-cgroup-based-core-scheduling-schedul.patch
│   ├── 0028-sched_ext-Add-a-cgroup-scheduler-which-uses-flattene.patch
│   ├── 0029-sched_ext-Implement-SCX_KICK_WAIT.patch
│   ├── 0030-sched_ext-Implement-sched_ext_ops.cpu_acquire-releas.patch
│   ├── 0031-sched_ext-Implement-sched_ext_ops.cpu_online-offline.patch
│   ├── 0032-sched_ext-Implement-core-sched-support.patch
│   ├── 0033-sched_ext-Add-vtime-ordered-priority-queue-to-dispat.patch
│   ├── 0034-sched_ext-Documentation-scheduler-Document-extensibl.patch
│   ├── 0035-sched_ext-Add-a-basic-userland-vruntime-scheduler.patch
│   ├── 0036-sched_ext-Add-scx_rusty-a-rust-userspace-hybrid-sche.patch
│   ├── 0037-sched_ext-Add-scx_layered-a-highly-configurable-mult.patch
│   ├── 0038-scx-Move-scx_ops_enable_state_str-outside-CONFIG_SCH.patch
│   ├── 0039-scx-Fix-a-straggling-atomic64_set.patch
│   ├── 0040-scx-Use-.bpf.-sub-skel.h-suffix-instead-of-.-sub-ske.patch
│   ├── 0041-scx-Add-s-uSIZE-typedefs-in-scx_common.h.patch
│   ├── 0042-scx_-rusty-layered-Generate-skel-file-in-OUT_DIR.patch
│   ├── 0043-scx_-rusty-layered-ravg_read-is-now-provided-by-scx_.patch
│   ├── 0044-scx_-rusty-layered-Make-naming-and-build-consistent-.patch
│   ├── 0045-scx_-rusty-layered-Run-bindgen-s-clang-with-CLANG_CF.patch
│   ├── 0046-scx_-rusty-layered-Factor-out-build.rs-s-into-scx_ut.patch
│   ├── 0047-scx_-rusty-layered-Follow-scx_utils-BpfBuilder-API-u.patch
│   ├── 0048-scx_-layered-rusty-Minor-build-updates.patch
│   ├── 0049-scx-Move-common-headers-under-include-scx.patch
│   ├── 0050-scx-More-include-path-and-build-updates.patch
│   ├── 0051-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0052-scx-Disable-vtime-ordering-for-internal-DSQs.patch
│   ├── 0053-scx-Enforce-either-or-usage-of-DSQ-FIFO-PRIQ-dispatc.patch
│   ├── 0054-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0055-scx-Remove-now-unused-rb_node-from-first_local_task.patch
│   ├── 0056-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0057-scx-Add-missing-to-error-invocation-in-Makefile.patch
│   ├── 0058-scx-Add-skeleton-for-scx-testing-framework.patch
│   ├── 0059-kernfs-convert-kernfs_idr_lock-to-an-irq-safe-raw-sp.patch
│   ├── 0060-sched_ext-fix-race-in-scx_move_task-with-exiting-tas.patch
│   ├── 0061-scx-Support-direct-dispatching-from-ops.select_cpu.patch
│   ├── 0062-scx-Remove-SCX_ENQ_LOCAL-flag.patch
│   ├── 0063-scx-Add-scx_bpf_select_cpu_dfl-kfunc.patch
│   ├── 0064-scx-Add-selftests-for-new-select_cpu-dispatch-semant.patch
│   ├── 0065-scx-Error-for-a-priq-builtin-DSQ-in-dispatch_enqueue.patch
│   ├── 0066-scx-Add-testcases-for-vtime-dispatching-to-builtin-D.patch
│   ├── 0067-scx-Always-set-task-scx-weight-before-enable.patch
│   ├── 0068-scx-Call-enable-disable-on-entry-exit-to-scx.patch
│   ├── 0069-scx-Rename-prep_enable-and-cancel_enable-add-exit_ta.patch
│   ├── 0070-scx-Add-init_enable_count-testcase.patch
│   ├── 0071-scx-Move-sched_ext_entity.ddsq_id-out-of-modifiable-.patch
│   ├── 0072-scx-Add-missing-DSQ-fallback-test-files.patch
│   ├── 0073-scx-Claim-idle-core-in-scx_select_cpu_dfl-for-nr_cpu.patch
│   ├── 0074-scx-Make-select_cpu_dfl-test-a-bit-less-brittle.patch
│   └── 0075-linux6.7-bore4.0.0.patch
├── bore-sched-ext-patches-v10
│   └── 0001-bore-6.7-introduce-BORE-Scheduler-with-BPF-extensibl.patch
├── bore-sched-ext-patches-v10-all
│   └── 0001-bore-sched-ext-patches.patch
├── bore-sched-ext-patches-v10-sep
│   ├── 0001-sched-6.7-Merge-BPF-changes.patch
│   ├── 0002-cgroup-Implement-cgroup_show_cftypes.patch
│   ├── 0003-sched-Restructure-sched_class-order-sanity-checks-in.patch
│   ├── 0004-sched-Allow-sched_cgroup_fork-to-fail-and-introduce-.patch
│   ├── 0005-sched-Add-sched_class-reweight_task.patch
│   ├── 0006-sched-Add-sched_class-switching_to-and-expose-check_.patch
│   ├── 0007-sched-Factor-out-cgroup-weight-conversion-functions.patch
│   ├── 0008-sched-Expose-css_tg-and-__setscheduler_prio.patch
│   ├── 0009-sched-Enumerate-CPU-cgroup-file-types.patch
│   ├── 0010-sched-Add-reason-to-sched_class-rq_-on-off-line.patch
│   ├── 0011-sched-Add-normal_policy.patch
│   ├── 0012-sched_ext-Add-boilerplate-for-extensible-scheduler-c.patch
│   ├── 0013-sched_ext-Implement-BPF-extensible-scheduler-class.patch
│   ├── 0014-sched_ext-Add-scx_simple-and-scx_example_qmap-exampl.patch
│   ├── 0015-sched_ext-Add-sysrq-S-which-disables-the-BPF-schedul.patch
│   ├── 0016-sched_ext-Implement-runnable-task-stall-watchdog.patch
│   ├── 0017-sched_ext-Allow-BPF-schedulers-to-disallow-specific-.patch
│   ├── 0018-sched_ext-Allow-BPF-schedulers-to-switch-all-eligibl.patch
│   ├── 0019-sched_ext-Print-sched_ext-info-when-dumping-stack.patch
│   ├── 0020-sched_ext-Implement-scx_bpf_kick_cpu-and-task-preemp.patch
│   ├── 0021-sched_ext-Add-a-central-scheduler-which-makes-all-sc.patch
│   ├── 0022-sched_ext-Make-watchdog-handle-ops.dispatch-looping-.patch
│   ├── 0023-sched_ext-Add-task-state-tracking-operations.patch
│   ├── 0024-sched_ext-Implement-tickless-support.patch
│   ├── 0025-sched_ext-Track-tasks-that-are-subjects-of-the-in-fl.patch
│   ├── 0026-sched_ext-Add-cgroup-support.patch
│   ├── 0027-sched_ext-Add-a-cgroup-based-core-scheduling-schedul.patch
│   ├── 0028-sched_ext-Add-a-cgroup-scheduler-which-uses-flattene.patch
│   ├── 0029-sched_ext-Implement-SCX_KICK_WAIT.patch
│   ├── 0030-sched_ext-Implement-sched_ext_ops.cpu_acquire-releas.patch
│   ├── 0031-sched_ext-Implement-sched_ext_ops.cpu_online-offline.patch
│   ├── 0032-sched_ext-Implement-core-sched-support.patch
│   ├── 0033-sched_ext-Add-vtime-ordered-priority-queue-to-dispat.patch
│   ├── 0034-sched_ext-Documentation-scheduler-Document-extensibl.patch
│   ├── 0035-sched_ext-Add-a-basic-userland-vruntime-scheduler.patch
│   ├── 0036-sched_ext-Add-scx_rusty-a-rust-userspace-hybrid-sche.patch
│   ├── 0037-sched_ext-Add-scx_layered-a-highly-configurable-mult.patch
│   ├── 0038-scx-Move-scx_ops_enable_state_str-outside-CONFIG_SCH.patch
│   ├── 0039-scx-Fix-a-straggling-atomic64_set.patch
│   ├── 0040-scx-Use-.bpf.-sub-skel.h-suffix-instead-of-.-sub-ske.patch
│   ├── 0041-scx-Add-s-uSIZE-typedefs-in-scx_common.h.patch
│   ├── 0042-scx_-rusty-layered-Generate-skel-file-in-OUT_DIR.patch
│   ├── 0043-scx_-rusty-layered-ravg_read-is-now-provided-by-scx_.patch
│   ├── 0044-scx_-rusty-layered-Make-naming-and-build-consistent-.patch
│   ├── 0045-scx_-rusty-layered-Run-bindgen-s-clang-with-CLANG_CF.patch
│   ├── 0046-scx_-rusty-layered-Factor-out-build.rs-s-into-scx_ut.patch
│   ├── 0047-scx_-rusty-layered-Follow-scx_utils-BpfBuilder-API-u.patch
│   ├── 0048-scx_-layered-rusty-Minor-build-updates.patch
│   ├── 0049-scx-Move-common-headers-under-include-scx.patch
│   ├── 0050-scx-More-include-path-and-build-updates.patch
│   ├── 0051-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0052-scx-Disable-vtime-ordering-for-internal-DSQs.patch
│   ├── 0053-scx-Enforce-either-or-usage-of-DSQ-FIFO-PRIQ-dispatc.patch
│   ├── 0054-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0055-scx-Remove-now-unused-rb_node-from-first_local_task.patch
│   ├── 0056-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0057-scx-Add-missing-to-error-invocation-in-Makefile.patch
│   ├── 0058-scx-Add-skeleton-for-scx-testing-framework.patch
│   ├── 0059-kernfs-convert-kernfs_idr_lock-to-an-irq-safe-raw-sp.patch
│   ├── 0060-sched_ext-fix-race-in-scx_move_task-with-exiting-tas.patch
│   ├── 0061-scx-Support-direct-dispatching-from-ops.select_cpu.patch
│   ├── 0062-scx-Remove-SCX_ENQ_LOCAL-flag.patch
│   ├── 0063-scx-Add-scx_bpf_select_cpu_dfl-kfunc.patch
│   ├── 0064-scx-Add-selftests-for-new-select_cpu-dispatch-semant.patch
│   ├── 0065-scx-Error-for-a-priq-builtin-DSQ-in-dispatch_enqueue.patch
│   ├── 0066-scx-Add-testcases-for-vtime-dispatching-to-builtin-D.patch
│   ├── 0067-scx-Always-set-task-scx-weight-before-enable.patch
│   ├── 0068-scx-Call-enable-disable-on-entry-exit-to-scx.patch
│   ├── 0069-scx-Rename-prep_enable-and-cancel_enable-add-exit_ta.patch
│   ├── 0070-scx-Add-init_enable_count-testcase.patch
│   ├── 0071-scx-Move-sched_ext_entity.ddsq_id-out-of-modifiable-.patch
│   ├── 0072-scx-Add-missing-DSQ-fallback-test-files.patch
│   ├── 0073-scx-Claim-idle-core-in-scx_select_cpu_dfl-for-nr_cpu.patch
│   ├── 0074-scx-Make-select_cpu_dfl-test-a-bit-less-brittle.patch
│   ├── 0075-scx-Set-default-slice-for-default-select_cpu-dispatc.patch
│   ├── 0076-scx-Avoid-possible-deadlock-with-cpus_read_lock.patch
│   ├── 0077-scx-Use-READ-WRITE_ONCE-for-scx_watchdog_timeout-tim.patch
│   ├── 0078-scx-Rename-rq-scx.watchdog_list-and-friends-to-runna.patch
│   ├── 0079-scx-Factor-out-scx_ops_bypass-and-s-scx_ops_disablin.patch
│   ├── 0080-scx-Implement-bypass-depth-and-always-bypass-while-d.patch
│   ├── 0081-scx-Implement-turning-off-bypassing.patch
│   ├── 0082-scx-Optimize-scx_ops_bypass.patch
│   ├── 0083-scx-Expose-bypassing-state-to-userland.patch
│   ├── 0084-scx-s-register_ext_kfuncs-scx_init.patch
│   ├── 0085-scx-Bypass-while-PM-operations-are-in-progress.patch
│   ├── 0086-scx-Disabling-scx_bpf_kick_cpu-while-bypassing.patch
│   ├── 0087-Revert-scx-Avoid-possible-deadlock-with-cpus_read_lo.patch
│   ├── 0088-scx-Make-scx_task_state-handling-more-idiomatic.patch
│   ├── 0089-scx-Sync-schedulers-from-SCX-v0.1.5-74923c6cdbc3.patch
│   ├── 0090-scx-Fix-direct-dispatch-for-non-builtin-DSQs.patch
│   ├── 0091-scx-Keep-track-of-enq-flags-in-direct-dispatch.patch
│   ├── 0092-scx-Test-vtime-dispatching-from-ops.select_cpu.patch
│   ├── 0093-scx-Implement-scx-selftests-framework.patch
│   ├── 0094-scx-Convert-remaining-testcases-to-use-new-framework.patch
│   ├── 0095-scx-Update-ddsp-testcases-to-check-for-error-exits.patch
│   ├── 0096-scx-Copy-scx_exit_kind-to-scx_test.h.patch
│   ├── 0097-scx-Narrow-cpus_read_lock-critical-section-in-scx_op.patch
│   ├── 0098-scx-Reorder-scx_fork_rwsem-cpu_hotplug_lock-and-scx_.patch
│   ├── 0099-scx-Sync-from-scx-repo.patch
│   └── 0100-linux6.7-bore4.0.1.patch
├── bore-sched-ext-patches-v11
│   └── 0001-bore-6.7-introduce-BORE-Scheduler-with-BPF-extensibl.patch
├── bore-sched-ext-patches-v11-all
│   └── 0001-bore-sched-ext-patches.patch
├── bore-sched-ext-patches-v11-sep
│   ├── 0001-sched-6.7-Merge-BPF-changes.patch
│   ├── 0002-cgroup-Implement-cgroup_show_cftypes.patch
│   ├── 0003-sched-Restructure-sched_class-order-sanity-checks-in.patch
│   ├── 0004-sched-Allow-sched_cgroup_fork-to-fail-and-introduce-.patch
│   ├── 0005-sched-Add-sched_class-reweight_task.patch
│   ├── 0006-sched-Add-sched_class-switching_to-and-expose-check_.patch
│   ├── 0007-sched-Factor-out-cgroup-weight-conversion-functions.patch
│   ├── 0008-sched-Expose-css_tg-and-__setscheduler_prio.patch
│   ├── 0009-sched-Enumerate-CPU-cgroup-file-types.patch
│   ├── 0010-sched-Add-reason-to-sched_class-rq_-on-off-line.patch
│   ├── 0011-sched-Add-normal_policy.patch
│   ├── 0012-sched_ext-Add-boilerplate-for-extensible-scheduler-c.patch
│   ├── 0013-sched_ext-Implement-BPF-extensible-scheduler-class.patch
│   ├── 0014-sched_ext-Add-scx_simple-and-scx_example_qmap-exampl.patch
│   ├── 0015-sched_ext-Add-sysrq-S-which-disables-the-BPF-schedul.patch
│   ├── 0016-sched_ext-Implement-runnable-task-stall-watchdog.patch
│   ├── 0017-sched_ext-Allow-BPF-schedulers-to-disallow-specific-.patch
│   ├── 0018-sched_ext-Allow-BPF-schedulers-to-switch-all-eligibl.patch
│   ├── 0019-sched_ext-Print-sched_ext-info-when-dumping-stack.patch
│   ├── 0020-sched_ext-Implement-scx_bpf_kick_cpu-and-task-preemp.patch
│   ├── 0021-sched_ext-Add-a-central-scheduler-which-makes-all-sc.patch
│   ├── 0022-sched_ext-Make-watchdog-handle-ops.dispatch-looping-.patch
│   ├── 0023-sched_ext-Add-task-state-tracking-operations.patch
│   ├── 0024-sched_ext-Implement-tickless-support.patch
│   ├── 0025-sched_ext-Track-tasks-that-are-subjects-of-the-in-fl.patch
│   ├── 0026-sched_ext-Add-cgroup-support.patch
│   ├── 0027-sched_ext-Add-a-cgroup-based-core-scheduling-schedul.patch
│   ├── 0028-sched_ext-Add-a-cgroup-scheduler-which-uses-flattene.patch
│   ├── 0029-sched_ext-Implement-SCX_KICK_WAIT.patch
│   ├── 0030-sched_ext-Implement-sched_ext_ops.cpu_acquire-releas.patch
│   ├── 0031-sched_ext-Implement-sched_ext_ops.cpu_online-offline.patch
│   ├── 0032-sched_ext-Implement-core-sched-support.patch
│   ├── 0033-sched_ext-Add-vtime-ordered-priority-queue-to-dispat.patch
│   ├── 0034-sched_ext-Documentation-scheduler-Document-extensibl.patch
│   ├── 0035-sched_ext-Add-a-basic-userland-vruntime-scheduler.patch
│   ├── 0036-sched_ext-Add-scx_rusty-a-rust-userspace-hybrid-sche.patch
│   ├── 0037-sched_ext-Add-scx_layered-a-highly-configurable-mult.patch
│   ├── 0038-scx-Move-scx_ops_enable_state_str-outside-CONFIG_SCH.patch
│   ├── 0039-scx-Fix-a-straggling-atomic64_set.patch
│   ├── 0040-scx-Use-.bpf.-sub-skel.h-suffix-instead-of-.-sub-ske.patch
│   ├── 0041-scx-Add-s-uSIZE-typedefs-in-scx_common.h.patch
│   ├── 0042-scx_-rusty-layered-Generate-skel-file-in-OUT_DIR.patch
│   ├── 0043-scx_-rusty-layered-ravg_read-is-now-provided-by-scx_.patch
│   ├── 0044-scx_-rusty-layered-Make-naming-and-build-consistent-.patch
│   ├── 0045-scx_-rusty-layered-Run-bindgen-s-clang-with-CLANG_CF.patch
│   ├── 0046-scx_-rusty-layered-Factor-out-build.rs-s-into-scx_ut.patch
│   ├── 0047-scx_-rusty-layered-Follow-scx_utils-BpfBuilder-API-u.patch
│   ├── 0048-scx_-layered-rusty-Minor-build-updates.patch
│   ├── 0049-scx-Move-common-headers-under-include-scx.patch
│   ├── 0050-scx-More-include-path-and-build-updates.patch
│   ├── 0051-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0052-scx-Disable-vtime-ordering-for-internal-DSQs.patch
│   ├── 0053-scx-Enforce-either-or-usage-of-DSQ-FIFO-PRIQ-dispatc.patch
│   ├── 0054-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0055-scx-Remove-now-unused-rb_node-from-first_local_task.patch
│   ├── 0056-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0057-scx-Add-missing-to-error-invocation-in-Makefile.patch
│   ├── 0058-scx-Add-skeleton-for-scx-testing-framework.patch
│   ├── 0059-kernfs-convert-kernfs_idr_lock-to-an-irq-safe-raw-sp.patch
│   ├── 0060-sched_ext-fix-race-in-scx_move_task-with-exiting-tas.patch
│   ├── 0061-scx-Support-direct-dispatching-from-ops.select_cpu.patch
│   ├── 0062-scx-Remove-SCX_ENQ_LOCAL-flag.patch
│   ├── 0063-scx-Add-scx_bpf_select_cpu_dfl-kfunc.patch
│   ├── 0064-scx-Add-selftests-for-new-select_cpu-dispatch-semant.patch
│   ├── 0065-scx-Error-for-a-priq-builtin-DSQ-in-dispatch_enqueue.patch
│   ├── 0066-scx-Add-testcases-for-vtime-dispatching-to-builtin-D.patch
│   ├── 0067-scx-Always-set-task-scx-weight-before-enable.patch
│   ├── 0068-scx-Call-enable-disable-on-entry-exit-to-scx.patch
│   ├── 0069-scx-Rename-prep_enable-and-cancel_enable-add-exit_ta.patch
│   ├── 0070-scx-Add-init_enable_count-testcase.patch
│   ├── 0071-scx-Move-sched_ext_entity.ddsq_id-out-of-modifiable-.patch
│   ├── 0072-scx-Add-missing-DSQ-fallback-test-files.patch
│   ├── 0073-scx-Claim-idle-core-in-scx_select_cpu_dfl-for-nr_cpu.patch
│   ├── 0074-scx-Make-select_cpu_dfl-test-a-bit-less-brittle.patch
│   ├── 0075-scx-Set-default-slice-for-default-select_cpu-dispatc.patch
│   ├── 0076-scx-Avoid-possible-deadlock-with-cpus_read_lock.patch
│   ├── 0077-scx-Use-READ-WRITE_ONCE-for-scx_watchdog_timeout-tim.patch
│   ├── 0078-scx-Rename-rq-scx.watchdog_list-and-friends-to-runna.patch
│   ├── 0079-scx-Factor-out-scx_ops_bypass-and-s-scx_ops_disablin.patch
│   ├── 0080-scx-Implement-bypass-depth-and-always-bypass-while-d.patch
│   ├── 0081-scx-Implement-turning-off-bypassing.patch
│   ├── 0082-scx-Optimize-scx_ops_bypass.patch
│   ├── 0083-scx-Expose-bypassing-state-to-userland.patch
│   ├── 0084-scx-s-register_ext_kfuncs-scx_init.patch
│   ├── 0085-scx-Bypass-while-PM-operations-are-in-progress.patch
│   ├── 0086-scx-Disabling-scx_bpf_kick_cpu-while-bypassing.patch
│   ├── 0087-Revert-scx-Avoid-possible-deadlock-with-cpus_read_lo.patch
│   ├── 0088-scx-Make-scx_task_state-handling-more-idiomatic.patch
│   ├── 0089-scx-Sync-schedulers-from-SCX-v0.1.5-74923c6cdbc3.patch
│   ├── 0090-scx-Fix-direct-dispatch-for-non-builtin-DSQs.patch
│   ├── 0091-scx-Keep-track-of-enq-flags-in-direct-dispatch.patch
│   ├── 0092-scx-Test-vtime-dispatching-from-ops.select_cpu.patch
│   ├── 0093-scx-Implement-scx-selftests-framework.patch
│   ├── 0094-scx-Convert-remaining-testcases-to-use-new-framework.patch
│   ├── 0095-scx-Update-ddsp-testcases-to-check-for-error-exits.patch
│   ├── 0096-scx-Copy-scx_exit_kind-to-scx_test.h.patch
│   ├── 0097-scx-Narrow-cpus_read_lock-critical-section-in-scx_op.patch
│   ├── 0098-scx-Reorder-scx_fork_rwsem-cpu_hotplug_lock-and-scx_.patch
│   ├── 0099-scx-Sync-from-scx-repo.patch
│   └── 0100-linux6.7-bore4.0.2.patch
├── bore-sched-ext-patches-v12
│   └── 0001-bore-6.7-introduce-BORE-Scheduler-with-BPF-extensibl.patch
├── bore-sched-ext-patches-v12-all
│   └── 0001-bore-sched-ext-patches.patch
├── bore-sched-ext-patches-v12-sep
│   ├── 0001-sched-6.7-Merge-BPF-changes.patch
│   ├── 0002-cgroup-Implement-cgroup_show_cftypes.patch
│   ├── 0003-sched-Restructure-sched_class-order-sanity-checks-in.patch
│   ├── 0004-sched-Allow-sched_cgroup_fork-to-fail-and-introduce-.patch
│   ├── 0005-sched-Add-sched_class-reweight_task.patch
│   ├── 0006-sched-Add-sched_class-switching_to-and-expose-check_.patch
│   ├── 0007-sched-Factor-out-cgroup-weight-conversion-functions.patch
│   ├── 0008-sched-Expose-css_tg-and-__setscheduler_prio.patch
│   ├── 0009-sched-Enumerate-CPU-cgroup-file-types.patch
│   ├── 0010-sched-Add-reason-to-sched_class-rq_-on-off-line.patch
│   ├── 0011-sched-Add-normal_policy.patch
│   ├── 0012-sched_ext-Add-boilerplate-for-extensible-scheduler-c.patch
│   ├── 0013-sched_ext-Implement-BPF-extensible-scheduler-class.patch
│   ├── 0014-sched_ext-Add-scx_simple-and-scx_example_qmap-exampl.patch
│   ├── 0015-sched_ext-Add-sysrq-S-which-disables-the-BPF-schedul.patch
│   ├── 0016-sched_ext-Implement-runnable-task-stall-watchdog.patch
│   ├── 0017-sched_ext-Allow-BPF-schedulers-to-disallow-specific-.patch
│   ├── 0018-sched_ext-Allow-BPF-schedulers-to-switch-all-eligibl.patch
│   ├── 0019-sched_ext-Print-sched_ext-info-when-dumping-stack.patch
│   ├── 0020-sched_ext-Implement-scx_bpf_kick_cpu-and-task-preemp.patch
│   ├── 0021-sched_ext-Add-a-central-scheduler-which-makes-all-sc.patch
│   ├── 0022-sched_ext-Make-watchdog-handle-ops.dispatch-looping-.patch
│   ├── 0023-sched_ext-Add-task-state-tracking-operations.patch
│   ├── 0024-sched_ext-Implement-tickless-support.patch
│   ├── 0025-sched_ext-Track-tasks-that-are-subjects-of-the-in-fl.patch
│   ├── 0026-sched_ext-Add-cgroup-support.patch
│   ├── 0027-sched_ext-Add-a-cgroup-based-core-scheduling-schedul.patch
│   ├── 0028-sched_ext-Add-a-cgroup-scheduler-which-uses-flattene.patch
│   ├── 0029-sched_ext-Implement-SCX_KICK_WAIT.patch
│   ├── 0030-sched_ext-Implement-sched_ext_ops.cpu_acquire-releas.patch
│   ├── 0031-sched_ext-Implement-sched_ext_ops.cpu_online-offline.patch
│   ├── 0032-sched_ext-Implement-core-sched-support.patch
│   ├── 0033-sched_ext-Add-vtime-ordered-priority-queue-to-dispat.patch
│   ├── 0034-sched_ext-Documentation-scheduler-Document-extensibl.patch
│   ├── 0035-sched_ext-Add-a-basic-userland-vruntime-scheduler.patch
│   ├── 0036-sched_ext-Add-scx_rusty-a-rust-userspace-hybrid-sche.patch
│   ├── 0037-sched_ext-Add-scx_layered-a-highly-configurable-mult.patch
│   ├── 0038-scx-Move-scx_ops_enable_state_str-outside-CONFIG_SCH.patch
│   ├── 0039-scx-Fix-a-straggling-atomic64_set.patch
│   ├── 0040-scx-Use-.bpf.-sub-skel.h-suffix-instead-of-.-sub-ske.patch
│   ├── 0041-scx-Add-s-uSIZE-typedefs-in-scx_common.h.patch
│   ├── 0042-scx_-rusty-layered-Generate-skel-file-in-OUT_DIR.patch
│   ├── 0043-scx_-rusty-layered-ravg_read-is-now-provided-by-scx_.patch
│   ├── 0044-scx_-rusty-layered-Make-naming-and-build-consistent-.patch
│   ├── 0045-scx_-rusty-layered-Run-bindgen-s-clang-with-CLANG_CF.patch
│   ├── 0046-scx_-rusty-layered-Factor-out-build.rs-s-into-scx_ut.patch
│   ├── 0047-scx_-rusty-layered-Follow-scx_utils-BpfBuilder-API-u.patch
│   ├── 0048-scx_-layered-rusty-Minor-build-updates.patch
│   ├── 0049-scx-Move-common-headers-under-include-scx.patch
│   ├── 0050-scx-More-include-path-and-build-updates.patch
│   ├── 0051-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0052-scx-Disable-vtime-ordering-for-internal-DSQs.patch
│   ├── 0053-scx-Enforce-either-or-usage-of-DSQ-FIFO-PRIQ-dispatc.patch
│   ├── 0054-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0055-scx-Remove-now-unused-rb_node-from-first_local_task.patch
│   ├── 0056-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0057-scx-Add-missing-to-error-invocation-in-Makefile.patch
│   ├── 0058-scx-Add-skeleton-for-scx-testing-framework.patch
│   ├── 0059-kernfs-convert-kernfs_idr_lock-to-an-irq-safe-raw-sp.patch
│   ├── 0060-sched_ext-fix-race-in-scx_move_task-with-exiting-tas.patch
│   ├── 0061-scx-Support-direct-dispatching-from-ops.select_cpu.patch
│   ├── 0062-scx-Remove-SCX_ENQ_LOCAL-flag.patch
│   ├── 0063-scx-Add-scx_bpf_select_cpu_dfl-kfunc.patch
│   ├── 0064-scx-Add-selftests-for-new-select_cpu-dispatch-semant.patch
│   ├── 0065-scx-Error-for-a-priq-builtin-DSQ-in-dispatch_enqueue.patch
│   ├── 0066-scx-Add-testcases-for-vtime-dispatching-to-builtin-D.patch
│   ├── 0067-scx-Always-set-task-scx-weight-before-enable.patch
│   ├── 0068-scx-Call-enable-disable-on-entry-exit-to-scx.patch
│   ├── 0069-scx-Rename-prep_enable-and-cancel_enable-add-exit_ta.patch
│   ├── 0070-scx-Add-init_enable_count-testcase.patch
│   ├── 0071-scx-Move-sched_ext_entity.ddsq_id-out-of-modifiable-.patch
│   ├── 0072-scx-Add-missing-DSQ-fallback-test-files.patch
│   ├── 0073-scx-Claim-idle-core-in-scx_select_cpu_dfl-for-nr_cpu.patch
│   ├── 0074-scx-Make-select_cpu_dfl-test-a-bit-less-brittle.patch
│   ├── 0075-scx-Set-default-slice-for-default-select_cpu-dispatc.patch
│   ├── 0076-scx-Avoid-possible-deadlock-with-cpus_read_lock.patch
│   ├── 0077-scx-Use-READ-WRITE_ONCE-for-scx_watchdog_timeout-tim.patch
│   ├── 0078-scx-Rename-rq-scx.watchdog_list-and-friends-to-runna.patch
│   ├── 0079-scx-Factor-out-scx_ops_bypass-and-s-scx_ops_disablin.patch
│   ├── 0080-scx-Implement-bypass-depth-and-always-bypass-while-d.patch
│   ├── 0081-scx-Implement-turning-off-bypassing.patch
│   ├── 0082-scx-Optimize-scx_ops_bypass.patch
│   ├── 0083-scx-Expose-bypassing-state-to-userland.patch
│   ├── 0084-scx-s-register_ext_kfuncs-scx_init.patch
│   ├── 0085-scx-Bypass-while-PM-operations-are-in-progress.patch
│   ├── 0086-scx-Disabling-scx_bpf_kick_cpu-while-bypassing.patch
│   ├── 0087-Revert-scx-Avoid-possible-deadlock-with-cpus_read_lo.patch
│   ├── 0088-scx-Make-scx_task_state-handling-more-idiomatic.patch
│   ├── 0089-scx-Sync-schedulers-from-SCX-v0.1.5-74923c6cdbc3.patch
│   ├── 0090-scx-Fix-direct-dispatch-for-non-builtin-DSQs.patch
│   ├── 0091-scx-Keep-track-of-enq-flags-in-direct-dispatch.patch
│   ├── 0092-scx-Test-vtime-dispatching-from-ops.select_cpu.patch
│   ├── 0093-scx-Implement-scx-selftests-framework.patch
│   ├── 0094-scx-Convert-remaining-testcases-to-use-new-framework.patch
│   ├── 0095-scx-Update-ddsp-testcases-to-check-for-error-exits.patch
│   ├── 0096-scx-Copy-scx_exit_kind-to-scx_test.h.patch
│   ├── 0097-scx-Narrow-cpus_read_lock-critical-section-in-scx_op.patch
│   ├── 0098-scx-Reorder-scx_fork_rwsem-cpu_hotplug_lock-and-scx_.patch
│   ├── 0099-scx-Sync-from-scx-repo.patch
│   └── 0100-linux6.7-bore4.0.3.patch
├── bore-sched-ext-patches-v13
│   └── 0001-bore-6.7-introduce-BORE-Scheduler-with-BPF-extensibl.patch
├── bore-sched-ext-patches-v13-all
│   └── 0001-bore-sched-ext-patches.patch
├── bore-sched-ext-patches-v13-sep
│   ├── 0001-sched-6.7-Merge-BPF-changes.patch
│   ├── 0002-cgroup-Implement-cgroup_show_cftypes.patch
│   ├── 0003-sched-Restructure-sched_class-order-sanity-checks-in.patch
│   ├── 0004-sched-Allow-sched_cgroup_fork-to-fail-and-introduce-.patch
│   ├── 0005-sched-Add-sched_class-reweight_task.patch
│   ├── 0006-sched-Add-sched_class-switching_to-and-expose-check_.patch
│   ├── 0007-sched-Factor-out-cgroup-weight-conversion-functions.patch
│   ├── 0008-sched-Expose-css_tg-and-__setscheduler_prio.patch
│   ├── 0009-sched-Enumerate-CPU-cgroup-file-types.patch
│   ├── 0010-sched-Add-reason-to-sched_class-rq_-on-off-line.patch
│   ├── 0011-sched-Add-normal_policy.patch
│   ├── 0012-sched_ext-Add-boilerplate-for-extensible-scheduler-c.patch
│   ├── 0013-sched_ext-Implement-BPF-extensible-scheduler-class.patch
│   ├── 0014-sched_ext-Add-scx_simple-and-scx_example_qmap-exampl.patch
│   ├── 0015-sched_ext-Add-sysrq-S-which-disables-the-BPF-schedul.patch
│   ├── 0016-sched_ext-Implement-runnable-task-stall-watchdog.patch
│   ├── 0017-sched_ext-Allow-BPF-schedulers-to-disallow-specific-.patch
│   ├── 0018-sched_ext-Allow-BPF-schedulers-to-switch-all-eligibl.patch
│   ├── 0019-sched_ext-Print-sched_ext-info-when-dumping-stack.patch
│   ├── 0020-sched_ext-Implement-scx_bpf_kick_cpu-and-task-preemp.patch
│   ├── 0021-sched_ext-Add-a-central-scheduler-which-makes-all-sc.patch
│   ├── 0022-sched_ext-Make-watchdog-handle-ops.dispatch-looping-.patch
│   ├── 0023-sched_ext-Add-task-state-tracking-operations.patch
│   ├── 0024-sched_ext-Implement-tickless-support.patch
│   ├── 0025-sched_ext-Track-tasks-that-are-subjects-of-the-in-fl.patch
│   ├── 0026-sched_ext-Add-cgroup-support.patch
│   ├── 0027-sched_ext-Add-a-cgroup-based-core-scheduling-schedul.patch
│   ├── 0028-sched_ext-Add-a-cgroup-scheduler-which-uses-flattene.patch
│   ├── 0029-sched_ext-Implement-SCX_KICK_WAIT.patch
│   ├── 0030-sched_ext-Implement-sched_ext_ops.cpu_acquire-releas.patch
│   ├── 0031-sched_ext-Implement-sched_ext_ops.cpu_online-offline.patch
│   ├── 0032-sched_ext-Implement-core-sched-support.patch
│   ├── 0033-sched_ext-Add-vtime-ordered-priority-queue-to-dispat.patch
│   ├── 0034-sched_ext-Documentation-scheduler-Document-extensibl.patch
│   ├── 0035-sched_ext-Add-a-basic-userland-vruntime-scheduler.patch
│   ├── 0036-sched_ext-Add-scx_rusty-a-rust-userspace-hybrid-sche.patch
│   ├── 0037-sched_ext-Add-scx_layered-a-highly-configurable-mult.patch
│   ├── 0038-scx-Move-scx_ops_enable_state_str-outside-CONFIG_SCH.patch
│   ├── 0039-scx-Fix-a-straggling-atomic64_set.patch
│   ├── 0040-scx-Use-.bpf.-sub-skel.h-suffix-instead-of-.-sub-ske.patch
│   ├── 0041-scx-Add-s-uSIZE-typedefs-in-scx_common.h.patch
│   ├── 0042-scx_-rusty-layered-Generate-skel-file-in-OUT_DIR.patch
│   ├── 0043-scx_-rusty-layered-ravg_read-is-now-provided-by-scx_.patch
│   ├── 0044-scx_-rusty-layered-Make-naming-and-build-consistent-.patch
│   ├── 0045-scx_-rusty-layered-Run-bindgen-s-clang-with-CLANG_CF.patch
│   ├── 0046-scx_-rusty-layered-Factor-out-build.rs-s-into-scx_ut.patch
│   ├── 0047-scx_-rusty-layered-Follow-scx_utils-BpfBuilder-API-u.patch
│   ├── 0048-scx_-layered-rusty-Minor-build-updates.patch
│   ├── 0049-scx-Move-common-headers-under-include-scx.patch
│   ├── 0050-scx-More-include-path-and-build-updates.patch
│   ├── 0051-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0052-scx-Disable-vtime-ordering-for-internal-DSQs.patch
│   ├── 0053-scx-Enforce-either-or-usage-of-DSQ-FIFO-PRIQ-dispatc.patch
│   ├── 0054-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0055-scx-Remove-now-unused-rb_node-from-first_local_task.patch
│   ├── 0056-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0057-scx-Add-missing-to-error-invocation-in-Makefile.patch
│   ├── 0058-scx-Add-skeleton-for-scx-testing-framework.patch
│   ├── 0059-kernfs-convert-kernfs_idr_lock-to-an-irq-safe-raw-sp.patch
│   ├── 0060-sched_ext-fix-race-in-scx_move_task-with-exiting-tas.patch
│   ├── 0061-scx-Support-direct-dispatching-from-ops.select_cpu.patch
│   ├── 0062-scx-Remove-SCX_ENQ_LOCAL-flag.patch
│   ├── 0063-scx-Add-scx_bpf_select_cpu_dfl-kfunc.patch
│   ├── 0064-scx-Add-selftests-for-new-select_cpu-dispatch-semant.patch
│   ├── 0065-scx-Error-for-a-priq-builtin-DSQ-in-dispatch_enqueue.patch
│   ├── 0066-scx-Add-testcases-for-vtime-dispatching-to-builtin-D.patch
│   ├── 0067-scx-Always-set-task-scx-weight-before-enable.patch
│   ├── 0068-scx-Call-enable-disable-on-entry-exit-to-scx.patch
│   ├── 0069-scx-Rename-prep_enable-and-cancel_enable-add-exit_ta.patch
│   ├── 0070-scx-Add-init_enable_count-testcase.patch
│   ├── 0071-scx-Move-sched_ext_entity.ddsq_id-out-of-modifiable-.patch
│   ├── 0072-scx-Add-missing-DSQ-fallback-test-files.patch
│   ├── 0073-scx-Claim-idle-core-in-scx_select_cpu_dfl-for-nr_cpu.patch
│   ├── 0074-scx-Make-select_cpu_dfl-test-a-bit-less-brittle.patch
│   ├── 0075-scx-Set-default-slice-for-default-select_cpu-dispatc.patch
│   ├── 0076-scx-Avoid-possible-deadlock-with-cpus_read_lock.patch
│   ├── 0077-scx-Use-READ-WRITE_ONCE-for-scx_watchdog_timeout-tim.patch
│   ├── 0078-scx-Rename-rq-scx.watchdog_list-and-friends-to-runna.patch
│   ├── 0079-scx-Factor-out-scx_ops_bypass-and-s-scx_ops_disablin.patch
│   ├── 0080-scx-Implement-bypass-depth-and-always-bypass-while-d.patch
│   ├── 0081-scx-Implement-turning-off-bypassing.patch
│   ├── 0082-scx-Optimize-scx_ops_bypass.patch
│   ├── 0083-scx-Expose-bypassing-state-to-userland.patch
│   ├── 0084-scx-s-register_ext_kfuncs-scx_init.patch
│   ├── 0085-scx-Bypass-while-PM-operations-are-in-progress.patch
│   ├── 0086-scx-Disabling-scx_bpf_kick_cpu-while-bypassing.patch
│   ├── 0087-Revert-scx-Avoid-possible-deadlock-with-cpus_read_lo.patch
│   ├── 0088-scx-Make-scx_task_state-handling-more-idiomatic.patch
│   ├── 0089-scx-Sync-schedulers-from-SCX-v0.1.5-74923c6cdbc3.patch
│   ├── 0090-scx-Fix-direct-dispatch-for-non-builtin-DSQs.patch
│   ├── 0091-scx-Keep-track-of-enq-flags-in-direct-dispatch.patch
│   ├── 0092-scx-Test-vtime-dispatching-from-ops.select_cpu.patch
│   ├── 0093-scx-Implement-scx-selftests-framework.patch
│   ├── 0094-scx-Convert-remaining-testcases-to-use-new-framework.patch
│   ├── 0095-scx-Update-ddsp-testcases-to-check-for-error-exits.patch
│   ├── 0096-scx-Copy-scx_exit_kind-to-scx_test.h.patch
│   ├── 0097-scx-Narrow-cpus_read_lock-critical-section-in-scx_op.patch
│   ├── 0098-scx-Reorder-scx_fork_rwsem-cpu_hotplug_lock-and-scx_.patch
│   ├── 0099-scx-Sync-from-scx-repo.patch
│   └── 0100-linux6.7-bore4.0.4.patch
├── bore-sched-ext-patches-v14
│   └── 0001-bore-6.7-introduce-BORE-Scheduler-with-BPF-extensibl.patch
├── bore-sched-ext-patches-v14-all
│   └── 0001-bore-sched-ext-patches.patch
├── bore-sched-ext-patches-v14-sep
│   ├── 0001-sched-6.7-Merge-BPF-changes.patch
│   ├── 0002-cgroup-Implement-cgroup_show_cftypes.patch
│   ├── 0003-sched-Restructure-sched_class-order-sanity-checks-in.patch
│   ├── 0004-sched-Allow-sched_cgroup_fork-to-fail-and-introduce-.patch
│   ├── 0005-sched-Add-sched_class-reweight_task.patch
│   ├── 0006-sched-Add-sched_class-switching_to-and-expose-check_.patch
│   ├── 0007-sched-Factor-out-cgroup-weight-conversion-functions.patch
│   ├── 0008-sched-Expose-css_tg-and-__setscheduler_prio.patch
│   ├── 0009-sched-Enumerate-CPU-cgroup-file-types.patch
│   ├── 0010-sched-Add-reason-to-sched_class-rq_-on-off-line.patch
│   ├── 0011-sched-Add-normal_policy.patch
│   ├── 0012-sched_ext-Add-boilerplate-for-extensible-scheduler-c.patch
│   ├── 0013-sched_ext-Implement-BPF-extensible-scheduler-class.patch
│   ├── 0014-sched_ext-Add-scx_simple-and-scx_example_qmap-exampl.patch
│   ├── 0015-sched_ext-Add-sysrq-S-which-disables-the-BPF-schedul.patch
│   ├── 0016-sched_ext-Implement-runnable-task-stall-watchdog.patch
│   ├── 0017-sched_ext-Allow-BPF-schedulers-to-disallow-specific-.patch
│   ├── 0018-sched_ext-Allow-BPF-schedulers-to-switch-all-eligibl.patch
│   ├── 0019-sched_ext-Print-sched_ext-info-when-dumping-stack.patch
│   ├── 0020-sched_ext-Implement-scx_bpf_kick_cpu-and-task-preemp.patch
│   ├── 0021-sched_ext-Add-a-central-scheduler-which-makes-all-sc.patch
│   ├── 0022-sched_ext-Make-watchdog-handle-ops.dispatch-looping-.patch
│   ├── 0023-sched_ext-Add-task-state-tracking-operations.patch
│   ├── 0024-sched_ext-Implement-tickless-support.patch
│   ├── 0025-sched_ext-Track-tasks-that-are-subjects-of-the-in-fl.patch
│   ├── 0026-sched_ext-Add-cgroup-support.patch
│   ├── 0027-sched_ext-Add-a-cgroup-based-core-scheduling-schedul.patch
│   ├── 0028-sched_ext-Add-a-cgroup-scheduler-which-uses-flattene.patch
│   ├── 0029-sched_ext-Implement-SCX_KICK_WAIT.patch
│   ├── 0030-sched_ext-Implement-sched_ext_ops.cpu_acquire-releas.patch
│   ├── 0031-sched_ext-Implement-sched_ext_ops.cpu_online-offline.patch
│   ├── 0032-sched_ext-Implement-core-sched-support.patch
│   ├── 0033-sched_ext-Add-vtime-ordered-priority-queue-to-dispat.patch
│   ├── 0034-sched_ext-Documentation-scheduler-Document-extensibl.patch
│   ├── 0035-sched_ext-Add-a-basic-userland-vruntime-scheduler.patch
│   ├── 0036-sched_ext-Add-scx_rusty-a-rust-userspace-hybrid-sche.patch
│   ├── 0037-sched_ext-Add-scx_layered-a-highly-configurable-mult.patch
│   ├── 0038-scx-Move-scx_ops_enable_state_str-outside-CONFIG_SCH.patch
│   ├── 0039-scx-Fix-a-straggling-atomic64_set.patch
│   ├── 0040-scx-Use-.bpf.-sub-skel.h-suffix-instead-of-.-sub-ske.patch
│   ├── 0041-scx-Add-s-uSIZE-typedefs-in-scx_common.h.patch
│   ├── 0042-scx_-rusty-layered-Generate-skel-file-in-OUT_DIR.patch
│   ├── 0043-scx_-rusty-layered-ravg_read-is-now-provided-by-scx_.patch
│   ├── 0044-scx_-rusty-layered-Make-naming-and-build-consistent-.patch
│   ├── 0045-scx_-rusty-layered-Run-bindgen-s-clang-with-CLANG_CF.patch
│   ├── 0046-scx_-rusty-layered-Factor-out-build.rs-s-into-scx_ut.patch
│   ├── 0047-scx_-rusty-layered-Follow-scx_utils-BpfBuilder-API-u.patch
│   ├── 0048-scx_-layered-rusty-Minor-build-updates.patch
│   ├── 0049-scx-Move-common-headers-under-include-scx.patch
│   ├── 0050-scx-More-include-path-and-build-updates.patch
│   ├── 0051-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0052-scx-Disable-vtime-ordering-for-internal-DSQs.patch
│   ├── 0053-scx-Enforce-either-or-usage-of-DSQ-FIFO-PRIQ-dispatc.patch
│   ├── 0054-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0055-scx-Remove-now-unused-rb_node-from-first_local_task.patch
│   ├── 0056-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0057-scx-Add-missing-to-error-invocation-in-Makefile.patch
│   ├── 0058-scx-Add-skeleton-for-scx-testing-framework.patch
│   ├── 0059-kernfs-convert-kernfs_idr_lock-to-an-irq-safe-raw-sp.patch
│   ├── 0060-sched_ext-fix-race-in-scx_move_task-with-exiting-tas.patch
│   ├── 0061-scx-Support-direct-dispatching-from-ops.select_cpu.patch
│   ├── 0062-scx-Remove-SCX_ENQ_LOCAL-flag.patch
│   ├── 0063-scx-Add-scx_bpf_select_cpu_dfl-kfunc.patch
│   ├── 0064-scx-Add-selftests-for-new-select_cpu-dispatch-semant.patch
│   ├── 0065-scx-Error-for-a-priq-builtin-DSQ-in-dispatch_enqueue.patch
│   ├── 0066-scx-Add-testcases-for-vtime-dispatching-to-builtin-D.patch
│   ├── 0067-scx-Always-set-task-scx-weight-before-enable.patch
│   ├── 0068-scx-Call-enable-disable-on-entry-exit-to-scx.patch
│   ├── 0069-scx-Rename-prep_enable-and-cancel_enable-add-exit_ta.patch
│   ├── 0070-scx-Add-init_enable_count-testcase.patch
│   ├── 0071-scx-Move-sched_ext_entity.ddsq_id-out-of-modifiable-.patch
│   ├── 0072-scx-Add-missing-DSQ-fallback-test-files.patch
│   ├── 0073-scx-Claim-idle-core-in-scx_select_cpu_dfl-for-nr_cpu.patch
│   ├── 0074-scx-Make-select_cpu_dfl-test-a-bit-less-brittle.patch
│   ├── 0075-scx-Set-default-slice-for-default-select_cpu-dispatc.patch
│   ├── 0076-scx-Avoid-possible-deadlock-with-cpus_read_lock.patch
│   ├── 0077-scx-Use-READ-WRITE_ONCE-for-scx_watchdog_timeout-tim.patch
│   ├── 0078-scx-Rename-rq-scx.watchdog_list-and-friends-to-runna.patch
│   ├── 0079-scx-Factor-out-scx_ops_bypass-and-s-scx_ops_disablin.patch
│   ├── 0080-scx-Implement-bypass-depth-and-always-bypass-while-d.patch
│   ├── 0081-scx-Implement-turning-off-bypassing.patch
│   ├── 0082-scx-Optimize-scx_ops_bypass.patch
│   ├── 0083-scx-Expose-bypassing-state-to-userland.patch
│   ├── 0084-scx-s-register_ext_kfuncs-scx_init.patch
│   ├── 0085-scx-Bypass-while-PM-operations-are-in-progress.patch
│   ├── 0086-scx-Disabling-scx_bpf_kick_cpu-while-bypassing.patch
│   ├── 0087-Revert-scx-Avoid-possible-deadlock-with-cpus_read_lo.patch
│   ├── 0088-scx-Make-scx_task_state-handling-more-idiomatic.patch
│   ├── 0089-scx-Sync-schedulers-from-SCX-v0.1.5-74923c6cdbc3.patch
│   ├── 0090-scx-Fix-direct-dispatch-for-non-builtin-DSQs.patch
│   ├── 0091-scx-Keep-track-of-enq-flags-in-direct-dispatch.patch
│   ├── 0092-scx-Test-vtime-dispatching-from-ops.select_cpu.patch
│   ├── 0093-scx-Implement-scx-selftests-framework.patch
│   ├── 0094-scx-Convert-remaining-testcases-to-use-new-framework.patch
│   ├── 0095-scx-Update-ddsp-testcases-to-check-for-error-exits.patch
│   ├── 0096-scx-Copy-scx_exit_kind-to-scx_test.h.patch
│   ├── 0097-scx-Narrow-cpus_read_lock-critical-section-in-scx_op.patch
│   ├── 0098-scx-Reorder-scx_fork_rwsem-cpu_hotplug_lock-and-scx_.patch
│   ├── 0099-scx-Sync-from-scx-repo.patch
│   └── 0100-linux6.7-bore4.1.0.patch
├── bore-sched-ext-patches-v15
│   └── 0001-bore-6.7-introduce-BORE-Scheduler-with-BPF-extensibl.patch
├── bore-sched-ext-patches-v15-all
│   └── 0001-bore-sched-ext-patches.patch
├── bore-sched-ext-patches-v15-sep
│   ├── 0001-sched-6.7-Merge-BPF-changes.patch
│   ├── 0002-cgroup-Implement-cgroup_show_cftypes.patch
│   ├── 0003-sched-Restructure-sched_class-order-sanity-checks-in.patch
│   ├── 0004-sched-Allow-sched_cgroup_fork-to-fail-and-introduce-.patch
│   ├── 0005-sched-Add-sched_class-reweight_task.patch
│   ├── 0006-sched-Add-sched_class-switching_to-and-expose-check_.patch
│   ├── 0007-sched-Factor-out-cgroup-weight-conversion-functions.patch
│   ├── 0008-sched-Expose-css_tg-and-__setscheduler_prio.patch
│   ├── 0009-sched-Enumerate-CPU-cgroup-file-types.patch
│   ├── 0010-sched-Add-reason-to-sched_class-rq_-on-off-line.patch
│   ├── 0011-sched-Add-normal_policy.patch
│   ├── 0012-sched_ext-Add-boilerplate-for-extensible-scheduler-c.patch
│   ├── 0013-sched_ext-Implement-BPF-extensible-scheduler-class.patch
│   ├── 0014-sched_ext-Add-scx_simple-and-scx_example_qmap-exampl.patch
│   ├── 0015-sched_ext-Add-sysrq-S-which-disables-the-BPF-schedul.patch
│   ├── 0016-sched_ext-Implement-runnable-task-stall-watchdog.patch
│   ├── 0017-sched_ext-Allow-BPF-schedulers-to-disallow-specific-.patch
│   ├── 0018-sched_ext-Allow-BPF-schedulers-to-switch-all-eligibl.patch
│   ├── 0019-sched_ext-Print-sched_ext-info-when-dumping-stack.patch
│   ├── 0020-sched_ext-Implement-scx_bpf_kick_cpu-and-task-preemp.patch
│   ├── 0021-sched_ext-Add-a-central-scheduler-which-makes-all-sc.patch
│   ├── 0022-sched_ext-Make-watchdog-handle-ops.dispatch-looping-.patch
│   ├── 0023-sched_ext-Add-task-state-tracking-operations.patch
│   ├── 0024-sched_ext-Implement-tickless-support.patch
│   ├── 0025-sched_ext-Track-tasks-that-are-subjects-of-the-in-fl.patch
│   ├── 0026-sched_ext-Add-cgroup-support.patch
│   ├── 0027-sched_ext-Add-a-cgroup-based-core-scheduling-schedul.patch
│   ├── 0028-sched_ext-Add-a-cgroup-scheduler-which-uses-flattene.patch
│   ├── 0029-sched_ext-Implement-SCX_KICK_WAIT.patch
│   ├── 0030-sched_ext-Implement-sched_ext_ops.cpu_acquire-releas.patch
│   ├── 0031-sched_ext-Implement-sched_ext_ops.cpu_online-offline.patch
│   ├── 0032-sched_ext-Implement-core-sched-support.patch
│   ├── 0033-sched_ext-Add-vtime-ordered-priority-queue-to-dispat.patch
│   ├── 0034-sched_ext-Documentation-scheduler-Document-extensibl.patch
│   ├── 0035-sched_ext-Add-a-basic-userland-vruntime-scheduler.patch
│   ├── 0036-sched_ext-Add-scx_rusty-a-rust-userspace-hybrid-sche.patch
│   ├── 0037-sched_ext-Add-scx_layered-a-highly-configurable-mult.patch
│   ├── 0038-scx-Move-scx_ops_enable_state_str-outside-CONFIG_SCH.patch
│   ├── 0039-scx-Fix-a-straggling-atomic64_set.patch
│   ├── 0040-scx-Use-.bpf.-sub-skel.h-suffix-instead-of-.-sub-ske.patch
│   ├── 0041-scx-Add-s-uSIZE-typedefs-in-scx_common.h.patch
│   ├── 0042-scx_-rusty-layered-Generate-skel-file-in-OUT_DIR.patch
│   ├── 0043-scx_-rusty-layered-ravg_read-is-now-provided-by-scx_.patch
│   ├── 0044-scx_-rusty-layered-Make-naming-and-build-consistent-.patch
│   ├── 0045-scx_-rusty-layered-Run-bindgen-s-clang-with-CLANG_CF.patch
│   ├── 0046-scx_-rusty-layered-Factor-out-build.rs-s-into-scx_ut.patch
│   ├── 0047-scx_-rusty-layered-Follow-scx_utils-BpfBuilder-API-u.patch
│   ├── 0048-scx_-layered-rusty-Minor-build-updates.patch
│   ├── 0049-scx-Move-common-headers-under-include-scx.patch
│   ├── 0050-scx-More-include-path-and-build-updates.patch
│   ├── 0051-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0052-scx-Disable-vtime-ordering-for-internal-DSQs.patch
│   ├── 0053-scx-Enforce-either-or-usage-of-DSQ-FIFO-PRIQ-dispatc.patch
│   ├── 0054-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0055-scx-Remove-now-unused-rb_node-from-first_local_task.patch
│   ├── 0056-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0057-scx-Add-missing-to-error-invocation-in-Makefile.patch
│   ├── 0058-scx-Add-skeleton-for-scx-testing-framework.patch
│   ├── 0059-kernfs-convert-kernfs_idr_lock-to-an-irq-safe-raw-sp.patch
│   ├── 0060-sched_ext-fix-race-in-scx_move_task-with-exiting-tas.patch
│   ├── 0061-scx-Support-direct-dispatching-from-ops.select_cpu.patch
│   ├── 0062-scx-Remove-SCX_ENQ_LOCAL-flag.patch
│   ├── 0063-scx-Add-scx_bpf_select_cpu_dfl-kfunc.patch
│   ├── 0064-scx-Add-selftests-for-new-select_cpu-dispatch-semant.patch
│   ├── 0065-scx-Error-for-a-priq-builtin-DSQ-in-dispatch_enqueue.patch
│   ├── 0066-scx-Add-testcases-for-vtime-dispatching-to-builtin-D.patch
│   ├── 0067-scx-Always-set-task-scx-weight-before-enable.patch
│   ├── 0068-scx-Call-enable-disable-on-entry-exit-to-scx.patch
│   ├── 0069-scx-Rename-prep_enable-and-cancel_enable-add-exit_ta.patch
│   ├── 0070-scx-Add-init_enable_count-testcase.patch
│   ├── 0071-scx-Move-sched_ext_entity.ddsq_id-out-of-modifiable-.patch
│   ├── 0072-scx-Add-missing-DSQ-fallback-test-files.patch
│   ├── 0073-scx-Claim-idle-core-in-scx_select_cpu_dfl-for-nr_cpu.patch
│   ├── 0074-scx-Make-select_cpu_dfl-test-a-bit-less-brittle.patch
│   ├── 0075-scx-Set-default-slice-for-default-select_cpu-dispatc.patch
│   ├── 0076-scx-Avoid-possible-deadlock-with-cpus_read_lock.patch
│   ├── 0077-scx-Use-READ-WRITE_ONCE-for-scx_watchdog_timeout-tim.patch
│   ├── 0078-scx-Rename-rq-scx.watchdog_list-and-friends-to-runna.patch
│   ├── 0079-scx-Factor-out-scx_ops_bypass-and-s-scx_ops_disablin.patch
│   ├── 0080-scx-Implement-bypass-depth-and-always-bypass-while-d.patch
│   ├── 0081-scx-Implement-turning-off-bypassing.patch
│   ├── 0082-scx-Optimize-scx_ops_bypass.patch
│   ├── 0083-scx-Expose-bypassing-state-to-userland.patch
│   ├── 0084-scx-s-register_ext_kfuncs-scx_init.patch
│   ├── 0085-scx-Bypass-while-PM-operations-are-in-progress.patch
│   ├── 0086-scx-Disabling-scx_bpf_kick_cpu-while-bypassing.patch
│   ├── 0087-Revert-scx-Avoid-possible-deadlock-with-cpus_read_lo.patch
│   ├── 0088-scx-Make-scx_task_state-handling-more-idiomatic.patch
│   ├── 0089-scx-Sync-schedulers-from-SCX-v0.1.5-74923c6cdbc3.patch
│   ├── 0090-scx-Fix-direct-dispatch-for-non-builtin-DSQs.patch
│   ├── 0091-scx-Keep-track-of-enq-flags-in-direct-dispatch.patch
│   ├── 0092-scx-Test-vtime-dispatching-from-ops.select_cpu.patch
│   ├── 0093-scx-Implement-scx-selftests-framework.patch
│   ├── 0094-scx-Convert-remaining-testcases-to-use-new-framework.patch
│   ├── 0095-scx-Update-ddsp-testcases-to-check-for-error-exits.patch
│   ├── 0096-scx-Copy-scx_exit_kind-to-scx_test.h.patch
│   ├── 0097-scx-Narrow-cpus_read_lock-critical-section-in-scx_op.patch
│   ├── 0098-scx-Reorder-scx_fork_rwsem-cpu_hotplug_lock-and-scx_.patch
│   ├── 0099-scx-Sync-from-scx-repo.patch
│   ├── 0100-scx-Add-sys-kernel-sched_ext-interface.patch
│   ├── 0101-scx-Replace-sys-kernel-debug-sched-ext-with-tools-sc.patch
│   └── 0102-linux6.7-bore4.1.0.patch
├── bore-sched-ext-patches-v16
│   └── 0001-bore-6.7-introduce-BORE-Scheduler-with-BPF-extensibl.patch
├── bore-sched-ext-patches-v16-all
│   └── 0001-bore-sched-ext-patches.patch
├── bore-sched-ext-patches-v16-sep
│   ├── 0001-sched-6.7-Merge-BPF-changes.patch
│   ├── 0002-cgroup-Implement-cgroup_show_cftypes.patch
│   ├── 0003-sched-Restructure-sched_class-order-sanity-checks-in.patch
│   ├── 0004-sched-Allow-sched_cgroup_fork-to-fail-and-introduce-.patch
│   ├── 0005-sched-Add-sched_class-reweight_task.patch
│   ├── 0006-sched-Add-sched_class-switching_to-and-expose-check_.patch
│   ├── 0007-sched-Factor-out-cgroup-weight-conversion-functions.patch
│   ├── 0008-sched-Expose-css_tg-and-__setscheduler_prio.patch
│   ├── 0009-sched-Enumerate-CPU-cgroup-file-types.patch
│   ├── 0010-sched-Add-reason-to-sched_class-rq_-on-off-line.patch
│   ├── 0011-sched-Add-normal_policy.patch
│   ├── 0012-sched_ext-Add-boilerplate-for-extensible-scheduler-c.patch
│   ├── 0013-sched_ext-Implement-BPF-extensible-scheduler-class.patch
│   ├── 0014-sched_ext-Add-scx_simple-and-scx_example_qmap-exampl.patch
│   ├── 0015-sched_ext-Add-sysrq-S-which-disables-the-BPF-schedul.patch
│   ├── 0016-sched_ext-Implement-runnable-task-stall-watchdog.patch
│   ├── 0017-sched_ext-Allow-BPF-schedulers-to-disallow-specific-.patch
│   ├── 0018-sched_ext-Allow-BPF-schedulers-to-switch-all-eligibl.patch
│   ├── 0019-sched_ext-Print-sched_ext-info-when-dumping-stack.patch
│   ├── 0020-sched_ext-Implement-scx_bpf_kick_cpu-and-task-preemp.patch
│   ├── 0021-sched_ext-Add-a-central-scheduler-which-makes-all-sc.patch
│   ├── 0022-sched_ext-Make-watchdog-handle-ops.dispatch-looping-.patch
│   ├── 0023-sched_ext-Add-task-state-tracking-operations.patch
│   ├── 0024-sched_ext-Implement-tickless-support.patch
│   ├── 0025-sched_ext-Track-tasks-that-are-subjects-of-the-in-fl.patch
│   ├── 0026-sched_ext-Add-cgroup-support.patch
│   ├── 0027-sched_ext-Add-a-cgroup-based-core-scheduling-schedul.patch
│   ├── 0028-sched_ext-Add-a-cgroup-scheduler-which-uses-flattene.patch
│   ├── 0029-sched_ext-Implement-SCX_KICK_WAIT.patch
│   ├── 0030-sched_ext-Implement-sched_ext_ops.cpu_acquire-releas.patch
│   ├── 0031-sched_ext-Implement-sched_ext_ops.cpu_online-offline.patch
│   ├── 0032-sched_ext-Implement-core-sched-support.patch
│   ├── 0033-sched_ext-Add-vtime-ordered-priority-queue-to-dispat.patch
│   ├── 0034-sched_ext-Documentation-scheduler-Document-extensibl.patch
│   ├── 0035-sched_ext-Add-a-basic-userland-vruntime-scheduler.patch
│   ├── 0036-sched_ext-Add-scx_rusty-a-rust-userspace-hybrid-sche.patch
│   ├── 0037-sched_ext-Add-scx_layered-a-highly-configurable-mult.patch
│   ├── 0038-scx-Move-scx_ops_enable_state_str-outside-CONFIG_SCH.patch
│   ├── 0039-scx-Fix-a-straggling-atomic64_set.patch
│   ├── 0040-scx-Use-.bpf.-sub-skel.h-suffix-instead-of-.-sub-ske.patch
│   ├── 0041-scx-Add-s-uSIZE-typedefs-in-scx_common.h.patch
│   ├── 0042-scx_-rusty-layered-Generate-skel-file-in-OUT_DIR.patch
│   ├── 0043-scx_-rusty-layered-ravg_read-is-now-provided-by-scx_.patch
│   ├── 0044-scx_-rusty-layered-Make-naming-and-build-consistent-.patch
│   ├── 0045-scx_-rusty-layered-Run-bindgen-s-clang-with-CLANG_CF.patch
│   ├── 0046-scx_-rusty-layered-Factor-out-build.rs-s-into-scx_ut.patch
│   ├── 0047-scx_-rusty-layered-Follow-scx_utils-BpfBuilder-API-u.patch
│   ├── 0048-scx_-layered-rusty-Minor-build-updates.patch
│   ├── 0049-scx-Move-common-headers-under-include-scx.patch
│   ├── 0050-scx-More-include-path-and-build-updates.patch
│   ├── 0051-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0052-scx-Disable-vtime-ordering-for-internal-DSQs.patch
│   ├── 0053-scx-Enforce-either-or-usage-of-DSQ-FIFO-PRIQ-dispatc.patch
│   ├── 0054-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0055-scx-Remove-now-unused-rb_node-from-first_local_task.patch
│   ├── 0056-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0057-scx-Add-missing-to-error-invocation-in-Makefile.patch
│   ├── 0058-scx-Add-skeleton-for-scx-testing-framework.patch
│   ├── 0059-kernfs-convert-kernfs_idr_lock-to-an-irq-safe-raw-sp.patch
│   ├── 0060-sched_ext-fix-race-in-scx_move_task-with-exiting-tas.patch
│   ├── 0061-scx-Support-direct-dispatching-from-ops.select_cpu.patch
│   ├── 0062-scx-Remove-SCX_ENQ_LOCAL-flag.patch
│   ├── 0063-scx-Add-scx_bpf_select_cpu_dfl-kfunc.patch
│   ├── 0064-scx-Add-selftests-for-new-select_cpu-dispatch-semant.patch
│   ├── 0065-scx-Error-for-a-priq-builtin-DSQ-in-dispatch_enqueue.patch
│   ├── 0066-scx-Add-testcases-for-vtime-dispatching-to-builtin-D.patch
│   ├── 0067-scx-Always-set-task-scx-weight-before-enable.patch
│   ├── 0068-scx-Call-enable-disable-on-entry-exit-to-scx.patch
│   ├── 0069-scx-Rename-prep_enable-and-cancel_enable-add-exit_ta.patch
│   ├── 0070-scx-Add-init_enable_count-testcase.patch
│   ├── 0071-scx-Move-sched_ext_entity.ddsq_id-out-of-modifiable-.patch
│   ├── 0072-scx-Add-missing-DSQ-fallback-test-files.patch
│   ├── 0073-scx-Claim-idle-core-in-scx_select_cpu_dfl-for-nr_cpu.patch
│   ├── 0074-scx-Make-select_cpu_dfl-test-a-bit-less-brittle.patch
│   ├── 0075-scx-Set-default-slice-for-default-select_cpu-dispatc.patch
│   ├── 0076-scx-Avoid-possible-deadlock-with-cpus_read_lock.patch
│   ├── 0077-scx-Use-READ-WRITE_ONCE-for-scx_watchdog_timeout-tim.patch
│   ├── 0078-scx-Rename-rq-scx.watchdog_list-and-friends-to-runna.patch
│   ├── 0079-scx-Factor-out-scx_ops_bypass-and-s-scx_ops_disablin.patch
│   ├── 0080-scx-Implement-bypass-depth-and-always-bypass-while-d.patch
│   ├── 0081-scx-Implement-turning-off-bypassing.patch
│   ├── 0082-scx-Optimize-scx_ops_bypass.patch
│   ├── 0083-scx-Expose-bypassing-state-to-userland.patch
│   ├── 0084-scx-s-register_ext_kfuncs-scx_init.patch
│   ├── 0085-scx-Bypass-while-PM-operations-are-in-progress.patch
│   ├── 0086-scx-Disabling-scx_bpf_kick_cpu-while-bypassing.patch
│   ├── 0087-Revert-scx-Avoid-possible-deadlock-with-cpus_read_lo.patch
│   ├── 0088-scx-Make-scx_task_state-handling-more-idiomatic.patch
│   ├── 0089-scx-Sync-schedulers-from-SCX-v0.1.5-74923c6cdbc3.patch
│   ├── 0090-scx-Fix-direct-dispatch-for-non-builtin-DSQs.patch
│   ├── 0091-scx-Keep-track-of-enq-flags-in-direct-dispatch.patch
│   ├── 0092-scx-Test-vtime-dispatching-from-ops.select_cpu.patch
│   ├── 0093-scx-Implement-scx-selftests-framework.patch
│   ├── 0094-scx-Convert-remaining-testcases-to-use-new-framework.patch
│   ├── 0095-scx-Update-ddsp-testcases-to-check-for-error-exits.patch
│   ├── 0096-scx-Copy-scx_exit_kind-to-scx_test.h.patch
│   ├── 0097-scx-Narrow-cpus_read_lock-critical-section-in-scx_op.patch
│   ├── 0098-scx-Reorder-scx_fork_rwsem-cpu_hotplug_lock-and-scx_.patch
│   ├── 0099-scx-Sync-from-scx-repo.patch
│   ├── 0100-scx-Add-sys-kernel-sched_ext-interface.patch
│   ├── 0101-scx-Replace-sys-kernel-debug-sched-ext-with-tools-sc.patch
│   ├── 0102-scx-Make-the-pointer-passing-to-.dispatch-MAYBE_NULL.patch
│   ├── 0103-selftests-scx-Check-if-MAYBE_NULL-works-for-the-2nd-.patch
│   └── 0104-linux6.7-bore4.1.0.patch
├── bore-sched-ext-patches-v17
│   └── 0001-bore-6.7-introduce-BORE-Scheduler-with-BPF-extensibl.patch
├── bore-sched-ext-patches-v17-all
│   └── 0001-bore-sched-ext-patches.patch
├── bore-sched-ext-patches-v17-sep
│   ├── 0001-sched-6.7-Merge-BPF-changes.patch
│   ├── 0002-cgroup-Implement-cgroup_show_cftypes.patch
│   ├── 0003-sched-Restructure-sched_class-order-sanity-checks-in.patch
│   ├── 0004-sched-Allow-sched_cgroup_fork-to-fail-and-introduce-.patch
│   ├── 0005-sched-Add-sched_class-reweight_task.patch
│   ├── 0006-sched-Add-sched_class-switching_to-and-expose-check_.patch
│   ├── 0007-sched-Factor-out-cgroup-weight-conversion-functions.patch
│   ├── 0008-sched-Expose-css_tg-and-__setscheduler_prio.patch
│   ├── 0009-sched-Enumerate-CPU-cgroup-file-types.patch
│   ├── 0010-sched-Add-reason-to-sched_class-rq_-on-off-line.patch
│   ├── 0011-sched-Add-normal_policy.patch
│   ├── 0012-sched_ext-Add-boilerplate-for-extensible-scheduler-c.patch
│   ├── 0013-sched_ext-Implement-BPF-extensible-scheduler-class.patch
│   ├── 0014-sched_ext-Add-scx_simple-and-scx_example_qmap-exampl.patch
│   ├── 0015-sched_ext-Add-sysrq-S-which-disables-the-BPF-schedul.patch
│   ├── 0016-sched_ext-Implement-runnable-task-stall-watchdog.patch
│   ├── 0017-sched_ext-Allow-BPF-schedulers-to-disallow-specific-.patch
│   ├── 0018-sched_ext-Allow-BPF-schedulers-to-switch-all-eligibl.patch
│   ├── 0019-sched_ext-Print-sched_ext-info-when-dumping-stack.patch
│   ├── 0020-sched_ext-Implement-scx_bpf_kick_cpu-and-task-preemp.patch
│   ├── 0021-sched_ext-Add-a-central-scheduler-which-makes-all-sc.patch
│   ├── 0022-sched_ext-Make-watchdog-handle-ops.dispatch-looping-.patch
│   ├── 0023-sched_ext-Add-task-state-tracking-operations.patch
│   ├── 0024-sched_ext-Implement-tickless-support.patch
│   ├── 0025-sched_ext-Track-tasks-that-are-subjects-of-the-in-fl.patch
│   ├── 0026-sched_ext-Add-cgroup-support.patch
│   ├── 0027-sched_ext-Add-a-cgroup-based-core-scheduling-schedul.patch
│   ├── 0028-sched_ext-Add-a-cgroup-scheduler-which-uses-flattene.patch
│   ├── 0029-sched_ext-Implement-SCX_KICK_WAIT.patch
│   ├── 0030-sched_ext-Implement-sched_ext_ops.cpu_acquire-releas.patch
│   ├── 0031-sched_ext-Implement-sched_ext_ops.cpu_online-offline.patch
│   ├── 0032-sched_ext-Implement-core-sched-support.patch
│   ├── 0033-sched_ext-Add-vtime-ordered-priority-queue-to-dispat.patch
│   ├── 0034-sched_ext-Documentation-scheduler-Document-extensibl.patch
│   ├── 0035-sched_ext-Add-a-basic-userland-vruntime-scheduler.patch
│   ├── 0036-sched_ext-Add-scx_rusty-a-rust-userspace-hybrid-sche.patch
│   ├── 0037-sched_ext-Add-scx_layered-a-highly-configurable-mult.patch
│   ├── 0038-scx-Move-scx_ops_enable_state_str-outside-CONFIG_SCH.patch
│   ├── 0039-scx-Fix-a-straggling-atomic64_set.patch
│   ├── 0040-scx-Use-.bpf.-sub-skel.h-suffix-instead-of-.-sub-ske.patch
│   ├── 0041-scx-Add-s-uSIZE-typedefs-in-scx_common.h.patch
│   ├── 0042-scx_-rusty-layered-Generate-skel-file-in-OUT_DIR.patch
│   ├── 0043-scx_-rusty-layered-ravg_read-is-now-provided-by-scx_.patch
│   ├── 0044-scx_-rusty-layered-Make-naming-and-build-consistent-.patch
│   ├── 0045-scx_-rusty-layered-Run-bindgen-s-clang-with-CLANG_CF.patch
│   ├── 0046-scx_-rusty-layered-Factor-out-build.rs-s-into-scx_ut.patch
│   ├── 0047-scx_-rusty-layered-Follow-scx_utils-BpfBuilder-API-u.patch
│   ├── 0048-scx_-layered-rusty-Minor-build-updates.patch
│   ├── 0049-scx-Move-common-headers-under-include-scx.patch
│   ├── 0050-scx-More-include-path-and-build-updates.patch
│   ├── 0051-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0052-scx-Disable-vtime-ordering-for-internal-DSQs.patch
│   ├── 0053-scx-Enforce-either-or-usage-of-DSQ-FIFO-PRIQ-dispatc.patch
│   ├── 0054-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0055-scx-Remove-now-unused-rb_node-from-first_local_task.patch
│   ├── 0056-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0057-scx-Add-missing-to-error-invocation-in-Makefile.patch
│   ├── 0058-scx-Add-skeleton-for-scx-testing-framework.patch
│   ├── 0059-kernfs-convert-kernfs_idr_lock-to-an-irq-safe-raw-sp.patch
│   ├── 0060-sched_ext-fix-race-in-scx_move_task-with-exiting-tas.patch
│   ├── 0061-scx-Support-direct-dispatching-from-ops.select_cpu.patch
│   ├── 0062-scx-Remove-SCX_ENQ_LOCAL-flag.patch
│   ├── 0063-scx-Add-scx_bpf_select_cpu_dfl-kfunc.patch
│   ├── 0064-scx-Add-selftests-for-new-select_cpu-dispatch-semant.patch
│   ├── 0065-scx-Error-for-a-priq-builtin-DSQ-in-dispatch_enqueue.patch
│   ├── 0066-scx-Add-testcases-for-vtime-dispatching-to-builtin-D.patch
│   ├── 0067-scx-Always-set-task-scx-weight-before-enable.patch
│   ├── 0068-scx-Call-enable-disable-on-entry-exit-to-scx.patch
│   ├── 0069-scx-Rename-prep_enable-and-cancel_enable-add-exit_ta.patch
│   ├── 0070-scx-Add-init_enable_count-testcase.patch
│   ├── 0071-scx-Move-sched_ext_entity.ddsq_id-out-of-modifiable-.patch
│   ├── 0072-scx-Add-missing-DSQ-fallback-test-files.patch
│   ├── 0073-scx-Claim-idle-core-in-scx_select_cpu_dfl-for-nr_cpu.patch
│   ├── 0074-scx-Make-select_cpu_dfl-test-a-bit-less-brittle.patch
│   ├── 0075-scx-Set-default-slice-for-default-select_cpu-dispatc.patch
│   ├── 0076-scx-Avoid-possible-deadlock-with-cpus_read_lock.patch
│   ├── 0077-scx-Use-READ-WRITE_ONCE-for-scx_watchdog_timeout-tim.patch
│   ├── 0078-scx-Rename-rq-scx.watchdog_list-and-friends-to-runna.patch
│   ├── 0079-scx-Factor-out-scx_ops_bypass-and-s-scx_ops_disablin.patch
│   ├── 0080-scx-Implement-bypass-depth-and-always-bypass-while-d.patch
│   ├── 0081-scx-Implement-turning-off-bypassing.patch
│   ├── 0082-scx-Optimize-scx_ops_bypass.patch
│   ├── 0083-scx-Expose-bypassing-state-to-userland.patch
│   ├── 0084-scx-s-register_ext_kfuncs-scx_init.patch
│   ├── 0085-scx-Bypass-while-PM-operations-are-in-progress.patch
│   ├── 0086-scx-Disabling-scx_bpf_kick_cpu-while-bypassing.patch
│   ├── 0087-Revert-scx-Avoid-possible-deadlock-with-cpus_read_lo.patch
│   ├── 0088-scx-Make-scx_task_state-handling-more-idiomatic.patch
│   ├── 0089-scx-Sync-schedulers-from-SCX-v0.1.5-74923c6cdbc3.patch
│   ├── 0090-scx-Fix-direct-dispatch-for-non-builtin-DSQs.patch
│   ├── 0091-scx-Keep-track-of-enq-flags-in-direct-dispatch.patch
│   ├── 0092-scx-Test-vtime-dispatching-from-ops.select_cpu.patch
│   ├── 0093-scx-Implement-scx-selftests-framework.patch
│   ├── 0094-scx-Convert-remaining-testcases-to-use-new-framework.patch
│   ├── 0095-scx-Update-ddsp-testcases-to-check-for-error-exits.patch
│   ├── 0096-scx-Copy-scx_exit_kind-to-scx_test.h.patch
│   ├── 0097-scx-Narrow-cpus_read_lock-critical-section-in-scx_op.patch
│   ├── 0098-scx-Reorder-scx_fork_rwsem-cpu_hotplug_lock-and-scx_.patch
│   ├── 0099-scx-Sync-from-scx-repo.patch
│   ├── 0100-scx-Add-sys-kernel-sched_ext-interface.patch
│   ├── 0101-scx-Replace-sys-kernel-debug-sched-ext-with-tools-sc.patch
│   ├── 0102-scx-Make-the-pointer-passing-to-.dispatch-MAYBE_NULL.patch
│   ├── 0103-selftests-scx-Check-if-MAYBE_NULL-works-for-the-2nd-.patch
│   ├── 0104-scx-Fix-a-couple-follow-ups-to-recent-struct_ops-cha.patch
│   └── 0105-linux6.7-bore4.1.0.patch
├── bore-sched-ext-patches-v18
│   └── 0001-bore-6.7-introduce-BORE-Scheduler-with-BPF-extensibl.patch
├── bore-sched-ext-patches-v18-all
│   └── 0001-bore-sched-ext-patches.patch
├── bore-sched-ext-patches-v18-sep
│   ├── 0001-sched-6.7-Merge-BPF-changes.patch
│   ├── 0002-cgroup-Implement-cgroup_show_cftypes.patch
│   ├── 0003-sched-Restructure-sched_class-order-sanity-checks-in.patch
│   ├── 0004-sched-Allow-sched_cgroup_fork-to-fail-and-introduce-.patch
│   ├── 0005-sched-Add-sched_class-reweight_task.patch
│   ├── 0006-sched-Add-sched_class-switching_to-and-expose-check_.patch
│   ├── 0007-sched-Factor-out-cgroup-weight-conversion-functions.patch
│   ├── 0008-sched-Expose-css_tg-and-__setscheduler_prio.patch
│   ├── 0009-sched-Enumerate-CPU-cgroup-file-types.patch
│   ├── 0010-sched-Add-reason-to-sched_class-rq_-on-off-line.patch
│   ├── 0011-sched-Add-normal_policy.patch
│   ├── 0012-sched_ext-Add-boilerplate-for-extensible-scheduler-c.patch
│   ├── 0013-sched_ext-Implement-BPF-extensible-scheduler-class.patch
│   ├── 0014-sched_ext-Add-scx_simple-and-scx_example_qmap-exampl.patch
│   ├── 0015-sched_ext-Add-sysrq-S-which-disables-the-BPF-schedul.patch
│   ├── 0016-sched_ext-Implement-runnable-task-stall-watchdog.patch
│   ├── 0017-sched_ext-Allow-BPF-schedulers-to-disallow-specific-.patch
│   ├── 0018-sched_ext-Allow-BPF-schedulers-to-switch-all-eligibl.patch
│   ├── 0019-sched_ext-Print-sched_ext-info-when-dumping-stack.patch
│   ├── 0020-sched_ext-Implement-scx_bpf_kick_cpu-and-task-preemp.patch
│   ├── 0021-sched_ext-Add-a-central-scheduler-which-makes-all-sc.patch
│   ├── 0022-sched_ext-Make-watchdog-handle-ops.dispatch-looping-.patch
│   ├── 0023-sched_ext-Add-task-state-tracking-operations.patch
│   ├── 0024-sched_ext-Implement-tickless-support.patch
│   ├── 0025-sched_ext-Track-tasks-that-are-subjects-of-the-in-fl.patch
│   ├── 0026-sched_ext-Add-cgroup-support.patch
│   ├── 0027-sched_ext-Add-a-cgroup-based-core-scheduling-schedul.patch
│   ├── 0028-sched_ext-Add-a-cgroup-scheduler-which-uses-flattene.patch
│   ├── 0029-sched_ext-Implement-SCX_KICK_WAIT.patch
│   ├── 0030-sched_ext-Implement-sched_ext_ops.cpu_acquire-releas.patch
│   ├── 0031-sched_ext-Implement-sched_ext_ops.cpu_online-offline.patch
│   ├── 0032-sched_ext-Implement-core-sched-support.patch
│   ├── 0033-sched_ext-Add-vtime-ordered-priority-queue-to-dispat.patch
│   ├── 0034-sched_ext-Documentation-scheduler-Document-extensibl.patch
│   ├── 0035-sched_ext-Add-a-basic-userland-vruntime-scheduler.patch
│   ├── 0036-sched_ext-Add-scx_rusty-a-rust-userspace-hybrid-sche.patch
│   ├── 0037-sched_ext-Add-scx_layered-a-highly-configurable-mult.patch
│   ├── 0038-scx-Move-scx_ops_enable_state_str-outside-CONFIG_SCH.patch
│   ├── 0039-scx-Fix-a-straggling-atomic64_set.patch
│   ├── 0040-scx-Use-.bpf.-sub-skel.h-suffix-instead-of-.-sub-ske.patch
│   ├── 0041-scx-Add-s-uSIZE-typedefs-in-scx_common.h.patch
│   ├── 0042-scx_-rusty-layered-Generate-skel-file-in-OUT_DIR.patch
│   ├── 0043-scx_-rusty-layered-ravg_read-is-now-provided-by-scx_.patch
│   ├── 0044-scx_-rusty-layered-Make-naming-and-build-consistent-.patch
│   ├── 0045-scx_-rusty-layered-Run-bindgen-s-clang-with-CLANG_CF.patch
│   ├── 0046-scx_-rusty-layered-Factor-out-build.rs-s-into-scx_ut.patch
│   ├── 0047-scx_-rusty-layered-Follow-scx_utils-BpfBuilder-API-u.patch
│   ├── 0048-scx_-layered-rusty-Minor-build-updates.patch
│   ├── 0049-scx-Move-common-headers-under-include-scx.patch
│   ├── 0050-scx-More-include-path-and-build-updates.patch
│   ├── 0051-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0052-scx-Disable-vtime-ordering-for-internal-DSQs.patch
│   ├── 0053-scx-Enforce-either-or-usage-of-DSQ-FIFO-PRIQ-dispatc.patch
│   ├── 0054-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0055-scx-Remove-now-unused-rb_node-from-first_local_task.patch
│   ├── 0056-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0057-scx-Add-missing-to-error-invocation-in-Makefile.patch
│   ├── 0058-scx-Add-skeleton-for-scx-testing-framework.patch
│   ├── 0059-kernfs-convert-kernfs_idr_lock-to-an-irq-safe-raw-sp.patch
│   ├── 0060-sched_ext-fix-race-in-scx_move_task-with-exiting-tas.patch
│   ├── 0061-scx-Support-direct-dispatching-from-ops.select_cpu.patch
│   ├── 0062-scx-Remove-SCX_ENQ_LOCAL-flag.patch
│   ├── 0063-scx-Add-scx_bpf_select_cpu_dfl-kfunc.patch
│   ├── 0064-scx-Add-selftests-for-new-select_cpu-dispatch-semant.patch
│   ├── 0065-scx-Error-for-a-priq-builtin-DSQ-in-dispatch_enqueue.patch
│   ├── 0066-scx-Add-testcases-for-vtime-dispatching-to-builtin-D.patch
│   ├── 0067-scx-Always-set-task-scx-weight-before-enable.patch
│   ├── 0068-scx-Call-enable-disable-on-entry-exit-to-scx.patch
│   ├── 0069-scx-Rename-prep_enable-and-cancel_enable-add-exit_ta.patch
│   ├── 0070-scx-Add-init_enable_count-testcase.patch
│   ├── 0071-scx-Move-sched_ext_entity.ddsq_id-out-of-modifiable-.patch
│   ├── 0072-scx-Add-missing-DSQ-fallback-test-files.patch
│   ├── 0073-scx-Claim-idle-core-in-scx_select_cpu_dfl-for-nr_cpu.patch
│   ├── 0074-scx-Make-select_cpu_dfl-test-a-bit-less-brittle.patch
│   ├── 0075-scx-Set-default-slice-for-default-select_cpu-dispatc.patch
│   ├── 0076-scx-Avoid-possible-deadlock-with-cpus_read_lock.patch
│   ├── 0077-scx-Use-READ-WRITE_ONCE-for-scx_watchdog_timeout-tim.patch
│   ├── 0078-scx-Rename-rq-scx.watchdog_list-and-friends-to-runna.patch
│   ├── 0079-scx-Factor-out-scx_ops_bypass-and-s-scx_ops_disablin.patch
│   ├── 0080-scx-Implement-bypass-depth-and-always-bypass-while-d.patch
│   ├── 0081-scx-Implement-turning-off-bypassing.patch
│   ├── 0082-scx-Optimize-scx_ops_bypass.patch
│   ├── 0083-scx-Expose-bypassing-state-to-userland.patch
│   ├── 0084-scx-s-register_ext_kfuncs-scx_init.patch
│   ├── 0085-scx-Bypass-while-PM-operations-are-in-progress.patch
│   ├── 0086-scx-Disabling-scx_bpf_kick_cpu-while-bypassing.patch
│   ├── 0087-Revert-scx-Avoid-possible-deadlock-with-cpus_read_lo.patch
│   ├── 0088-scx-Make-scx_task_state-handling-more-idiomatic.patch
│   ├── 0089-scx-Sync-schedulers-from-SCX-v0.1.5-74923c6cdbc3.patch
│   ├── 0090-scx-Fix-direct-dispatch-for-non-builtin-DSQs.patch
│   ├── 0091-scx-Keep-track-of-enq-flags-in-direct-dispatch.patch
│   ├── 0092-scx-Test-vtime-dispatching-from-ops.select_cpu.patch
│   ├── 0093-scx-Implement-scx-selftests-framework.patch
│   ├── 0094-scx-Convert-remaining-testcases-to-use-new-framework.patch
│   ├── 0095-scx-Update-ddsp-testcases-to-check-for-error-exits.patch
│   ├── 0096-scx-Copy-scx_exit_kind-to-scx_test.h.patch
│   ├── 0097-scx-Narrow-cpus_read_lock-critical-section-in-scx_op.patch
│   ├── 0098-scx-Reorder-scx_fork_rwsem-cpu_hotplug_lock-and-scx_.patch
│   ├── 0099-scx-Sync-from-scx-repo.patch
│   ├── 0100-scx-Add-sys-kernel-sched_ext-interface.patch
│   ├── 0101-scx-Replace-sys-kernel-debug-sched-ext-with-tools-sc.patch
│   ├── 0102-scx-Make-the-pointer-passing-to-.dispatch-MAYBE_NULL.patch
│   ├── 0103-selftests-scx-Check-if-MAYBE_NULL-works-for-the-2nd-.patch
│   ├── 0104-scx-Fix-a-couple-follow-ups-to-recent-struct_ops-cha.patch
│   └── 0105-linux6.7-bore4.1.1.patch
├── bore-sched-ext-patches-v19
│   └── 0001-bore-6.7-introduce-BORE-Scheduler-with-BPF-extensibl.patch
├── bore-sched-ext-patches-v19-all
│   └── 0001-bore-sched-ext-patches.patch
├── bore-sched-ext-patches-v19-sep
│   ├── 0001-sched-6.7-Merge-BPF-changes.patch
│   ├── 0002-cgroup-Implement-cgroup_show_cftypes.patch
│   ├── 0003-sched-Restructure-sched_class-order-sanity-checks-in.patch
│   ├── 0004-sched-Allow-sched_cgroup_fork-to-fail-and-introduce-.patch
│   ├── 0005-sched-Add-sched_class-reweight_task.patch
│   ├── 0006-sched-Add-sched_class-switching_to-and-expose-check_.patch
│   ├── 0007-sched-Factor-out-cgroup-weight-conversion-functions.patch
│   ├── 0008-sched-Expose-css_tg-and-__setscheduler_prio.patch
│   ├── 0009-sched-Enumerate-CPU-cgroup-file-types.patch
│   ├── 0010-sched-Add-reason-to-sched_class-rq_-on-off-line.patch
│   ├── 0011-sched-Add-normal_policy.patch
│   ├── 0012-sched_ext-Add-boilerplate-for-extensible-scheduler-c.patch
│   ├── 0013-sched_ext-Implement-BPF-extensible-scheduler-class.patch
│   ├── 0014-sched_ext-Add-scx_simple-and-scx_example_qmap-exampl.patch
│   ├── 0015-sched_ext-Add-sysrq-S-which-disables-the-BPF-schedul.patch
│   ├── 0016-sched_ext-Implement-runnable-task-stall-watchdog.patch
│   ├── 0017-sched_ext-Allow-BPF-schedulers-to-disallow-specific-.patch
│   ├── 0018-sched_ext-Allow-BPF-schedulers-to-switch-all-eligibl.patch
│   ├── 0019-sched_ext-Print-sched_ext-info-when-dumping-stack.patch
│   ├── 0020-sched_ext-Implement-scx_bpf_kick_cpu-and-task-preemp.patch
│   ├── 0021-sched_ext-Add-a-central-scheduler-which-makes-all-sc.patch
│   ├── 0022-sched_ext-Make-watchdog-handle-ops.dispatch-looping-.patch
│   ├── 0023-sched_ext-Add-task-state-tracking-operations.patch
│   ├── 0024-sched_ext-Implement-tickless-support.patch
│   ├── 0025-sched_ext-Track-tasks-that-are-subjects-of-the-in-fl.patch
│   ├── 0026-sched_ext-Add-cgroup-support.patch
│   ├── 0027-sched_ext-Add-a-cgroup-based-core-scheduling-schedul.patch
│   ├── 0028-sched_ext-Add-a-cgroup-scheduler-which-uses-flattene.patch
│   ├── 0029-sched_ext-Implement-SCX_KICK_WAIT.patch
│   ├── 0030-sched_ext-Implement-sched_ext_ops.cpu_acquire-releas.patch
│   ├── 0031-sched_ext-Implement-sched_ext_ops.cpu_online-offline.patch
│   ├── 0032-sched_ext-Implement-core-sched-support.patch
│   ├── 0033-sched_ext-Add-vtime-ordered-priority-queue-to-dispat.patch
│   ├── 0034-sched_ext-Documentation-scheduler-Document-extensibl.patch
│   ├── 0035-sched_ext-Add-a-basic-userland-vruntime-scheduler.patch
│   ├── 0036-sched_ext-Add-scx_rusty-a-rust-userspace-hybrid-sche.patch
│   ├── 0037-sched_ext-Add-scx_layered-a-highly-configurable-mult.patch
│   ├── 0038-scx-Move-scx_ops_enable_state_str-outside-CONFIG_SCH.patch
│   ├── 0039-scx-Fix-a-straggling-atomic64_set.patch
│   ├── 0040-scx-Use-.bpf.-sub-skel.h-suffix-instead-of-.-sub-ske.patch
│   ├── 0041-scx-Add-s-uSIZE-typedefs-in-scx_common.h.patch
│   ├── 0042-scx_-rusty-layered-Generate-skel-file-in-OUT_DIR.patch
│   ├── 0043-scx_-rusty-layered-ravg_read-is-now-provided-by-scx_.patch
│   ├── 0044-scx_-rusty-layered-Make-naming-and-build-consistent-.patch
│   ├── 0045-scx_-rusty-layered-Run-bindgen-s-clang-with-CLANG_CF.patch
│   ├── 0046-scx_-rusty-layered-Factor-out-build.rs-s-into-scx_ut.patch
│   ├── 0047-scx_-rusty-layered-Follow-scx_utils-BpfBuilder-API-u.patch
│   ├── 0048-scx_-layered-rusty-Minor-build-updates.patch
│   ├── 0049-scx-Move-common-headers-under-include-scx.patch
│   ├── 0050-scx-More-include-path-and-build-updates.patch
│   ├── 0051-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0052-scx-Disable-vtime-ordering-for-internal-DSQs.patch
│   ├── 0053-scx-Enforce-either-or-usage-of-DSQ-FIFO-PRIQ-dispatc.patch
│   ├── 0054-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0055-scx-Remove-now-unused-rb_node-from-first_local_task.patch
│   ├── 0056-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0057-scx-Add-missing-to-error-invocation-in-Makefile.patch
│   ├── 0058-scx-Add-skeleton-for-scx-testing-framework.patch
│   ├── 0059-sched_ext-fix-race-in-scx_move_task-with-exiting-tas.patch
│   ├── 0060-scx-Support-direct-dispatching-from-ops.select_cpu.patch
│   ├── 0061-scx-Remove-SCX_ENQ_LOCAL-flag.patch
│   ├── 0062-scx-Add-scx_bpf_select_cpu_dfl-kfunc.patch
│   ├── 0063-scx-Add-selftests-for-new-select_cpu-dispatch-semant.patch
│   ├── 0064-scx-Error-for-a-priq-builtin-DSQ-in-dispatch_enqueue.patch
│   ├── 0065-scx-Add-testcases-for-vtime-dispatching-to-builtin-D.patch
│   ├── 0066-scx-Always-set-task-scx-weight-before-enable.patch
│   ├── 0067-scx-Call-enable-disable-on-entry-exit-to-scx.patch
│   ├── 0068-scx-Rename-prep_enable-and-cancel_enable-add-exit_ta.patch
│   ├── 0069-scx-Add-init_enable_count-testcase.patch
│   ├── 0070-scx-Move-sched_ext_entity.ddsq_id-out-of-modifiable-.patch
│   ├── 0071-scx-Add-missing-DSQ-fallback-test-files.patch
│   ├── 0072-scx-Claim-idle-core-in-scx_select_cpu_dfl-for-nr_cpu.patch
│   ├── 0073-scx-Make-select_cpu_dfl-test-a-bit-less-brittle.patch
│   ├── 0074-scx-Set-default-slice-for-default-select_cpu-dispatc.patch
│   ├── 0075-scx-Avoid-possible-deadlock-with-cpus_read_lock.patch
│   ├── 0076-scx-Use-READ-WRITE_ONCE-for-scx_watchdog_timeout-tim.patch
│   ├── 0077-scx-Rename-rq-scx.watchdog_list-and-friends-to-runna.patch
│   ├── 0078-scx-Factor-out-scx_ops_bypass-and-s-scx_ops_disablin.patch
│   ├── 0079-scx-Implement-bypass-depth-and-always-bypass-while-d.patch
│   ├── 0080-scx-Implement-turning-off-bypassing.patch
│   ├── 0081-scx-Optimize-scx_ops_bypass.patch
│   ├── 0082-scx-Expose-bypassing-state-to-userland.patch
│   ├── 0083-scx-s-register_ext_kfuncs-scx_init.patch
│   ├── 0084-scx-Bypass-while-PM-operations-are-in-progress.patch
│   ├── 0085-scx-Disabling-scx_bpf_kick_cpu-while-bypassing.patch
│   ├── 0086-Revert-scx-Avoid-possible-deadlock-with-cpus_read_lo.patch
│   ├── 0087-scx-Make-scx_task_state-handling-more-idiomatic.patch
│   ├── 0088-scx-Sync-schedulers-from-SCX-v0.1.5-74923c6cdbc3.patch
│   ├── 0089-scx-Fix-direct-dispatch-for-non-builtin-DSQs.patch
│   ├── 0090-scx-Keep-track-of-enq-flags-in-direct-dispatch.patch
│   ├── 0091-scx-Test-vtime-dispatching-from-ops.select_cpu.patch
│   ├── 0092-scx-Implement-scx-selftests-framework.patch
│   ├── 0093-scx-Convert-remaining-testcases-to-use-new-framework.patch
│   ├── 0094-scx-Update-ddsp-testcases-to-check-for-error-exits.patch
│   ├── 0095-scx-Copy-scx_exit_kind-to-scx_test.h.patch
│   ├── 0096-scx-Narrow-cpus_read_lock-critical-section-in-scx_op.patch
│   ├── 0097-scx-Reorder-scx_fork_rwsem-cpu_hotplug_lock-and-scx_.patch
│   ├── 0098-scx-Sync-from-scx-repo.patch
│   ├── 0099-scx-Add-sys-kernel-sched_ext-interface.patch
│   ├── 0100-scx-Replace-sys-kernel-debug-sched-ext-with-tools-sc.patch
│   ├── 0101-scx-Make-the-pointer-passing-to-.dispatch-MAYBE_NULL.patch
│   ├── 0102-selftests-scx-Check-if-MAYBE_NULL-works-for-the-2nd-.patch
│   ├── 0103-scx-Fix-a-couple-follow-ups-to-recent-struct_ops-cha.patch
│   └── 0104-linux6.7-bore4.1.1.patch
├── bore-sched-ext-patches-v2
│   └── 0001-bore-6.7-introduce-BORE-Scheduler-with-BPF-extensibl.patch
├── bore-sched-ext-patches-v20
│   └── 0001-bore-6.7-introduce-BORE-Scheduler-with-BPF-extensibl.patch
├── bore-sched-ext-patches-v20-all
│   └── 0001-bore-sched-ext-patches.patch
├── bore-sched-ext-patches-v20-sep
│   ├── 0001-sched-6.7-Merge-BPF-changes.patch
│   ├── 0002-cgroup-Implement-cgroup_show_cftypes.patch
│   ├── 0003-sched-Restructure-sched_class-order-sanity-checks-in.patch
│   ├── 0004-sched-Allow-sched_cgroup_fork-to-fail-and-introduce-.patch
│   ├── 0005-sched-Add-sched_class-reweight_task.patch
│   ├── 0006-sched-Add-sched_class-switching_to-and-expose-check_.patch
│   ├── 0007-sched-Factor-out-cgroup-weight-conversion-functions.patch
│   ├── 0008-sched-Expose-css_tg-and-__setscheduler_prio.patch
│   ├── 0009-sched-Enumerate-CPU-cgroup-file-types.patch
│   ├── 0010-sched-Add-reason-to-sched_class-rq_-on-off-line.patch
│   ├── 0011-sched-Add-normal_policy.patch
│   ├── 0012-sched_ext-Add-boilerplate-for-extensible-scheduler-c.patch
│   ├── 0013-sched_ext-Implement-BPF-extensible-scheduler-class.patch
│   ├── 0014-sched_ext-Add-scx_simple-and-scx_example_qmap-exampl.patch
│   ├── 0015-sched_ext-Add-sysrq-S-which-disables-the-BPF-schedul.patch
│   ├── 0016-sched_ext-Implement-runnable-task-stall-watchdog.patch
│   ├── 0017-sched_ext-Allow-BPF-schedulers-to-disallow-specific-.patch
│   ├── 0018-sched_ext-Allow-BPF-schedulers-to-switch-all-eligibl.patch
│   ├── 0019-sched_ext-Print-sched_ext-info-when-dumping-stack.patch
│   ├── 0020-sched_ext-Implement-scx_bpf_kick_cpu-and-task-preemp.patch
│   ├── 0021-sched_ext-Add-a-central-scheduler-which-makes-all-sc.patch
│   ├── 0022-sched_ext-Make-watchdog-handle-ops.dispatch-looping-.patch
│   ├── 0023-sched_ext-Add-task-state-tracking-operations.patch
│   ├── 0024-sched_ext-Implement-tickless-support.patch
│   ├── 0025-sched_ext-Track-tasks-that-are-subjects-of-the-in-fl.patch
│   ├── 0026-sched_ext-Add-cgroup-support.patch
│   ├── 0027-sched_ext-Add-a-cgroup-based-core-scheduling-schedul.patch
│   ├── 0028-sched_ext-Add-a-cgroup-scheduler-which-uses-flattene.patch
│   ├── 0029-sched_ext-Implement-SCX_KICK_WAIT.patch
│   ├── 0030-sched_ext-Implement-sched_ext_ops.cpu_acquire-releas.patch
│   ├── 0031-sched_ext-Implement-sched_ext_ops.cpu_online-offline.patch
│   ├── 0032-sched_ext-Implement-core-sched-support.patch
│   ├── 0033-sched_ext-Add-vtime-ordered-priority-queue-to-dispat.patch
│   ├── 0034-sched_ext-Documentation-scheduler-Document-extensibl.patch
│   ├── 0035-sched_ext-Add-a-basic-userland-vruntime-scheduler.patch
│   ├── 0036-sched_ext-Add-scx_rusty-a-rust-userspace-hybrid-sche.patch
│   ├── 0037-sched_ext-Add-scx_layered-a-highly-configurable-mult.patch
│   ├── 0038-scx-Move-scx_ops_enable_state_str-outside-CONFIG_SCH.patch
│   ├── 0039-scx-Fix-a-straggling-atomic64_set.patch
│   ├── 0040-scx-Use-.bpf.-sub-skel.h-suffix-instead-of-.-sub-ske.patch
│   ├── 0041-scx-Add-s-uSIZE-typedefs-in-scx_common.h.patch
│   ├── 0042-scx_-rusty-layered-Generate-skel-file-in-OUT_DIR.patch
│   ├── 0043-scx_-rusty-layered-ravg_read-is-now-provided-by-scx_.patch
│   ├── 0044-scx_-rusty-layered-Make-naming-and-build-consistent-.patch
│   ├── 0045-scx_-rusty-layered-Run-bindgen-s-clang-with-CLANG_CF.patch
│   ├── 0046-scx_-rusty-layered-Factor-out-build.rs-s-into-scx_ut.patch
│   ├── 0047-scx_-rusty-layered-Follow-scx_utils-BpfBuilder-API-u.patch
│   ├── 0048-scx_-layered-rusty-Minor-build-updates.patch
│   ├── 0049-scx-Move-common-headers-under-include-scx.patch
│   ├── 0050-scx-More-include-path-and-build-updates.patch
│   ├── 0051-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0052-scx-Disable-vtime-ordering-for-internal-DSQs.patch
│   ├── 0053-scx-Enforce-either-or-usage-of-DSQ-FIFO-PRIQ-dispatc.patch
│   ├── 0054-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0055-scx-Remove-now-unused-rb_node-from-first_local_task.patch
│   ├── 0056-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0057-scx-Add-missing-to-error-invocation-in-Makefile.patch
│   ├── 0058-scx-Add-skeleton-for-scx-testing-framework.patch
│   ├── 0059-sched_ext-fix-race-in-scx_move_task-with-exiting-tas.patch
│   ├── 0060-scx-Support-direct-dispatching-from-ops.select_cpu.patch
│   ├── 0061-scx-Remove-SCX_ENQ_LOCAL-flag.patch
│   ├── 0062-scx-Add-scx_bpf_select_cpu_dfl-kfunc.patch
│   ├── 0063-scx-Add-selftests-for-new-select_cpu-dispatch-semant.patch
│   ├── 0064-scx-Error-for-a-priq-builtin-DSQ-in-dispatch_enqueue.patch
│   ├── 0065-scx-Add-testcases-for-vtime-dispatching-to-builtin-D.patch
│   ├── 0066-scx-Always-set-task-scx-weight-before-enable.patch
│   ├── 0067-scx-Call-enable-disable-on-entry-exit-to-scx.patch
│   ├── 0068-scx-Rename-prep_enable-and-cancel_enable-add-exit_ta.patch
│   ├── 0069-scx-Add-init_enable_count-testcase.patch
│   ├── 0070-scx-Move-sched_ext_entity.ddsq_id-out-of-modifiable-.patch
│   ├── 0071-scx-Add-missing-DSQ-fallback-test-files.patch
│   ├── 0072-scx-Claim-idle-core-in-scx_select_cpu_dfl-for-nr_cpu.patch
│   ├── 0073-scx-Make-select_cpu_dfl-test-a-bit-less-brittle.patch
│   ├── 0074-scx-Set-default-slice-for-default-select_cpu-dispatc.patch
│   ├── 0075-scx-Avoid-possible-deadlock-with-cpus_read_lock.patch
│   ├── 0076-scx-Use-READ-WRITE_ONCE-for-scx_watchdog_timeout-tim.patch
│   ├── 0077-scx-Rename-rq-scx.watchdog_list-and-friends-to-runna.patch
│   ├── 0078-scx-Factor-out-scx_ops_bypass-and-s-scx_ops_disablin.patch
│   ├── 0079-scx-Implement-bypass-depth-and-always-bypass-while-d.patch
│   ├── 0080-scx-Implement-turning-off-bypassing.patch
│   ├── 0081-scx-Optimize-scx_ops_bypass.patch
│   ├── 0082-scx-Expose-bypassing-state-to-userland.patch
│   ├── 0083-scx-s-register_ext_kfuncs-scx_init.patch
│   ├── 0084-scx-Bypass-while-PM-operations-are-in-progress.patch
│   ├── 0085-scx-Disabling-scx_bpf_kick_cpu-while-bypassing.patch
│   ├── 0086-Revert-scx-Avoid-possible-deadlock-with-cpus_read_lo.patch
│   ├── 0087-scx-Make-scx_task_state-handling-more-idiomatic.patch
│   ├── 0088-scx-Sync-schedulers-from-SCX-v0.1.5-74923c6cdbc3.patch
│   ├── 0089-scx-Fix-direct-dispatch-for-non-builtin-DSQs.patch
│   ├── 0090-scx-Keep-track-of-enq-flags-in-direct-dispatch.patch
│   ├── 0091-scx-Test-vtime-dispatching-from-ops.select_cpu.patch
│   ├── 0092-scx-Implement-scx-selftests-framework.patch
│   ├── 0093-scx-Convert-remaining-testcases-to-use-new-framework.patch
│   ├── 0094-scx-Update-ddsp-testcases-to-check-for-error-exits.patch
│   ├── 0095-scx-Copy-scx_exit_kind-to-scx_test.h.patch
│   ├── 0096-scx-Narrow-cpus_read_lock-critical-section-in-scx_op.patch
│   ├── 0097-scx-Reorder-scx_fork_rwsem-cpu_hotplug_lock-and-scx_.patch
│   ├── 0098-scx-Sync-from-scx-repo.patch
│   ├── 0099-scx-Add-sys-kernel-sched_ext-interface.patch
│   ├── 0100-scx-Replace-sys-kernel-debug-sched-ext-with-tools-sc.patch
│   ├── 0101-scx-Make-the-pointer-passing-to-.dispatch-MAYBE_NULL.patch
│   ├── 0102-selftests-scx-Check-if-MAYBE_NULL-works-for-the-2nd-.patch
│   ├── 0103-scx-Fix-a-couple-follow-ups-to-recent-struct_ops-cha.patch
│   ├── 0104-scx-Make-scx_exit_info-fields-dynamically-allocated.patch
│   ├── 0105-scx-Misc-scx_exit_info-related-updates.patch
│   ├── 0106-scx-Dump-debug-info-after-an-abort.patch
│   └── 0107-linux6.7-bore4.1.1.patch
├── bore-sched-ext-patches-v21
│   └── 0001-bore-6.7-introduce-BORE-Scheduler-with-BPF-extensibl.patch
├── bore-sched-ext-patches-v21-all
│   └── 0001-bore-sched-ext-patches.patch
├── bore-sched-ext-patches-v21-sep
│   ├── 0001-sched-6.7-Merge-BPF-changes.patch
│   ├── 0002-cgroup-Implement-cgroup_show_cftypes.patch
│   ├── 0003-sched-Restructure-sched_class-order-sanity-checks-in.patch
│   ├── 0004-sched-Allow-sched_cgroup_fork-to-fail-and-introduce-.patch
│   ├── 0005-sched-Add-sched_class-reweight_task.patch
│   ├── 0006-sched-Add-sched_class-switching_to-and-expose-check_.patch
│   ├── 0007-sched-Factor-out-cgroup-weight-conversion-functions.patch
│   ├── 0008-sched-Expose-css_tg-and-__setscheduler_prio.patch
│   ├── 0009-sched-Enumerate-CPU-cgroup-file-types.patch
│   ├── 0010-sched-Add-reason-to-sched_class-rq_-on-off-line.patch
│   ├── 0011-sched-Add-normal_policy.patch
│   ├── 0012-sched_ext-Add-boilerplate-for-extensible-scheduler-c.patch
│   ├── 0013-sched_ext-Implement-BPF-extensible-scheduler-class.patch
│   ├── 0014-sched_ext-Add-scx_simple-and-scx_example_qmap-exampl.patch
│   ├── 0015-sched_ext-Add-sysrq-S-which-disables-the-BPF-schedul.patch
│   ├── 0016-sched_ext-Implement-runnable-task-stall-watchdog.patch
│   ├── 0017-sched_ext-Allow-BPF-schedulers-to-disallow-specific-.patch
│   ├── 0018-sched_ext-Allow-BPF-schedulers-to-switch-all-eligibl.patch
│   ├── 0019-sched_ext-Print-sched_ext-info-when-dumping-stack.patch
│   ├── 0020-sched_ext-Implement-scx_bpf_kick_cpu-and-task-preemp.patch
│   ├── 0021-sched_ext-Add-a-central-scheduler-which-makes-all-sc.patch
│   ├── 0022-sched_ext-Make-watchdog-handle-ops.dispatch-looping-.patch
│   ├── 0023-sched_ext-Add-task-state-tracking-operations.patch
│   ├── 0024-sched_ext-Implement-tickless-support.patch
│   ├── 0025-sched_ext-Track-tasks-that-are-subjects-of-the-in-fl.patch
│   ├── 0026-sched_ext-Add-cgroup-support.patch
│   ├── 0027-sched_ext-Add-a-cgroup-based-core-scheduling-schedul.patch
│   ├── 0028-sched_ext-Add-a-cgroup-scheduler-which-uses-flattene.patch
│   ├── 0029-sched_ext-Implement-SCX_KICK_WAIT.patch
│   ├── 0030-sched_ext-Implement-sched_ext_ops.cpu_acquire-releas.patch
│   ├── 0031-sched_ext-Implement-sched_ext_ops.cpu_online-offline.patch
│   ├── 0032-sched_ext-Implement-core-sched-support.patch
│   ├── 0033-sched_ext-Add-vtime-ordered-priority-queue-to-dispat.patch
│   ├── 0034-sched_ext-Documentation-scheduler-Document-extensibl.patch
│   ├── 0035-sched_ext-Add-a-basic-userland-vruntime-scheduler.patch
│   ├── 0036-sched_ext-Add-scx_rusty-a-rust-userspace-hybrid-sche.patch
│   ├── 0037-sched_ext-Add-scx_layered-a-highly-configurable-mult.patch
│   ├── 0038-scx-Move-scx_ops_enable_state_str-outside-CONFIG_SCH.patch
│   ├── 0039-scx-Fix-a-straggling-atomic64_set.patch
│   ├── 0040-scx-Use-.bpf.-sub-skel.h-suffix-instead-of-.-sub-ske.patch
│   ├── 0041-scx-Add-s-uSIZE-typedefs-in-scx_common.h.patch
│   ├── 0042-scx_-rusty-layered-Generate-skel-file-in-OUT_DIR.patch
│   ├── 0043-scx_-rusty-layered-ravg_read-is-now-provided-by-scx_.patch
│   ├── 0044-scx_-rusty-layered-Make-naming-and-build-consistent-.patch
│   ├── 0045-scx_-rusty-layered-Run-bindgen-s-clang-with-CLANG_CF.patch
│   ├── 0046-scx_-rusty-layered-Factor-out-build.rs-s-into-scx_ut.patch
│   ├── 0047-scx_-rusty-layered-Follow-scx_utils-BpfBuilder-API-u.patch
│   ├── 0048-scx_-layered-rusty-Minor-build-updates.patch
│   ├── 0049-scx-Move-common-headers-under-include-scx.patch
│   ├── 0050-scx-More-include-path-and-build-updates.patch
│   ├── 0051-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0052-scx-Disable-vtime-ordering-for-internal-DSQs.patch
│   ├── 0053-scx-Enforce-either-or-usage-of-DSQ-FIFO-PRIQ-dispatc.patch
│   ├── 0054-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0055-scx-Remove-now-unused-rb_node-from-first_local_task.patch
│   ├── 0056-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0057-scx-Add-missing-to-error-invocation-in-Makefile.patch
│   ├── 0058-scx-Add-skeleton-for-scx-testing-framework.patch
│   ├── 0059-sched_ext-fix-race-in-scx_move_task-with-exiting-tas.patch
│   ├── 0060-scx-Support-direct-dispatching-from-ops.select_cpu.patch
│   ├── 0061-scx-Remove-SCX_ENQ_LOCAL-flag.patch
│   ├── 0062-scx-Add-scx_bpf_select_cpu_dfl-kfunc.patch
│   ├── 0063-scx-Add-selftests-for-new-select_cpu-dispatch-semant.patch
│   ├── 0064-scx-Error-for-a-priq-builtin-DSQ-in-dispatch_enqueue.patch
│   ├── 0065-scx-Add-testcases-for-vtime-dispatching-to-builtin-D.patch
│   ├── 0066-scx-Always-set-task-scx-weight-before-enable.patch
│   ├── 0067-scx-Call-enable-disable-on-entry-exit-to-scx.patch
│   ├── 0068-scx-Rename-prep_enable-and-cancel_enable-add-exit_ta.patch
│   ├── 0069-scx-Add-init_enable_count-testcase.patch
│   ├── 0070-scx-Move-sched_ext_entity.ddsq_id-out-of-modifiable-.patch
│   ├── 0071-scx-Add-missing-DSQ-fallback-test-files.patch
│   ├── 0072-scx-Claim-idle-core-in-scx_select_cpu_dfl-for-nr_cpu.patch
│   ├── 0073-scx-Make-select_cpu_dfl-test-a-bit-less-brittle.patch
│   ├── 0074-scx-Set-default-slice-for-default-select_cpu-dispatc.patch
│   ├── 0075-scx-Avoid-possible-deadlock-with-cpus_read_lock.patch
│   ├── 0076-scx-Use-READ-WRITE_ONCE-for-scx_watchdog_timeout-tim.patch
│   ├── 0077-scx-Rename-rq-scx.watchdog_list-and-friends-to-runna.patch
│   ├── 0078-scx-Factor-out-scx_ops_bypass-and-s-scx_ops_disablin.patch
│   ├── 0079-scx-Implement-bypass-depth-and-always-bypass-while-d.patch
│   ├── 0080-scx-Implement-turning-off-bypassing.patch
│   ├── 0081-scx-Optimize-scx_ops_bypass.patch
│   ├── 0082-scx-Expose-bypassing-state-to-userland.patch
│   ├── 0083-scx-s-register_ext_kfuncs-scx_init.patch
│   ├── 0084-scx-Bypass-while-PM-operations-are-in-progress.patch
│   ├── 0085-scx-Disabling-scx_bpf_kick_cpu-while-bypassing.patch
│   ├── 0086-Revert-scx-Avoid-possible-deadlock-with-cpus_read_lo.patch
│   ├── 0087-scx-Make-scx_task_state-handling-more-idiomatic.patch
│   ├── 0088-scx-Sync-schedulers-from-SCX-v0.1.5-74923c6cdbc3.patch
│   ├── 0089-scx-Fix-direct-dispatch-for-non-builtin-DSQs.patch
│   ├── 0090-scx-Keep-track-of-enq-flags-in-direct-dispatch.patch
│   ├── 0091-scx-Test-vtime-dispatching-from-ops.select_cpu.patch
│   ├── 0092-scx-Implement-scx-selftests-framework.patch
│   ├── 0093-scx-Convert-remaining-testcases-to-use-new-framework.patch
│   ├── 0094-scx-Update-ddsp-testcases-to-check-for-error-exits.patch
│   ├── 0095-scx-Copy-scx_exit_kind-to-scx_test.h.patch
│   ├── 0096-scx-Narrow-cpus_read_lock-critical-section-in-scx_op.patch
│   ├── 0097-scx-Reorder-scx_fork_rwsem-cpu_hotplug_lock-and-scx_.patch
│   ├── 0098-scx-Sync-from-scx-repo.patch
│   ├── 0099-scx-Add-sys-kernel-sched_ext-interface.patch
│   ├── 0100-scx-Replace-sys-kernel-debug-sched-ext-with-tools-sc.patch
│   ├── 0101-scx-Make-the-pointer-passing-to-.dispatch-MAYBE_NULL.patch
│   ├── 0102-selftests-scx-Check-if-MAYBE_NULL-works-for-the-2nd-.patch
│   ├── 0103-scx-Fix-a-couple-follow-ups-to-recent-struct_ops-cha.patch
│   ├── 0104-scx-Make-scx_exit_info-fields-dynamically-allocated.patch
│   ├── 0105-scx-Misc-scx_exit_info-related-updates.patch
│   ├── 0106-scx-Dump-debug-info-after-an-abort.patch
│   ├── 0107-scx-rq-should-be-locked-when-calling-scx_ops_exit_ta.patch
│   └── 0108-linux6.7-bore4.1.1.patch
├── bore-sched-ext-patches-v22
│   └── 0001-bore-6.7-introduce-BORE-Scheduler-with-BPF-extensibl.patch
├── bore-sched-ext-patches-v22-all
│   └── 0001-bore-sched-ext-patches.patch
├── bore-sched-ext-patches-v22-sep
│   ├── 0001-sched-6.7-Merge-BPF-changes.patch
│   ├── 0002-cgroup-Implement-cgroup_show_cftypes.patch
│   ├── 0003-sched-Restructure-sched_class-order-sanity-checks-in.patch
│   ├── 0004-sched-Allow-sched_cgroup_fork-to-fail-and-introduce-.patch
│   ├── 0005-sched-Add-sched_class-reweight_task.patch
│   ├── 0006-sched-Add-sched_class-switching_to-and-expose-check_.patch
│   ├── 0007-sched-Factor-out-cgroup-weight-conversion-functions.patch
│   ├── 0008-sched-Expose-css_tg-and-__setscheduler_prio.patch
│   ├── 0009-sched-Enumerate-CPU-cgroup-file-types.patch
│   ├── 0010-sched-Add-reason-to-sched_class-rq_-on-off-line.patch
│   ├── 0011-sched-Add-normal_policy.patch
│   ├── 0012-sched_ext-Add-boilerplate-for-extensible-scheduler-c.patch
│   ├── 0013-sched_ext-Implement-BPF-extensible-scheduler-class.patch
│   ├── 0014-sched_ext-Add-scx_simple-and-scx_example_qmap-exampl.patch
│   ├── 0015-sched_ext-Add-sysrq-S-which-disables-the-BPF-schedul.patch
│   ├── 0016-sched_ext-Implement-runnable-task-stall-watchdog.patch
│   ├── 0017-sched_ext-Allow-BPF-schedulers-to-disallow-specific-.patch
│   ├── 0018-sched_ext-Allow-BPF-schedulers-to-switch-all-eligibl.patch
│   ├── 0019-sched_ext-Print-sched_ext-info-when-dumping-stack.patch
│   ├── 0020-sched_ext-Implement-scx_bpf_kick_cpu-and-task-preemp.patch
│   ├── 0021-sched_ext-Add-a-central-scheduler-which-makes-all-sc.patch
│   ├── 0022-sched_ext-Make-watchdog-handle-ops.dispatch-looping-.patch
│   ├── 0023-sched_ext-Add-task-state-tracking-operations.patch
│   ├── 0024-sched_ext-Implement-tickless-support.patch
│   ├── 0025-sched_ext-Track-tasks-that-are-subjects-of-the-in-fl.patch
│   ├── 0026-sched_ext-Add-cgroup-support.patch
│   ├── 0027-sched_ext-Add-a-cgroup-based-core-scheduling-schedul.patch
│   ├── 0028-sched_ext-Add-a-cgroup-scheduler-which-uses-flattene.patch
│   ├── 0029-sched_ext-Implement-SCX_KICK_WAIT.patch
│   ├── 0030-sched_ext-Implement-sched_ext_ops.cpu_acquire-releas.patch
│   ├── 0031-sched_ext-Implement-sched_ext_ops.cpu_online-offline.patch
│   ├── 0032-sched_ext-Implement-core-sched-support.patch
│   ├── 0033-sched_ext-Add-vtime-ordered-priority-queue-to-dispat.patch
│   ├── 0034-sched_ext-Documentation-scheduler-Document-extensibl.patch
│   ├── 0035-sched_ext-Add-a-basic-userland-vruntime-scheduler.patch
│   ├── 0036-sched_ext-Add-scx_rusty-a-rust-userspace-hybrid-sche.patch
│   ├── 0037-sched_ext-Add-scx_layered-a-highly-configurable-mult.patch
│   ├── 0038-scx-Move-scx_ops_enable_state_str-outside-CONFIG_SCH.patch
│   ├── 0039-scx-Fix-a-straggling-atomic64_set.patch
│   ├── 0040-scx-Use-.bpf.-sub-skel.h-suffix-instead-of-.-sub-ske.patch
│   ├── 0041-scx-Add-s-uSIZE-typedefs-in-scx_common.h.patch
│   ├── 0042-scx_-rusty-layered-Generate-skel-file-in-OUT_DIR.patch
│   ├── 0043-scx_-rusty-layered-ravg_read-is-now-provided-by-scx_.patch
│   ├── 0044-scx_-rusty-layered-Make-naming-and-build-consistent-.patch
│   ├── 0045-scx_-rusty-layered-Run-bindgen-s-clang-with-CLANG_CF.patch
│   ├── 0046-scx_-rusty-layered-Factor-out-build.rs-s-into-scx_ut.patch
│   ├── 0047-scx_-rusty-layered-Follow-scx_utils-BpfBuilder-API-u.patch
│   ├── 0048-scx_-layered-rusty-Minor-build-updates.patch
│   ├── 0049-scx-Move-common-headers-under-include-scx.patch
│   ├── 0050-scx-More-include-path-and-build-updates.patch
│   ├── 0051-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0052-scx-Disable-vtime-ordering-for-internal-DSQs.patch
│   ├── 0053-scx-Enforce-either-or-usage-of-DSQ-FIFO-PRIQ-dispatc.patch
│   ├── 0054-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0055-scx-Remove-now-unused-rb_node-from-first_local_task.patch
│   ├── 0056-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0057-scx-Add-missing-to-error-invocation-in-Makefile.patch
│   ├── 0058-scx-Add-skeleton-for-scx-testing-framework.patch
│   ├── 0059-sched_ext-fix-race-in-scx_move_task-with-exiting-tas.patch
│   ├── 0060-scx-Support-direct-dispatching-from-ops.select_cpu.patch
│   ├── 0061-scx-Remove-SCX_ENQ_LOCAL-flag.patch
│   ├── 0062-scx-Add-scx_bpf_select_cpu_dfl-kfunc.patch
│   ├── 0063-scx-Add-selftests-for-new-select_cpu-dispatch-semant.patch
│   ├── 0064-scx-Error-for-a-priq-builtin-DSQ-in-dispatch_enqueue.patch
│   ├── 0065-scx-Add-testcases-for-vtime-dispatching-to-builtin-D.patch
│   ├── 0066-scx-Always-set-task-scx-weight-before-enable.patch
│   ├── 0067-scx-Call-enable-disable-on-entry-exit-to-scx.patch
│   ├── 0068-scx-Rename-prep_enable-and-cancel_enable-add-exit_ta.patch
│   ├── 0069-scx-Add-init_enable_count-testcase.patch
│   ├── 0070-scx-Move-sched_ext_entity.ddsq_id-out-of-modifiable-.patch
│   ├── 0071-scx-Add-missing-DSQ-fallback-test-files.patch
│   ├── 0072-scx-Claim-idle-core-in-scx_select_cpu_dfl-for-nr_cpu.patch
│   ├── 0073-scx-Make-select_cpu_dfl-test-a-bit-less-brittle.patch
│   ├── 0074-scx-Set-default-slice-for-default-select_cpu-dispatc.patch
│   ├── 0075-scx-Avoid-possible-deadlock-with-cpus_read_lock.patch
│   ├── 0076-scx-Use-READ-WRITE_ONCE-for-scx_watchdog_timeout-tim.patch
│   ├── 0077-scx-Rename-rq-scx.watchdog_list-and-friends-to-runna.patch
│   ├── 0078-scx-Factor-out-scx_ops_bypass-and-s-scx_ops_disablin.patch
│   ├── 0079-scx-Implement-bypass-depth-and-always-bypass-while-d.patch
│   ├── 0080-scx-Implement-turning-off-bypassing.patch
│   ├── 0081-scx-Optimize-scx_ops_bypass.patch
│   ├── 0082-scx-Expose-bypassing-state-to-userland.patch
│   ├── 0083-scx-s-register_ext_kfuncs-scx_init.patch
│   ├── 0084-scx-Bypass-while-PM-operations-are-in-progress.patch
│   ├── 0085-scx-Disabling-scx_bpf_kick_cpu-while-bypassing.patch
│   ├── 0086-Revert-scx-Avoid-possible-deadlock-with-cpus_read_lo.patch
│   ├── 0087-scx-Make-scx_task_state-handling-more-idiomatic.patch
│   ├── 0088-scx-Sync-schedulers-from-SCX-v0.1.5-74923c6cdbc3.patch
│   ├── 0089-scx-Fix-direct-dispatch-for-non-builtin-DSQs.patch
│   ├── 0090-scx-Keep-track-of-enq-flags-in-direct-dispatch.patch
│   ├── 0091-scx-Test-vtime-dispatching-from-ops.select_cpu.patch
│   ├── 0092-scx-Implement-scx-selftests-framework.patch
│   ├── 0093-scx-Convert-remaining-testcases-to-use-new-framework.patch
│   ├── 0094-scx-Update-ddsp-testcases-to-check-for-error-exits.patch
│   ├── 0095-scx-Copy-scx_exit_kind-to-scx_test.h.patch
│   ├── 0096-scx-Narrow-cpus_read_lock-critical-section-in-scx_op.patch
│   ├── 0097-scx-Reorder-scx_fork_rwsem-cpu_hotplug_lock-and-scx_.patch
│   ├── 0098-scx-Sync-from-scx-repo.patch
│   ├── 0099-scx-Add-sys-kernel-sched_ext-interface.patch
│   ├── 0100-scx-Replace-sys-kernel-debug-sched-ext-with-tools-sc.patch
│   ├── 0101-scx-Make-the-pointer-passing-to-.dispatch-MAYBE_NULL.patch
│   ├── 0102-selftests-scx-Check-if-MAYBE_NULL-works-for-the-2nd-.patch
│   ├── 0103-scx-Fix-a-couple-follow-ups-to-recent-struct_ops-cha.patch
│   ├── 0104-scx-Make-scx_exit_info-fields-dynamically-allocated.patch
│   ├── 0105-scx-Misc-scx_exit_info-related-updates.patch
│   ├── 0106-scx-Dump-debug-info-after-an-abort.patch
│   ├── 0107-scx-rq-should-be-locked-when-calling-scx_ops_exit_ta.patch
│   ├── 0108-kernfs-Rearrange-kernfs_node-fields-to-reduce-its-si.patch
│   ├── 0109-kernfs-RCU-protect-kernfs_nodes-and-avoid-kernfs_idr.patch
│   └── 0110-linux6.7-bore4.1.1.patch
├── bore-sched-ext-patches-v2-all
│   └── 0001-bore-sched-ext-patches.patch
├── bore-sched-ext-patches-v2-sep
│   ├── 0001-sched-6.7-Merge-BPF-changes.patch
│   ├── 0002-cgroup-Implement-cgroup_show_cftypes.patch
│   ├── 0003-sched-Restructure-sched_class-order-sanity-checks-in.patch
│   ├── 0004-sched-Allow-sched_cgroup_fork-to-fail-and-introduce-.patch
│   ├── 0005-sched-Add-sched_class-reweight_task.patch
│   ├── 0006-sched-Add-sched_class-switching_to-and-expose-check_.patch
│   ├── 0007-sched-Factor-out-cgroup-weight-conversion-functions.patch
│   ├── 0008-sched-Expose-css_tg-and-__setscheduler_prio.patch
│   ├── 0009-sched-Enumerate-CPU-cgroup-file-types.patch
│   ├── 0010-sched-Add-reason-to-sched_class-rq_-on-off-line.patch
│   ├── 0011-sched-Add-normal_policy.patch
│   ├── 0012-sched_ext-Add-boilerplate-for-extensible-scheduler-c.patch
│   ├── 0013-sched_ext-Implement-BPF-extensible-scheduler-class.patch
│   ├── 0014-sched_ext-Add-scx_simple-and-scx_example_qmap-exampl.patch
│   ├── 0015-sched_ext-Add-sysrq-S-which-disables-the-BPF-schedul.patch
│   ├── 0016-sched_ext-Implement-runnable-task-stall-watchdog.patch
│   ├── 0017-sched_ext-Allow-BPF-schedulers-to-disallow-specific-.patch
│   ├── 0018-sched_ext-Allow-BPF-schedulers-to-switch-all-eligibl.patch
│   ├── 0019-sched_ext-Print-sched_ext-info-when-dumping-stack.patch
│   ├── 0020-sched_ext-Implement-scx_bpf_kick_cpu-and-task-preemp.patch
│   ├── 0021-sched_ext-Add-a-central-scheduler-which-makes-all-sc.patch
│   ├── 0022-sched_ext-Make-watchdog-handle-ops.dispatch-looping-.patch
│   ├── 0023-sched_ext-Add-task-state-tracking-operations.patch
│   ├── 0024-sched_ext-Implement-tickless-support.patch
│   ├── 0025-sched_ext-Track-tasks-that-are-subjects-of-the-in-fl.patch
│   ├── 0026-sched_ext-Add-cgroup-support.patch
│   ├── 0027-sched_ext-Add-a-cgroup-based-core-scheduling-schedul.patch
│   ├── 0028-sched_ext-Add-a-cgroup-scheduler-which-uses-flattene.patch
│   ├── 0029-sched_ext-Implement-SCX_KICK_WAIT.patch
│   ├── 0030-sched_ext-Implement-sched_ext_ops.cpu_acquire-releas.patch
│   ├── 0031-sched_ext-Implement-sched_ext_ops.cpu_online-offline.patch
│   ├── 0032-sched_ext-Implement-core-sched-support.patch
│   ├── 0033-sched_ext-Add-vtime-ordered-priority-queue-to-dispat.patch
│   ├── 0034-sched_ext-Documentation-scheduler-Document-extensibl.patch
│   ├── 0035-sched_ext-Add-a-basic-userland-vruntime-scheduler.patch
│   ├── 0036-sched_ext-Add-scx_rusty-a-rust-userspace-hybrid-sche.patch
│   ├── 0037-sched_ext-Add-scx_layered-a-highly-configurable-mult.patch
│   ├── 0038-scx-Move-scx_ops_enable_state_str-outside-CONFIG_SCH.patch
│   ├── 0039-scx-Fix-a-straggling-atomic64_set.patch
│   ├── 0040-scx-Use-.bpf.-sub-skel.h-suffix-instead-of-.-sub-ske.patch
│   ├── 0041-scx-Add-s-uSIZE-typedefs-in-scx_common.h.patch
│   ├── 0042-scx_-rusty-layered-Generate-skel-file-in-OUT_DIR.patch
│   ├── 0043-scx_-rusty-layered-ravg_read-is-now-provided-by-scx_.patch
│   ├── 0044-scx_-rusty-layered-Make-naming-and-build-consistent-.patch
│   ├── 0045-scx_-rusty-layered-Run-bindgen-s-clang-with-CLANG_CF.patch
│   ├── 0046-scx_-rusty-layered-Factor-out-build.rs-s-into-scx_ut.patch
│   ├── 0047-scx_-rusty-layered-Follow-scx_utils-BpfBuilder-API-u.patch
│   ├── 0048-scx_-layered-rusty-Minor-build-updates.patch
│   ├── 0049-scx-Move-common-headers-under-include-scx.patch
│   ├── 0050-scx-More-include-path-and-build-updates.patch
│   ├── 0051-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0052-scx-Disable-vtime-ordering-for-internal-DSQs.patch
│   ├── 0053-scx-Enforce-either-or-usage-of-DSQ-FIFO-PRIQ-dispatc.patch
│   ├── 0054-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0055-scx-Remove-now-unused-rb_node-from-first_local_task.patch
│   ├── 0056-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0057-scx-Add-missing-to-error-invocation-in-Makefile.patch
│   ├── 0058-scx-Add-skeleton-for-scx-testing-framework.patch
│   ├── 0059-kernfs-convert-kernfs_idr_lock-to-an-irq-safe-raw-sp.patch
│   ├── 0060-sched_ext-fix-race-in-scx_move_task-with-exiting-tas.patch
│   ├── 0061-scx-Support-direct-dispatching-from-ops.select_cpu.patch
│   ├── 0062-scx-Remove-SCX_ENQ_LOCAL-flag.patch
│   ├── 0063-scx-Add-scx_bpf_select_cpu_dfl-kfunc.patch
│   ├── 0064-scx-Add-selftests-for-new-select_cpu-dispatch-semant.patch
│   ├── 0065-scx-Error-for-a-priq-builtin-DSQ-in-dispatch_enqueue.patch
│   ├── 0066-scx-Add-testcases-for-vtime-dispatching-to-builtin-D.patch
│   ├── 0067-scx-Always-set-task-scx-weight-before-enable.patch
│   ├── 0068-scx-Call-enable-disable-on-entry-exit-to-scx.patch
│   ├── 0069-scx-Rename-prep_enable-and-cancel_enable-add-exit_ta.patch
│   ├── 0070-scx-Add-init_enable_count-testcase.patch
│   ├── 0071-scx-Move-sched_ext_entity.ddsq_id-out-of-modifiable-.patch
│   ├── 0072-scx-Add-missing-DSQ-fallback-test-files.patch
│   ├── 0073-scx-Claim-idle-core-in-scx_select_cpu_dfl-for-nr_cpu.patch
│   ├── 0074-scx-Make-select_cpu_dfl-test-a-bit-less-brittle.patch
│   ├── 0075-scx-Set-default-slice-for-default-select_cpu-dispatc.patch
│   └── 0076-linux6.7-bore4.0.0.patch
├── bore-sched-ext-patches-v3
│   └── 0001-bore-6.7-introduce-BORE-Scheduler-with-BPF-extensibl.patch
├── bore-sched-ext-patches-v3-all
│   └── 0001-bore-sched-ext-patches.patch
├── bore-sched-ext-patches-v3-sep
│   ├── 0001-sched-6.7-Merge-BPF-changes.patch
│   ├── 0002-cgroup-Implement-cgroup_show_cftypes.patch
│   ├── 0003-sched-Restructure-sched_class-order-sanity-checks-in.patch
│   ├── 0004-sched-Allow-sched_cgroup_fork-to-fail-and-introduce-.patch
│   ├── 0005-sched-Add-sched_class-reweight_task.patch
│   ├── 0006-sched-Add-sched_class-switching_to-and-expose-check_.patch
│   ├── 0007-sched-Factor-out-cgroup-weight-conversion-functions.patch
│   ├── 0008-sched-Expose-css_tg-and-__setscheduler_prio.patch
│   ├── 0009-sched-Enumerate-CPU-cgroup-file-types.patch
│   ├── 0010-sched-Add-reason-to-sched_class-rq_-on-off-line.patch
│   ├── 0011-sched-Add-normal_policy.patch
│   ├── 0012-sched_ext-Add-boilerplate-for-extensible-scheduler-c.patch
│   ├── 0013-sched_ext-Implement-BPF-extensible-scheduler-class.patch
│   ├── 0014-sched_ext-Add-scx_simple-and-scx_example_qmap-exampl.patch
│   ├── 0015-sched_ext-Add-sysrq-S-which-disables-the-BPF-schedul.patch
│   ├── 0016-sched_ext-Implement-runnable-task-stall-watchdog.patch
│   ├── 0017-sched_ext-Allow-BPF-schedulers-to-disallow-specific-.patch
│   ├── 0018-sched_ext-Allow-BPF-schedulers-to-switch-all-eligibl.patch
│   ├── 0019-sched_ext-Print-sched_ext-info-when-dumping-stack.patch
│   ├── 0020-sched_ext-Implement-scx_bpf_kick_cpu-and-task-preemp.patch
│   ├── 0021-sched_ext-Add-a-central-scheduler-which-makes-all-sc.patch
│   ├── 0022-sched_ext-Make-watchdog-handle-ops.dispatch-looping-.patch
│   ├── 0023-sched_ext-Add-task-state-tracking-operations.patch
│   ├── 0024-sched_ext-Implement-tickless-support.patch
│   ├── 0025-sched_ext-Track-tasks-that-are-subjects-of-the-in-fl.patch
│   ├── 0026-sched_ext-Add-cgroup-support.patch
│   ├── 0027-sched_ext-Add-a-cgroup-based-core-scheduling-schedul.patch
│   ├── 0028-sched_ext-Add-a-cgroup-scheduler-which-uses-flattene.patch
│   ├── 0029-sched_ext-Implement-SCX_KICK_WAIT.patch
│   ├── 0030-sched_ext-Implement-sched_ext_ops.cpu_acquire-releas.patch
│   ├── 0031-sched_ext-Implement-sched_ext_ops.cpu_online-offline.patch
│   ├── 0032-sched_ext-Implement-core-sched-support.patch
│   ├── 0033-sched_ext-Add-vtime-ordered-priority-queue-to-dispat.patch
│   ├── 0034-sched_ext-Documentation-scheduler-Document-extensibl.patch
│   ├── 0035-sched_ext-Add-a-basic-userland-vruntime-scheduler.patch
│   ├── 0036-sched_ext-Add-scx_rusty-a-rust-userspace-hybrid-sche.patch
│   ├── 0037-sched_ext-Add-scx_layered-a-highly-configurable-mult.patch
│   ├── 0038-scx-Move-scx_ops_enable_state_str-outside-CONFIG_SCH.patch
│   ├── 0039-scx-Fix-a-straggling-atomic64_set.patch
│   ├── 0040-scx-Use-.bpf.-sub-skel.h-suffix-instead-of-.-sub-ske.patch
│   ├── 0041-scx-Add-s-uSIZE-typedefs-in-scx_common.h.patch
│   ├── 0042-scx_-rusty-layered-Generate-skel-file-in-OUT_DIR.patch
│   ├── 0043-scx_-rusty-layered-ravg_read-is-now-provided-by-scx_.patch
│   ├── 0044-scx_-rusty-layered-Make-naming-and-build-consistent-.patch
│   ├── 0045-scx_-rusty-layered-Run-bindgen-s-clang-with-CLANG_CF.patch
│   ├── 0046-scx_-rusty-layered-Factor-out-build.rs-s-into-scx_ut.patch
│   ├── 0047-scx_-rusty-layered-Follow-scx_utils-BpfBuilder-API-u.patch
│   ├── 0048-scx_-layered-rusty-Minor-build-updates.patch
│   ├── 0049-scx-Move-common-headers-under-include-scx.patch
│   ├── 0050-scx-More-include-path-and-build-updates.patch
│   ├── 0051-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0052-scx-Disable-vtime-ordering-for-internal-DSQs.patch
│   ├── 0053-scx-Enforce-either-or-usage-of-DSQ-FIFO-PRIQ-dispatc.patch
│   ├── 0054-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0055-scx-Remove-now-unused-rb_node-from-first_local_task.patch
│   ├── 0056-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0057-scx-Add-missing-to-error-invocation-in-Makefile.patch
│   ├── 0058-scx-Add-skeleton-for-scx-testing-framework.patch
│   ├── 0059-kernfs-convert-kernfs_idr_lock-to-an-irq-safe-raw-sp.patch
│   ├── 0060-sched_ext-fix-race-in-scx_move_task-with-exiting-tas.patch
│   ├── 0061-scx-Support-direct-dispatching-from-ops.select_cpu.patch
│   ├── 0062-scx-Remove-SCX_ENQ_LOCAL-flag.patch
│   ├── 0063-scx-Add-scx_bpf_select_cpu_dfl-kfunc.patch
│   ├── 0064-scx-Add-selftests-for-new-select_cpu-dispatch-semant.patch
│   ├── 0065-scx-Error-for-a-priq-builtin-DSQ-in-dispatch_enqueue.patch
│   ├── 0066-scx-Add-testcases-for-vtime-dispatching-to-builtin-D.patch
│   ├── 0067-scx-Always-set-task-scx-weight-before-enable.patch
│   ├── 0068-scx-Call-enable-disable-on-entry-exit-to-scx.patch
│   ├── 0069-scx-Rename-prep_enable-and-cancel_enable-add-exit_ta.patch
│   ├── 0070-scx-Add-init_enable_count-testcase.patch
│   ├── 0071-scx-Move-sched_ext_entity.ddsq_id-out-of-modifiable-.patch
│   ├── 0072-scx-Add-missing-DSQ-fallback-test-files.patch
│   ├── 0073-scx-Claim-idle-core-in-scx_select_cpu_dfl-for-nr_cpu.patch
│   ├── 0074-scx-Make-select_cpu_dfl-test-a-bit-less-brittle.patch
│   ├── 0075-scx-Set-default-slice-for-default-select_cpu-dispatc.patch
│   ├── 0076-scx-Avoid-possible-deadlock-with-cpus_read_lock.patch
│   └── 0077-linux6.7-bore4.0.0.patch
├── bore-sched-ext-patches-v4
│   └── 0001-bore-6.7-introduce-BORE-Scheduler-with-BPF-extensibl.patch
├── bore-sched-ext-patches-v4-all
│   └── 0001-bore-sched-ext-patches.patch
├── bore-sched-ext-patches-v4-sep
│   ├── 0001-sched-6.7-Merge-BPF-changes.patch
│   ├── 0002-cgroup-Implement-cgroup_show_cftypes.patch
│   ├── 0003-sched-Restructure-sched_class-order-sanity-checks-in.patch
│   ├── 0004-sched-Allow-sched_cgroup_fork-to-fail-and-introduce-.patch
│   ├── 0005-sched-Add-sched_class-reweight_task.patch
│   ├── 0006-sched-Add-sched_class-switching_to-and-expose-check_.patch
│   ├── 0007-sched-Factor-out-cgroup-weight-conversion-functions.patch
│   ├── 0008-sched-Expose-css_tg-and-__setscheduler_prio.patch
│   ├── 0009-sched-Enumerate-CPU-cgroup-file-types.patch
│   ├── 0010-sched-Add-reason-to-sched_class-rq_-on-off-line.patch
│   ├── 0011-sched-Add-normal_policy.patch
│   ├── 0012-sched_ext-Add-boilerplate-for-extensible-scheduler-c.patch
│   ├── 0013-sched_ext-Implement-BPF-extensible-scheduler-class.patch
│   ├── 0014-sched_ext-Add-scx_simple-and-scx_example_qmap-exampl.patch
│   ├── 0015-sched_ext-Add-sysrq-S-which-disables-the-BPF-schedul.patch
│   ├── 0016-sched_ext-Implement-runnable-task-stall-watchdog.patch
│   ├── 0017-sched_ext-Allow-BPF-schedulers-to-disallow-specific-.patch
│   ├── 0018-sched_ext-Allow-BPF-schedulers-to-switch-all-eligibl.patch
│   ├── 0019-sched_ext-Print-sched_ext-info-when-dumping-stack.patch
│   ├── 0020-sched_ext-Implement-scx_bpf_kick_cpu-and-task-preemp.patch
│   ├── 0021-sched_ext-Add-a-central-scheduler-which-makes-all-sc.patch
│   ├── 0022-sched_ext-Make-watchdog-handle-ops.dispatch-looping-.patch
│   ├── 0023-sched_ext-Add-task-state-tracking-operations.patch
│   ├── 0024-sched_ext-Implement-tickless-support.patch
│   ├── 0025-sched_ext-Track-tasks-that-are-subjects-of-the-in-fl.patch
│   ├── 0026-sched_ext-Add-cgroup-support.patch
│   ├── 0027-sched_ext-Add-a-cgroup-based-core-scheduling-schedul.patch
│   ├── 0028-sched_ext-Add-a-cgroup-scheduler-which-uses-flattene.patch
│   ├── 0029-sched_ext-Implement-SCX_KICK_WAIT.patch
│   ├── 0030-sched_ext-Implement-sched_ext_ops.cpu_acquire-releas.patch
│   ├── 0031-sched_ext-Implement-sched_ext_ops.cpu_online-offline.patch
│   ├── 0032-sched_ext-Implement-core-sched-support.patch
│   ├── 0033-sched_ext-Add-vtime-ordered-priority-queue-to-dispat.patch
│   ├── 0034-sched_ext-Documentation-scheduler-Document-extensibl.patch
│   ├── 0035-sched_ext-Add-a-basic-userland-vruntime-scheduler.patch
│   ├── 0036-sched_ext-Add-scx_rusty-a-rust-userspace-hybrid-sche.patch
│   ├── 0037-sched_ext-Add-scx_layered-a-highly-configurable-mult.patch
│   ├── 0038-scx-Move-scx_ops_enable_state_str-outside-CONFIG_SCH.patch
│   ├── 0039-scx-Fix-a-straggling-atomic64_set.patch
│   ├── 0040-scx-Use-.bpf.-sub-skel.h-suffix-instead-of-.-sub-ske.patch
│   ├── 0041-scx-Add-s-uSIZE-typedefs-in-scx_common.h.patch
│   ├── 0042-scx_-rusty-layered-Generate-skel-file-in-OUT_DIR.patch
│   ├── 0043-scx_-rusty-layered-ravg_read-is-now-provided-by-scx_.patch
│   ├── 0044-scx_-rusty-layered-Make-naming-and-build-consistent-.patch
│   ├── 0045-scx_-rusty-layered-Run-bindgen-s-clang-with-CLANG_CF.patch
│   ├── 0046-scx_-rusty-layered-Factor-out-build.rs-s-into-scx_ut.patch
│   ├── 0047-scx_-rusty-layered-Follow-scx_utils-BpfBuilder-API-u.patch
│   ├── 0048-scx_-layered-rusty-Minor-build-updates.patch
│   ├── 0049-scx-Move-common-headers-under-include-scx.patch
│   ├── 0050-scx-More-include-path-and-build-updates.patch
│   ├── 0051-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0052-scx-Disable-vtime-ordering-for-internal-DSQs.patch
│   ├── 0053-scx-Enforce-either-or-usage-of-DSQ-FIFO-PRIQ-dispatc.patch
│   ├── 0054-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0055-scx-Remove-now-unused-rb_node-from-first_local_task.patch
│   ├── 0056-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0057-scx-Add-missing-to-error-invocation-in-Makefile.patch
│   ├── 0058-scx-Add-skeleton-for-scx-testing-framework.patch
│   ├── 0059-kernfs-convert-kernfs_idr_lock-to-an-irq-safe-raw-sp.patch
│   ├── 0060-sched_ext-fix-race-in-scx_move_task-with-exiting-tas.patch
│   ├── 0061-scx-Support-direct-dispatching-from-ops.select_cpu.patch
│   ├── 0062-scx-Remove-SCX_ENQ_LOCAL-flag.patch
│   ├── 0063-scx-Add-scx_bpf_select_cpu_dfl-kfunc.patch
│   ├── 0064-scx-Add-selftests-for-new-select_cpu-dispatch-semant.patch
│   ├── 0065-scx-Error-for-a-priq-builtin-DSQ-in-dispatch_enqueue.patch
│   ├── 0066-scx-Add-testcases-for-vtime-dispatching-to-builtin-D.patch
│   ├── 0067-scx-Always-set-task-scx-weight-before-enable.patch
│   ├── 0068-scx-Call-enable-disable-on-entry-exit-to-scx.patch
│   ├── 0069-scx-Rename-prep_enable-and-cancel_enable-add-exit_ta.patch
│   ├── 0070-scx-Add-init_enable_count-testcase.patch
│   ├── 0071-scx-Move-sched_ext_entity.ddsq_id-out-of-modifiable-.patch
│   ├── 0072-scx-Add-missing-DSQ-fallback-test-files.patch
│   ├── 0073-scx-Claim-idle-core-in-scx_select_cpu_dfl-for-nr_cpu.patch
│   ├── 0074-scx-Make-select_cpu_dfl-test-a-bit-less-brittle.patch
│   ├── 0075-scx-Set-default-slice-for-default-select_cpu-dispatc.patch
│   ├── 0076-scx-Avoid-possible-deadlock-with-cpus_read_lock.patch
│   ├── 0077-scx-Use-READ-WRITE_ONCE-for-scx_watchdog_timeout-tim.patch
│   ├── 0078-scx-Rename-rq-scx.watchdog_list-and-friends-to-runna.patch
│   ├── 0079-scx-Factor-out-scx_ops_bypass-and-s-scx_ops_disablin.patch
│   ├── 0080-scx-Implement-bypass-depth-and-always-bypass-while-d.patch
│   ├── 0081-scx-Implement-turning-off-bypassing.patch
│   ├── 0082-scx-Optimize-scx_ops_bypass.patch
│   ├── 0083-scx-Expose-bypassing-state-to-userland.patch
│   ├── 0084-scx-s-register_ext_kfuncs-scx_init.patch
│   ├── 0085-scx-Bypass-while-PM-operations-are-in-progress.patch
│   ├── 0086-scx-Disabling-scx_bpf_kick_cpu-while-bypassing.patch
│   └── 0087-linux6.7-bore4.0.0.patch
├── bore-sched-ext-patches-v5
│   └── 0001-bore-6.7-introduce-BORE-Scheduler-with-BPF-extensibl.patch
├── bore-sched-ext-patches-v5-all
│   └── 0001-bore-sched-ext-patches.patch
├── bore-sched-ext-patches-v5-sep
│   ├── 0001-sched-6.7-Merge-BPF-changes.patch
│   ├── 0002-cgroup-Implement-cgroup_show_cftypes.patch
│   ├── 0003-sched-Restructure-sched_class-order-sanity-checks-in.patch
│   ├── 0004-sched-Allow-sched_cgroup_fork-to-fail-and-introduce-.patch
│   ├── 0005-sched-Add-sched_class-reweight_task.patch
│   ├── 0006-sched-Add-sched_class-switching_to-and-expose-check_.patch
│   ├── 0007-sched-Factor-out-cgroup-weight-conversion-functions.patch
│   ├── 0008-sched-Expose-css_tg-and-__setscheduler_prio.patch
│   ├── 0009-sched-Enumerate-CPU-cgroup-file-types.patch
│   ├── 0010-sched-Add-reason-to-sched_class-rq_-on-off-line.patch
│   ├── 0011-sched-Add-normal_policy.patch
│   ├── 0012-sched_ext-Add-boilerplate-for-extensible-scheduler-c.patch
│   ├── 0013-sched_ext-Implement-BPF-extensible-scheduler-class.patch
│   ├── 0014-sched_ext-Add-scx_simple-and-scx_example_qmap-exampl.patch
│   ├── 0015-sched_ext-Add-sysrq-S-which-disables-the-BPF-schedul.patch
│   ├── 0016-sched_ext-Implement-runnable-task-stall-watchdog.patch
│   ├── 0017-sched_ext-Allow-BPF-schedulers-to-disallow-specific-.patch
│   ├── 0018-sched_ext-Allow-BPF-schedulers-to-switch-all-eligibl.patch
│   ├── 0019-sched_ext-Print-sched_ext-info-when-dumping-stack.patch
│   ├── 0020-sched_ext-Implement-scx_bpf_kick_cpu-and-task-preemp.patch
│   ├── 0021-sched_ext-Add-a-central-scheduler-which-makes-all-sc.patch
│   ├── 0022-sched_ext-Make-watchdog-handle-ops.dispatch-looping-.patch
│   ├── 0023-sched_ext-Add-task-state-tracking-operations.patch
│   ├── 0024-sched_ext-Implement-tickless-support.patch
│   ├── 0025-sched_ext-Track-tasks-that-are-subjects-of-the-in-fl.patch
│   ├── 0026-sched_ext-Add-cgroup-support.patch
│   ├── 0027-sched_ext-Add-a-cgroup-based-core-scheduling-schedul.patch
│   ├── 0028-sched_ext-Add-a-cgroup-scheduler-which-uses-flattene.patch
│   ├── 0029-sched_ext-Implement-SCX_KICK_WAIT.patch
│   ├── 0030-sched_ext-Implement-sched_ext_ops.cpu_acquire-releas.patch
│   ├── 0031-sched_ext-Implement-sched_ext_ops.cpu_online-offline.patch
│   ├── 0032-sched_ext-Implement-core-sched-support.patch
│   ├── 0033-sched_ext-Add-vtime-ordered-priority-queue-to-dispat.patch
│   ├── 0034-sched_ext-Documentation-scheduler-Document-extensibl.patch
│   ├── 0035-sched_ext-Add-a-basic-userland-vruntime-scheduler.patch
│   ├── 0036-sched_ext-Add-scx_rusty-a-rust-userspace-hybrid-sche.patch
│   ├── 0037-sched_ext-Add-scx_layered-a-highly-configurable-mult.patch
│   ├── 0038-scx-Move-scx_ops_enable_state_str-outside-CONFIG_SCH.patch
│   ├── 0039-scx-Fix-a-straggling-atomic64_set.patch
│   ├── 0040-scx-Use-.bpf.-sub-skel.h-suffix-instead-of-.-sub-ske.patch
│   ├── 0041-scx-Add-s-uSIZE-typedefs-in-scx_common.h.patch
│   ├── 0042-scx_-rusty-layered-Generate-skel-file-in-OUT_DIR.patch
│   ├── 0043-scx_-rusty-layered-ravg_read-is-now-provided-by-scx_.patch
│   ├── 0044-scx_-rusty-layered-Make-naming-and-build-consistent-.patch
│   ├── 0045-scx_-rusty-layered-Run-bindgen-s-clang-with-CLANG_CF.patch
│   ├── 0046-scx_-rusty-layered-Factor-out-build.rs-s-into-scx_ut.patch
│   ├── 0047-scx_-rusty-layered-Follow-scx_utils-BpfBuilder-API-u.patch
│   ├── 0048-scx_-layered-rusty-Minor-build-updates.patch
│   ├── 0049-scx-Move-common-headers-under-include-scx.patch
│   ├── 0050-scx-More-include-path-and-build-updates.patch
│   ├── 0051-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0052-scx-Disable-vtime-ordering-for-internal-DSQs.patch
│   ├── 0053-scx-Enforce-either-or-usage-of-DSQ-FIFO-PRIQ-dispatc.patch
│   ├── 0054-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0055-scx-Remove-now-unused-rb_node-from-first_local_task.patch
│   ├── 0056-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0057-scx-Add-missing-to-error-invocation-in-Makefile.patch
│   ├── 0058-scx-Add-skeleton-for-scx-testing-framework.patch
│   ├── 0059-kernfs-convert-kernfs_idr_lock-to-an-irq-safe-raw-sp.patch
│   ├── 0060-sched_ext-fix-race-in-scx_move_task-with-exiting-tas.patch
│   ├── 0061-scx-Support-direct-dispatching-from-ops.select_cpu.patch
│   ├── 0062-scx-Remove-SCX_ENQ_LOCAL-flag.patch
│   ├── 0063-scx-Add-scx_bpf_select_cpu_dfl-kfunc.patch
│   ├── 0064-scx-Add-selftests-for-new-select_cpu-dispatch-semant.patch
│   ├── 0065-scx-Error-for-a-priq-builtin-DSQ-in-dispatch_enqueue.patch
│   ├── 0066-scx-Add-testcases-for-vtime-dispatching-to-builtin-D.patch
│   ├── 0067-scx-Always-set-task-scx-weight-before-enable.patch
│   ├── 0068-scx-Call-enable-disable-on-entry-exit-to-scx.patch
│   ├── 0069-scx-Rename-prep_enable-and-cancel_enable-add-exit_ta.patch
│   ├── 0070-scx-Add-init_enable_count-testcase.patch
│   ├── 0071-scx-Move-sched_ext_entity.ddsq_id-out-of-modifiable-.patch
│   ├── 0072-scx-Add-missing-DSQ-fallback-test-files.patch
│   ├── 0073-scx-Claim-idle-core-in-scx_select_cpu_dfl-for-nr_cpu.patch
│   ├── 0074-scx-Make-select_cpu_dfl-test-a-bit-less-brittle.patch
│   ├── 0075-scx-Set-default-slice-for-default-select_cpu-dispatc.patch
│   ├── 0076-scx-Avoid-possible-deadlock-with-cpus_read_lock.patch
│   ├── 0077-scx-Use-READ-WRITE_ONCE-for-scx_watchdog_timeout-tim.patch
│   ├── 0078-scx-Rename-rq-scx.watchdog_list-and-friends-to-runna.patch
│   ├── 0079-scx-Factor-out-scx_ops_bypass-and-s-scx_ops_disablin.patch
│   ├── 0080-scx-Implement-bypass-depth-and-always-bypass-while-d.patch
│   ├── 0081-scx-Implement-turning-off-bypassing.patch
│   ├── 0082-scx-Optimize-scx_ops_bypass.patch
│   ├── 0083-scx-Expose-bypassing-state-to-userland.patch
│   ├── 0084-scx-s-register_ext_kfuncs-scx_init.patch
│   ├── 0085-scx-Bypass-while-PM-operations-are-in-progress.patch
│   ├── 0086-scx-Disabling-scx_bpf_kick_cpu-while-bypassing.patch
│   ├── 0087-Revert-scx-Avoid-possible-deadlock-with-cpus_read_lo.patch
│   ├── 0088-scx-Make-scx_task_state-handling-more-idiomatic.patch
│   ├── 0089-scx-Sync-schedulers-from-SCX-v0.1.5-74923c6cdbc3.patch
│   └── 0090-linux6.7-bore4.0.0.patch
├── bore-sched-ext-patches-v6
│   └── 0001-bore-6.7-introduce-BORE-Scheduler-with-BPF-extensibl.patch
├── bore-sched-ext-patches-v6-all
│   └── 0001-bore-sched-ext-patches.patch
├── bore-sched-ext-patches-v6-sep
│   ├── 0001-sched-6.7-Merge-BPF-changes.patch
│   ├── 0002-cgroup-Implement-cgroup_show_cftypes.patch
│   ├── 0003-sched-Restructure-sched_class-order-sanity-checks-in.patch
│   ├── 0004-sched-Allow-sched_cgroup_fork-to-fail-and-introduce-.patch
│   ├── 0005-sched-Add-sched_class-reweight_task.patch
│   ├── 0006-sched-Add-sched_class-switching_to-and-expose-check_.patch
│   ├── 0007-sched-Factor-out-cgroup-weight-conversion-functions.patch
│   ├── 0008-sched-Expose-css_tg-and-__setscheduler_prio.patch
│   ├── 0009-sched-Enumerate-CPU-cgroup-file-types.patch
│   ├── 0010-sched-Add-reason-to-sched_class-rq_-on-off-line.patch
│   ├── 0011-sched-Add-normal_policy.patch
│   ├── 0012-sched_ext-Add-boilerplate-for-extensible-scheduler-c.patch
│   ├── 0013-sched_ext-Implement-BPF-extensible-scheduler-class.patch
│   ├── 0014-sched_ext-Add-scx_simple-and-scx_example_qmap-exampl.patch
│   ├── 0015-sched_ext-Add-sysrq-S-which-disables-the-BPF-schedul.patch
│   ├── 0016-sched_ext-Implement-runnable-task-stall-watchdog.patch
│   ├── 0017-sched_ext-Allow-BPF-schedulers-to-disallow-specific-.patch
│   ├── 0018-sched_ext-Allow-BPF-schedulers-to-switch-all-eligibl.patch
│   ├── 0019-sched_ext-Print-sched_ext-info-when-dumping-stack.patch
│   ├── 0020-sched_ext-Implement-scx_bpf_kick_cpu-and-task-preemp.patch
│   ├── 0021-sched_ext-Add-a-central-scheduler-which-makes-all-sc.patch
│   ├── 0022-sched_ext-Make-watchdog-handle-ops.dispatch-looping-.patch
│   ├── 0023-sched_ext-Add-task-state-tracking-operations.patch
│   ├── 0024-sched_ext-Implement-tickless-support.patch
│   ├── 0025-sched_ext-Track-tasks-that-are-subjects-of-the-in-fl.patch
│   ├── 0026-sched_ext-Add-cgroup-support.patch
│   ├── 0027-sched_ext-Add-a-cgroup-based-core-scheduling-schedul.patch
│   ├── 0028-sched_ext-Add-a-cgroup-scheduler-which-uses-flattene.patch
│   ├── 0029-sched_ext-Implement-SCX_KICK_WAIT.patch
│   ├── 0030-sched_ext-Implement-sched_ext_ops.cpu_acquire-releas.patch
│   ├── 0031-sched_ext-Implement-sched_ext_ops.cpu_online-offline.patch
│   ├── 0032-sched_ext-Implement-core-sched-support.patch
│   ├── 0033-sched_ext-Add-vtime-ordered-priority-queue-to-dispat.patch
│   ├── 0034-sched_ext-Documentation-scheduler-Document-extensibl.patch
│   ├── 0035-sched_ext-Add-a-basic-userland-vruntime-scheduler.patch
│   ├── 0036-sched_ext-Add-scx_rusty-a-rust-userspace-hybrid-sche.patch
│   ├── 0037-sched_ext-Add-scx_layered-a-highly-configurable-mult.patch
│   ├── 0038-scx-Move-scx_ops_enable_state_str-outside-CONFIG_SCH.patch
│   ├── 0039-scx-Fix-a-straggling-atomic64_set.patch
│   ├── 0040-scx-Use-.bpf.-sub-skel.h-suffix-instead-of-.-sub-ske.patch
│   ├── 0041-scx-Add-s-uSIZE-typedefs-in-scx_common.h.patch
│   ├── 0042-scx_-rusty-layered-Generate-skel-file-in-OUT_DIR.patch
│   ├── 0043-scx_-rusty-layered-ravg_read-is-now-provided-by-scx_.patch
│   ├── 0044-scx_-rusty-layered-Make-naming-and-build-consistent-.patch
│   ├── 0045-scx_-rusty-layered-Run-bindgen-s-clang-with-CLANG_CF.patch
│   ├── 0046-scx_-rusty-layered-Factor-out-build.rs-s-into-scx_ut.patch
│   ├── 0047-scx_-rusty-layered-Follow-scx_utils-BpfBuilder-API-u.patch
│   ├── 0048-scx_-layered-rusty-Minor-build-updates.patch
│   ├── 0049-scx-Move-common-headers-under-include-scx.patch
│   ├── 0050-scx-More-include-path-and-build-updates.patch
│   ├── 0051-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0052-scx-Disable-vtime-ordering-for-internal-DSQs.patch
│   ├── 0053-scx-Enforce-either-or-usage-of-DSQ-FIFO-PRIQ-dispatc.patch
│   ├── 0054-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0055-scx-Remove-now-unused-rb_node-from-first_local_task.patch
│   ├── 0056-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0057-scx-Add-missing-to-error-invocation-in-Makefile.patch
│   ├── 0058-scx-Add-skeleton-for-scx-testing-framework.patch
│   ├── 0059-kernfs-convert-kernfs_idr_lock-to-an-irq-safe-raw-sp.patch
│   ├── 0060-sched_ext-fix-race-in-scx_move_task-with-exiting-tas.patch
│   ├── 0061-scx-Support-direct-dispatching-from-ops.select_cpu.patch
│   ├── 0062-scx-Remove-SCX_ENQ_LOCAL-flag.patch
│   ├── 0063-scx-Add-scx_bpf_select_cpu_dfl-kfunc.patch
│   ├── 0064-scx-Add-selftests-for-new-select_cpu-dispatch-semant.patch
│   ├── 0065-scx-Error-for-a-priq-builtin-DSQ-in-dispatch_enqueue.patch
│   ├── 0066-scx-Add-testcases-for-vtime-dispatching-to-builtin-D.patch
│   ├── 0067-scx-Always-set-task-scx-weight-before-enable.patch
│   ├── 0068-scx-Call-enable-disable-on-entry-exit-to-scx.patch
│   ├── 0069-scx-Rename-prep_enable-and-cancel_enable-add-exit_ta.patch
│   ├── 0070-scx-Add-init_enable_count-testcase.patch
│   ├── 0071-scx-Move-sched_ext_entity.ddsq_id-out-of-modifiable-.patch
│   ├── 0072-scx-Add-missing-DSQ-fallback-test-files.patch
│   ├── 0073-scx-Claim-idle-core-in-scx_select_cpu_dfl-for-nr_cpu.patch
│   ├── 0074-scx-Make-select_cpu_dfl-test-a-bit-less-brittle.patch
│   ├── 0075-scx-Set-default-slice-for-default-select_cpu-dispatc.patch
│   ├── 0076-scx-Avoid-possible-deadlock-with-cpus_read_lock.patch
│   ├── 0077-scx-Use-READ-WRITE_ONCE-for-scx_watchdog_timeout-tim.patch
│   ├── 0078-scx-Rename-rq-scx.watchdog_list-and-friends-to-runna.patch
│   ├── 0079-scx-Factor-out-scx_ops_bypass-and-s-scx_ops_disablin.patch
│   ├── 0080-scx-Implement-bypass-depth-and-always-bypass-while-d.patch
│   ├── 0081-scx-Implement-turning-off-bypassing.patch
│   ├── 0082-scx-Optimize-scx_ops_bypass.patch
│   ├── 0083-scx-Expose-bypassing-state-to-userland.patch
│   ├── 0084-scx-s-register_ext_kfuncs-scx_init.patch
│   ├── 0085-scx-Bypass-while-PM-operations-are-in-progress.patch
│   ├── 0086-scx-Disabling-scx_bpf_kick_cpu-while-bypassing.patch
│   ├── 0087-Revert-scx-Avoid-possible-deadlock-with-cpus_read_lo.patch
│   ├── 0088-scx-Make-scx_task_state-handling-more-idiomatic.patch
│   ├── 0089-scx-Sync-schedulers-from-SCX-v0.1.5-74923c6cdbc3.patch
│   ├── 0090-scx-Fix-direct-dispatch-for-non-builtin-DSQs.patch
│   ├── 0091-scx-Keep-track-of-enq-flags-in-direct-dispatch.patch
│   ├── 0092-scx-Test-vtime-dispatching-from-ops.select_cpu.patch
│   └── 0093-linux6.7-bore4.0.0.patch
├── bore-sched-ext-patches-v7
│   └── 0001-bore-6.7-introduce-BORE-Scheduler-with-BPF-extensibl.patch
├── bore-sched-ext-patches-v7-all
│   └── 0001-bore-sched-ext-patches.patch
├── bore-sched-ext-patches-v7-sep
│   ├── 0001-sched-6.7-Merge-BPF-changes.patch
│   ├── 0002-cgroup-Implement-cgroup_show_cftypes.patch
│   ├── 0003-sched-Restructure-sched_class-order-sanity-checks-in.patch
│   ├── 0004-sched-Allow-sched_cgroup_fork-to-fail-and-introduce-.patch
│   ├── 0005-sched-Add-sched_class-reweight_task.patch
│   ├── 0006-sched-Add-sched_class-switching_to-and-expose-check_.patch
│   ├── 0007-sched-Factor-out-cgroup-weight-conversion-functions.patch
│   ├── 0008-sched-Expose-css_tg-and-__setscheduler_prio.patch
│   ├── 0009-sched-Enumerate-CPU-cgroup-file-types.patch
│   ├── 0010-sched-Add-reason-to-sched_class-rq_-on-off-line.patch
│   ├── 0011-sched-Add-normal_policy.patch
│   ├── 0012-sched_ext-Add-boilerplate-for-extensible-scheduler-c.patch
│   ├── 0013-sched_ext-Implement-BPF-extensible-scheduler-class.patch
│   ├── 0014-sched_ext-Add-scx_simple-and-scx_example_qmap-exampl.patch
│   ├── 0015-sched_ext-Add-sysrq-S-which-disables-the-BPF-schedul.patch
│   ├── 0016-sched_ext-Implement-runnable-task-stall-watchdog.patch
│   ├── 0017-sched_ext-Allow-BPF-schedulers-to-disallow-specific-.patch
│   ├── 0018-sched_ext-Allow-BPF-schedulers-to-switch-all-eligibl.patch
│   ├── 0019-sched_ext-Print-sched_ext-info-when-dumping-stack.patch
│   ├── 0020-sched_ext-Implement-scx_bpf_kick_cpu-and-task-preemp.patch
│   ├── 0021-sched_ext-Add-a-central-scheduler-which-makes-all-sc.patch
│   ├── 0022-sched_ext-Make-watchdog-handle-ops.dispatch-looping-.patch
│   ├── 0023-sched_ext-Add-task-state-tracking-operations.patch
│   ├── 0024-sched_ext-Implement-tickless-support.patch
│   ├── 0025-sched_ext-Track-tasks-that-are-subjects-of-the-in-fl.patch
│   ├── 0026-sched_ext-Add-cgroup-support.patch
│   ├── 0027-sched_ext-Add-a-cgroup-based-core-scheduling-schedul.patch
│   ├── 0028-sched_ext-Add-a-cgroup-scheduler-which-uses-flattene.patch
│   ├── 0029-sched_ext-Implement-SCX_KICK_WAIT.patch
│   ├── 0030-sched_ext-Implement-sched_ext_ops.cpu_acquire-releas.patch
│   ├── 0031-sched_ext-Implement-sched_ext_ops.cpu_online-offline.patch
│   ├── 0032-sched_ext-Implement-core-sched-support.patch
│   ├── 0033-sched_ext-Add-vtime-ordered-priority-queue-to-dispat.patch
│   ├── 0034-sched_ext-Documentation-scheduler-Document-extensibl.patch
│   ├── 0035-sched_ext-Add-a-basic-userland-vruntime-scheduler.patch
│   ├── 0036-sched_ext-Add-scx_rusty-a-rust-userspace-hybrid-sche.patch
│   ├── 0037-sched_ext-Add-scx_layered-a-highly-configurable-mult.patch
│   ├── 0038-scx-Move-scx_ops_enable_state_str-outside-CONFIG_SCH.patch
│   ├── 0039-scx-Fix-a-straggling-atomic64_set.patch
│   ├── 0040-scx-Use-.bpf.-sub-skel.h-suffix-instead-of-.-sub-ske.patch
│   ├── 0041-scx-Add-s-uSIZE-typedefs-in-scx_common.h.patch
│   ├── 0042-scx_-rusty-layered-Generate-skel-file-in-OUT_DIR.patch
│   ├── 0043-scx_-rusty-layered-ravg_read-is-now-provided-by-scx_.patch
│   ├── 0044-scx_-rusty-layered-Make-naming-and-build-consistent-.patch
│   ├── 0045-scx_-rusty-layered-Run-bindgen-s-clang-with-CLANG_CF.patch
│   ├── 0046-scx_-rusty-layered-Factor-out-build.rs-s-into-scx_ut.patch
│   ├── 0047-scx_-rusty-layered-Follow-scx_utils-BpfBuilder-API-u.patch
│   ├── 0048-scx_-layered-rusty-Minor-build-updates.patch
│   ├── 0049-scx-Move-common-headers-under-include-scx.patch
│   ├── 0050-scx-More-include-path-and-build-updates.patch
│   ├── 0051-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0052-scx-Disable-vtime-ordering-for-internal-DSQs.patch
│   ├── 0053-scx-Enforce-either-or-usage-of-DSQ-FIFO-PRIQ-dispatc.patch
│   ├── 0054-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0055-scx-Remove-now-unused-rb_node-from-first_local_task.patch
│   ├── 0056-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0057-scx-Add-missing-to-error-invocation-in-Makefile.patch
│   ├── 0058-scx-Add-skeleton-for-scx-testing-framework.patch
│   ├── 0059-kernfs-convert-kernfs_idr_lock-to-an-irq-safe-raw-sp.patch
│   ├── 0060-sched_ext-fix-race-in-scx_move_task-with-exiting-tas.patch
│   ├── 0061-scx-Support-direct-dispatching-from-ops.select_cpu.patch
│   ├── 0062-scx-Remove-SCX_ENQ_LOCAL-flag.patch
│   ├── 0063-scx-Add-scx_bpf_select_cpu_dfl-kfunc.patch
│   ├── 0064-scx-Add-selftests-for-new-select_cpu-dispatch-semant.patch
│   ├── 0065-scx-Error-for-a-priq-builtin-DSQ-in-dispatch_enqueue.patch
│   ├── 0066-scx-Add-testcases-for-vtime-dispatching-to-builtin-D.patch
│   ├── 0067-scx-Always-set-task-scx-weight-before-enable.patch
│   ├── 0068-scx-Call-enable-disable-on-entry-exit-to-scx.patch
│   ├── 0069-scx-Rename-prep_enable-and-cancel_enable-add-exit_ta.patch
│   ├── 0070-scx-Add-init_enable_count-testcase.patch
│   ├── 0071-scx-Move-sched_ext_entity.ddsq_id-out-of-modifiable-.patch
│   ├── 0072-scx-Add-missing-DSQ-fallback-test-files.patch
│   ├── 0073-scx-Claim-idle-core-in-scx_select_cpu_dfl-for-nr_cpu.patch
│   ├── 0074-scx-Make-select_cpu_dfl-test-a-bit-less-brittle.patch
│   ├── 0075-scx-Set-default-slice-for-default-select_cpu-dispatc.patch
│   ├── 0076-scx-Avoid-possible-deadlock-with-cpus_read_lock.patch
│   ├── 0077-scx-Use-READ-WRITE_ONCE-for-scx_watchdog_timeout-tim.patch
│   ├── 0078-scx-Rename-rq-scx.watchdog_list-and-friends-to-runna.patch
│   ├── 0079-scx-Factor-out-scx_ops_bypass-and-s-scx_ops_disablin.patch
│   ├── 0080-scx-Implement-bypass-depth-and-always-bypass-while-d.patch
│   ├── 0081-scx-Implement-turning-off-bypassing.patch
│   ├── 0082-scx-Optimize-scx_ops_bypass.patch
│   ├── 0083-scx-Expose-bypassing-state-to-userland.patch
│   ├── 0084-scx-s-register_ext_kfuncs-scx_init.patch
│   ├── 0085-scx-Bypass-while-PM-operations-are-in-progress.patch
│   ├── 0086-scx-Disabling-scx_bpf_kick_cpu-while-bypassing.patch
│   ├── 0087-Revert-scx-Avoid-possible-deadlock-with-cpus_read_lo.patch
│   ├── 0088-scx-Make-scx_task_state-handling-more-idiomatic.patch
│   ├── 0089-scx-Sync-schedulers-from-SCX-v0.1.5-74923c6cdbc3.patch
│   ├── 0090-scx-Fix-direct-dispatch-for-non-builtin-DSQs.patch
│   ├── 0091-scx-Keep-track-of-enq-flags-in-direct-dispatch.patch
│   ├── 0092-scx-Test-vtime-dispatching-from-ops.select_cpu.patch
│   ├── 0093-scx-Implement-scx-selftests-framework.patch
│   └── 0094-linux6.7-bore4.0.0.patch
├── bore-sched-ext-patches-v8
│   └── 0001-bore-6.7-introduce-BORE-Scheduler-with-BPF-extensibl.patch
├── bore-sched-ext-patches-v8-all
│   └── 0001-bore-sched-ext-patches.patch
├── bore-sched-ext-patches-v8-sep
│   ├── 0001-sched-6.7-Merge-BPF-changes.patch
│   ├── 0002-cgroup-Implement-cgroup_show_cftypes.patch
│   ├── 0003-sched-Restructure-sched_class-order-sanity-checks-in.patch
│   ├── 0004-sched-Allow-sched_cgroup_fork-to-fail-and-introduce-.patch
│   ├── 0005-sched-Add-sched_class-reweight_task.patch
│   ├── 0006-sched-Add-sched_class-switching_to-and-expose-check_.patch
│   ├── 0007-sched-Factor-out-cgroup-weight-conversion-functions.patch
│   ├── 0008-sched-Expose-css_tg-and-__setscheduler_prio.patch
│   ├── 0009-sched-Enumerate-CPU-cgroup-file-types.patch
│   ├── 0010-sched-Add-reason-to-sched_class-rq_-on-off-line.patch
│   ├── 0011-sched-Add-normal_policy.patch
│   ├── 0012-sched_ext-Add-boilerplate-for-extensible-scheduler-c.patch
│   ├── 0013-sched_ext-Implement-BPF-extensible-scheduler-class.patch
│   ├── 0014-sched_ext-Add-scx_simple-and-scx_example_qmap-exampl.patch
│   ├── 0015-sched_ext-Add-sysrq-S-which-disables-the-BPF-schedul.patch
│   ├── 0016-sched_ext-Implement-runnable-task-stall-watchdog.patch
│   ├── 0017-sched_ext-Allow-BPF-schedulers-to-disallow-specific-.patch
│   ├── 0018-sched_ext-Allow-BPF-schedulers-to-switch-all-eligibl.patch
│   ├── 0019-sched_ext-Print-sched_ext-info-when-dumping-stack.patch
│   ├── 0020-sched_ext-Implement-scx_bpf_kick_cpu-and-task-preemp.patch
│   ├── 0021-sched_ext-Add-a-central-scheduler-which-makes-all-sc.patch
│   ├── 0022-sched_ext-Make-watchdog-handle-ops.dispatch-looping-.patch
│   ├── 0023-sched_ext-Add-task-state-tracking-operations.patch
│   ├── 0024-sched_ext-Implement-tickless-support.patch
│   ├── 0025-sched_ext-Track-tasks-that-are-subjects-of-the-in-fl.patch
│   ├── 0026-sched_ext-Add-cgroup-support.patch
│   ├── 0027-sched_ext-Add-a-cgroup-based-core-scheduling-schedul.patch
│   ├── 0028-sched_ext-Add-a-cgroup-scheduler-which-uses-flattene.patch
│   ├── 0029-sched_ext-Implement-SCX_KICK_WAIT.patch
│   ├── 0030-sched_ext-Implement-sched_ext_ops.cpu_acquire-releas.patch
│   ├── 0031-sched_ext-Implement-sched_ext_ops.cpu_online-offline.patch
│   ├── 0032-sched_ext-Implement-core-sched-support.patch
│   ├── 0033-sched_ext-Add-vtime-ordered-priority-queue-to-dispat.patch
│   ├── 0034-sched_ext-Documentation-scheduler-Document-extensibl.patch
│   ├── 0035-sched_ext-Add-a-basic-userland-vruntime-scheduler.patch
│   ├── 0036-sched_ext-Add-scx_rusty-a-rust-userspace-hybrid-sche.patch
│   ├── 0037-sched_ext-Add-scx_layered-a-highly-configurable-mult.patch
│   ├── 0038-scx-Move-scx_ops_enable_state_str-outside-CONFIG_SCH.patch
│   ├── 0039-scx-Fix-a-straggling-atomic64_set.patch
│   ├── 0040-scx-Use-.bpf.-sub-skel.h-suffix-instead-of-.-sub-ske.patch
│   ├── 0041-scx-Add-s-uSIZE-typedefs-in-scx_common.h.patch
│   ├── 0042-scx_-rusty-layered-Generate-skel-file-in-OUT_DIR.patch
│   ├── 0043-scx_-rusty-layered-ravg_read-is-now-provided-by-scx_.patch
│   ├── 0044-scx_-rusty-layered-Make-naming-and-build-consistent-.patch
│   ├── 0045-scx_-rusty-layered-Run-bindgen-s-clang-with-CLANG_CF.patch
│   ├── 0046-scx_-rusty-layered-Factor-out-build.rs-s-into-scx_ut.patch
│   ├── 0047-scx_-rusty-layered-Follow-scx_utils-BpfBuilder-API-u.patch
│   ├── 0048-scx_-layered-rusty-Minor-build-updates.patch
│   ├── 0049-scx-Move-common-headers-under-include-scx.patch
│   ├── 0050-scx-More-include-path-and-build-updates.patch
│   ├── 0051-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0052-scx-Disable-vtime-ordering-for-internal-DSQs.patch
│   ├── 0053-scx-Enforce-either-or-usage-of-DSQ-FIFO-PRIQ-dispatc.patch
│   ├── 0054-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0055-scx-Remove-now-unused-rb_node-from-first_local_task.patch
│   ├── 0056-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0057-scx-Add-missing-to-error-invocation-in-Makefile.patch
│   ├── 0058-scx-Add-skeleton-for-scx-testing-framework.patch
│   ├── 0059-kernfs-convert-kernfs_idr_lock-to-an-irq-safe-raw-sp.patch
│   ├── 0060-sched_ext-fix-race-in-scx_move_task-with-exiting-tas.patch
│   ├── 0061-scx-Support-direct-dispatching-from-ops.select_cpu.patch
│   ├── 0062-scx-Remove-SCX_ENQ_LOCAL-flag.patch
│   ├── 0063-scx-Add-scx_bpf_select_cpu_dfl-kfunc.patch
│   ├── 0064-scx-Add-selftests-for-new-select_cpu-dispatch-semant.patch
│   ├── 0065-scx-Error-for-a-priq-builtin-DSQ-in-dispatch_enqueue.patch
│   ├── 0066-scx-Add-testcases-for-vtime-dispatching-to-builtin-D.patch
│   ├── 0067-scx-Always-set-task-scx-weight-before-enable.patch
│   ├── 0068-scx-Call-enable-disable-on-entry-exit-to-scx.patch
│   ├── 0069-scx-Rename-prep_enable-and-cancel_enable-add-exit_ta.patch
│   ├── 0070-scx-Add-init_enable_count-testcase.patch
│   ├── 0071-scx-Move-sched_ext_entity.ddsq_id-out-of-modifiable-.patch
│   ├── 0072-scx-Add-missing-DSQ-fallback-test-files.patch
│   ├── 0073-scx-Claim-idle-core-in-scx_select_cpu_dfl-for-nr_cpu.patch
│   ├── 0074-scx-Make-select_cpu_dfl-test-a-bit-less-brittle.patch
│   ├── 0075-scx-Set-default-slice-for-default-select_cpu-dispatc.patch
│   ├── 0076-scx-Avoid-possible-deadlock-with-cpus_read_lock.patch
│   ├── 0077-scx-Use-READ-WRITE_ONCE-for-scx_watchdog_timeout-tim.patch
│   ├── 0078-scx-Rename-rq-scx.watchdog_list-and-friends-to-runna.patch
│   ├── 0079-scx-Factor-out-scx_ops_bypass-and-s-scx_ops_disablin.patch
│   ├── 0080-scx-Implement-bypass-depth-and-always-bypass-while-d.patch
│   ├── 0081-scx-Implement-turning-off-bypassing.patch
│   ├── 0082-scx-Optimize-scx_ops_bypass.patch
│   ├── 0083-scx-Expose-bypassing-state-to-userland.patch
│   ├── 0084-scx-s-register_ext_kfuncs-scx_init.patch
│   ├── 0085-scx-Bypass-while-PM-operations-are-in-progress.patch
│   ├── 0086-scx-Disabling-scx_bpf_kick_cpu-while-bypassing.patch
│   ├── 0087-Revert-scx-Avoid-possible-deadlock-with-cpus_read_lo.patch
│   ├── 0088-scx-Make-scx_task_state-handling-more-idiomatic.patch
│   ├── 0089-scx-Sync-schedulers-from-SCX-v0.1.5-74923c6cdbc3.patch
│   ├── 0090-scx-Fix-direct-dispatch-for-non-builtin-DSQs.patch
│   ├── 0091-scx-Keep-track-of-enq-flags-in-direct-dispatch.patch
│   ├── 0092-scx-Test-vtime-dispatching-from-ops.select_cpu.patch
│   ├── 0093-scx-Implement-scx-selftests-framework.patch
│   ├── 0094-scx-Convert-remaining-testcases-to-use-new-framework.patch
│   ├── 0095-scx-Update-ddsp-testcases-to-check-for-error-exits.patch
│   ├── 0096-scx-Copy-scx_exit_kind-to-scx_test.h.patch
│   └── 0097-linux6.7-bore4.0.0.patch
├── bore-sched-ext-patches-v9
│   └── 0001-bore-6.7-introduce-BORE-Scheduler-with-BPF-extensibl.patch
├── bore-sched-ext-patches-v9-all
│   └── 0001-bore-sched-ext-patches.patch
├── bore-sched-ext-patches-v9-sep
│   ├── 0001-sched-6.7-Merge-BPF-changes.patch
│   ├── 0002-cgroup-Implement-cgroup_show_cftypes.patch
│   ├── 0003-sched-Restructure-sched_class-order-sanity-checks-in.patch
│   ├── 0004-sched-Allow-sched_cgroup_fork-to-fail-and-introduce-.patch
│   ├── 0005-sched-Add-sched_class-reweight_task.patch
│   ├── 0006-sched-Add-sched_class-switching_to-and-expose-check_.patch
│   ├── 0007-sched-Factor-out-cgroup-weight-conversion-functions.patch
│   ├── 0008-sched-Expose-css_tg-and-__setscheduler_prio.patch
│   ├── 0009-sched-Enumerate-CPU-cgroup-file-types.patch
│   ├── 0010-sched-Add-reason-to-sched_class-rq_-on-off-line.patch
│   ├── 0011-sched-Add-normal_policy.patch
│   ├── 0012-sched_ext-Add-boilerplate-for-extensible-scheduler-c.patch
│   ├── 0013-sched_ext-Implement-BPF-extensible-scheduler-class.patch
│   ├── 0014-sched_ext-Add-scx_simple-and-scx_example_qmap-exampl.patch
│   ├── 0015-sched_ext-Add-sysrq-S-which-disables-the-BPF-schedul.patch
│   ├── 0016-sched_ext-Implement-runnable-task-stall-watchdog.patch
│   ├── 0017-sched_ext-Allow-BPF-schedulers-to-disallow-specific-.patch
│   ├── 0018-sched_ext-Allow-BPF-schedulers-to-switch-all-eligibl.patch
│   ├── 0019-sched_ext-Print-sched_ext-info-when-dumping-stack.patch
│   ├── 0020-sched_ext-Implement-scx_bpf_kick_cpu-and-task-preemp.patch
│   ├── 0021-sched_ext-Add-a-central-scheduler-which-makes-all-sc.patch
│   ├── 0022-sched_ext-Make-watchdog-handle-ops.dispatch-looping-.patch
│   ├── 0023-sched_ext-Add-task-state-tracking-operations.patch
│   ├── 0024-sched_ext-Implement-tickless-support.patch
│   ├── 0025-sched_ext-Track-tasks-that-are-subjects-of-the-in-fl.patch
│   ├── 0026-sched_ext-Add-cgroup-support.patch
│   ├── 0027-sched_ext-Add-a-cgroup-based-core-scheduling-schedul.patch
│   ├── 0028-sched_ext-Add-a-cgroup-scheduler-which-uses-flattene.patch
│   ├── 0029-sched_ext-Implement-SCX_KICK_WAIT.patch
│   ├── 0030-sched_ext-Implement-sched_ext_ops.cpu_acquire-releas.patch
│   ├── 0031-sched_ext-Implement-sched_ext_ops.cpu_online-offline.patch
│   ├── 0032-sched_ext-Implement-core-sched-support.patch
│   ├── 0033-sched_ext-Add-vtime-ordered-priority-queue-to-dispat.patch
│   ├── 0034-sched_ext-Documentation-scheduler-Document-extensibl.patch
│   ├── 0035-sched_ext-Add-a-basic-userland-vruntime-scheduler.patch
│   ├── 0036-sched_ext-Add-scx_rusty-a-rust-userspace-hybrid-sche.patch
│   ├── 0037-sched_ext-Add-scx_layered-a-highly-configurable-mult.patch
│   ├── 0038-scx-Move-scx_ops_enable_state_str-outside-CONFIG_SCH.patch
│   ├── 0039-scx-Fix-a-straggling-atomic64_set.patch
│   ├── 0040-scx-Use-.bpf.-sub-skel.h-suffix-instead-of-.-sub-ske.patch
│   ├── 0041-scx-Add-s-uSIZE-typedefs-in-scx_common.h.patch
│   ├── 0042-scx_-rusty-layered-Generate-skel-file-in-OUT_DIR.patch
│   ├── 0043-scx_-rusty-layered-ravg_read-is-now-provided-by-scx_.patch
│   ├── 0044-scx_-rusty-layered-Make-naming-and-build-consistent-.patch
│   ├── 0045-scx_-rusty-layered-Run-bindgen-s-clang-with-CLANG_CF.patch
│   ├── 0046-scx_-rusty-layered-Factor-out-build.rs-s-into-scx_ut.patch
│   ├── 0047-scx_-rusty-layered-Follow-scx_utils-BpfBuilder-API-u.patch
│   ├── 0048-scx_-layered-rusty-Minor-build-updates.patch
│   ├── 0049-scx-Move-common-headers-under-include-scx.patch
│   ├── 0050-scx-More-include-path-and-build-updates.patch
│   ├── 0051-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0052-scx-Disable-vtime-ordering-for-internal-DSQs.patch
│   ├── 0053-scx-Enforce-either-or-usage-of-DSQ-FIFO-PRIQ-dispatc.patch
│   ├── 0054-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0055-scx-Remove-now-unused-rb_node-from-first_local_task.patch
│   ├── 0056-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0057-scx-Add-missing-to-error-invocation-in-Makefile.patch
│   ├── 0058-scx-Add-skeleton-for-scx-testing-framework.patch
│   ├── 0059-kernfs-convert-kernfs_idr_lock-to-an-irq-safe-raw-sp.patch
│   ├── 0060-sched_ext-fix-race-in-scx_move_task-with-exiting-tas.patch
│   ├── 0061-scx-Support-direct-dispatching-from-ops.select_cpu.patch
│   ├── 0062-scx-Remove-SCX_ENQ_LOCAL-flag.patch
│   ├── 0063-scx-Add-scx_bpf_select_cpu_dfl-kfunc.patch
│   ├── 0064-scx-Add-selftests-for-new-select_cpu-dispatch-semant.patch
│   ├── 0065-scx-Error-for-a-priq-builtin-DSQ-in-dispatch_enqueue.patch
│   ├── 0066-scx-Add-testcases-for-vtime-dispatching-to-builtin-D.patch
│   ├── 0067-scx-Always-set-task-scx-weight-before-enable.patch
│   ├── 0068-scx-Call-enable-disable-on-entry-exit-to-scx.patch
│   ├── 0069-scx-Rename-prep_enable-and-cancel_enable-add-exit_ta.patch
│   ├── 0070-scx-Add-init_enable_count-testcase.patch
│   ├── 0071-scx-Move-sched_ext_entity.ddsq_id-out-of-modifiable-.patch
│   ├── 0072-scx-Add-missing-DSQ-fallback-test-files.patch
│   ├── 0073-scx-Claim-idle-core-in-scx_select_cpu_dfl-for-nr_cpu.patch
│   ├── 0074-scx-Make-select_cpu_dfl-test-a-bit-less-brittle.patch
│   ├── 0075-scx-Set-default-slice-for-default-select_cpu-dispatc.patch
│   ├── 0076-scx-Avoid-possible-deadlock-with-cpus_read_lock.patch
│   ├── 0077-scx-Use-READ-WRITE_ONCE-for-scx_watchdog_timeout-tim.patch
│   ├── 0078-scx-Rename-rq-scx.watchdog_list-and-friends-to-runna.patch
│   ├── 0079-scx-Factor-out-scx_ops_bypass-and-s-scx_ops_disablin.patch
│   ├── 0080-scx-Implement-bypass-depth-and-always-bypass-while-d.patch
│   ├── 0081-scx-Implement-turning-off-bypassing.patch
│   ├── 0082-scx-Optimize-scx_ops_bypass.patch
│   ├── 0083-scx-Expose-bypassing-state-to-userland.patch
│   ├── 0084-scx-s-register_ext_kfuncs-scx_init.patch
│   ├── 0085-scx-Bypass-while-PM-operations-are-in-progress.patch
│   ├── 0086-scx-Disabling-scx_bpf_kick_cpu-while-bypassing.patch
│   ├── 0087-Revert-scx-Avoid-possible-deadlock-with-cpus_read_lo.patch
│   ├── 0088-scx-Make-scx_task_state-handling-more-idiomatic.patch
│   ├── 0089-scx-Sync-schedulers-from-SCX-v0.1.5-74923c6cdbc3.patch
│   ├── 0090-scx-Fix-direct-dispatch-for-non-builtin-DSQs.patch
│   ├── 0091-scx-Keep-track-of-enq-flags-in-direct-dispatch.patch
│   ├── 0092-scx-Test-vtime-dispatching-from-ops.select_cpu.patch
│   ├── 0093-scx-Implement-scx-selftests-framework.patch
│   ├── 0094-scx-Convert-remaining-testcases-to-use-new-framework.patch
│   ├── 0095-scx-Update-ddsp-testcases-to-check-for-error-exits.patch
│   ├── 0096-scx-Copy-scx_exit_kind-to-scx_test.h.patch
│   ├── 0097-scx-Narrow-cpus_read_lock-critical-section-in-scx_op.patch
│   ├── 0098-scx-Reorder-scx_fork_rwsem-cpu_hotplug_lock-and-scx_.patch
│   ├── 0099-scx-Sync-from-scx-repo.patch
│   └── 0100-linux6.7-bore4.0.0.patch
├── cachyos-patches
│   └── 0001-Cachy-Add-legion-laptop-v0.0.8.patch
├── clang-pgo-patches
│   └── 0001-Clang-PGO.patch
├── cpu-cachyos-patches
│   └── 0001-cpu-6.7-merge-graysky-s-patchset.patch
├── cpu-generic-patches
│   └── 0001-kbuild-add-generic-x86_64-levels.patch
├── ddcci-patches
│   └── 0001-drivers-ddcci-initial-merge.patch
├── drm-chimera-patches
│   └── 0001-drm-6.7-Add-DRM-Chimera-patches.patch
├── drm-chimera-patches-all
│   └── 0001-drm-chimera-patches.patch
├── drm-chimera-patches-sep
│   ├── 0001-drm-drm_mode_object-increase-max-objects-to-accommod.patch
│   ├── 0002-drm-drm_property-make-replace_property_blob_from_id-.patch
│   ├── 0003-drm-drm_plane-track-color-mgmt-changes-per-plane.patch
│   ├── 0004-drm-amd-display-fix-segment-distribution-for-linear-.patch
│   ├── 0005-drm-amd-display-add-CRTC-driver-specific-property-fo.patch
│   ├── 0006-drm-amd-display-add-plane-driver-specific-properties.patch
│   ├── 0007-drm-amd-display-add-plane-degamma-TF-driver-specific.patch
│   ├── 0008-drm-amd-display-add-plane-HDR-multiplier-driver-spec.patch
│   ├── 0009-drm-amd-display-add-plane-3D-LUT-driver-specific-pro.patch
│   ├── 0010-drm-amd-display-add-plane-shaper-LUT-driver-specific.patch
│   ├── 0011-drm-amd-display-add-plane-shaper-TF-driver-private-p.patch
│   ├── 0012-drm-amd-display-add-plane-blend-LUT-and-TF-driver-sp.patch
│   ├── 0013-drm-amd-display-add-comments-to-describe-DM-crtc-col.patch
│   ├── 0014-drm-amd-display-encapsulate-atomic-regamma-operation.patch
│   ├── 0015-drm-amd-display-add-CRTC-regamma-TF-support.patch
│   ├── 0016-drm-amd-display-set-sdr_ref_white_level-to-80-for-ou.patch
│   ├── 0017-drm-amd-display-mark-plane-as-needing-reset-if-color.patch
│   ├── 0018-drm-amd-display-decouple-steps-for-mapping-CRTC-dega.patch
│   ├── 0019-drm-amd-display-add-support-for-plane-degamma-TF-and.patch
│   ├── 0020-drm-amd-display-reject-atomic-commit-if-setting-both.patch
│   ├── 0021-drm-amd-display-add-dc_fixpt_from_s3132-helper.patch
│   ├── 0022-drm-adm-display-add-HDR-multiplier-support.patch
│   ├── 0023-drm-amd-display-add-plane-shaper-LUT-support.patch
│   ├── 0024-drm-amd-display-add-plane-shaper-TF-support.patch
│   ├── 0025-drm-amd-display-add-plane-3D-LUT-support.patch
│   ├── 0026-drm-amd-display-handle-empty-LUTs-in-__set_input_tf.patch
│   ├── 0027-drm-amd-display-add-plane-blend-LUT-and-TF-support.patch
│   ├── 0028-drm-amd-display-allow-newer-DC-hardware-to-use-degam.patch
│   ├── 0029-drm-amd-display-copy-3D-LUT-settings-from-crtc-state.patch
│   ├── 0030-drm-amd-display-Reset-CRTC-color-mgmt-state-if-commi.patch
│   ├── 0031-drm-amd-display-add-plane-CTM-driver-specific-proper.patch
│   ├── 0032-drm-amd-display-add-plane-CTM-support.patch
│   ├── 0033-drm-amd-display-Use-3x4-CTM-for-plane-CTM.patch
│   ├── 0034-HACK-Prefix-new-color-mgmt-properties-with-VALVE1_.patch
│   ├── 0035-HACK-add-KConfig-to-enable-driver-specific-color-mgm.patch
│   ├── 0036-draft-drm-amd-display-switch-priority-for-DPP-gamut-.patch
│   ├── 0037-drm-amd-display-Set-color_mgmt_changed-to-true-on-un.patch
│   ├── 0038-drm-amd-display-Duplicate-color-management-plane-blo.patch
│   ├── 0039-drm-amd-display-Remove-erroneous-color_mgmt_changed-.patch
│   └── 0040-drm-amd-display-Don-t-consider-vblank-passed-if-curr.patch
├── drm-chimera-patches-v2
│   └── 0001-drm-6.7-Add-DRM-Chimera-patches.patch
├── drm-chimera-patches-v2-all
│   └── 0001-drm-chimera-patches.patch
├── drm-chimera-patches-v2-sep
│   ├── 0001-drm-drm_mode_object-increase-max-objects-to-accommod.patch
│   ├── 0002-drm-drm_property-make-replace_property_blob_from_id-.patch
│   ├── 0003-drm-drm_plane-track-color-mgmt-changes-per-plane.patch
│   ├── 0004-drm-amd-display-fix-segment-distribution-for-linear-.patch
│   ├── 0005-drm-amd-display-add-CRTC-driver-specific-property-fo.patch
│   ├── 0006-drm-amd-display-add-plane-driver-specific-properties.patch
│   ├── 0007-drm-amd-display-add-plane-degamma-TF-driver-specific.patch
│   ├── 0008-drm-amd-display-add-plane-HDR-multiplier-driver-spec.patch
│   ├── 0009-drm-amd-display-add-plane-3D-LUT-driver-specific-pro.patch
│   ├── 0010-drm-amd-display-add-plane-shaper-LUT-driver-specific.patch
│   ├── 0011-drm-amd-display-add-plane-shaper-TF-driver-private-p.patch
│   ├── 0012-drm-amd-display-add-plane-blend-LUT-and-TF-driver-sp.patch
│   ├── 0013-drm-amd-display-add-comments-to-describe-DM-crtc-col.patch
│   ├── 0014-drm-amd-display-encapsulate-atomic-regamma-operation.patch
│   ├── 0015-drm-amd-display-add-CRTC-regamma-TF-support.patch
│   ├── 0016-drm-amd-display-set-sdr_ref_white_level-to-80-for-ou.patch
│   ├── 0017-drm-amd-display-mark-plane-as-needing-reset-if-color.patch
│   ├── 0018-drm-amd-display-decouple-steps-for-mapping-CRTC-dega.patch
│   ├── 0019-drm-amd-display-add-support-for-plane-degamma-TF-and.patch
│   ├── 0020-drm-amd-display-reject-atomic-commit-if-setting-both.patch
│   ├── 0021-drm-amd-display-add-dc_fixpt_from_s3132-helper.patch
│   ├── 0022-drm-adm-display-add-HDR-multiplier-support.patch
│   ├── 0023-drm-amd-display-add-plane-shaper-LUT-support.patch
│   ├── 0024-drm-amd-display-add-plane-shaper-TF-support.patch
│   ├── 0025-drm-amd-display-add-plane-3D-LUT-support.patch
│   ├── 0026-drm-amd-display-handle-empty-LUTs-in-__set_input_tf.patch
│   ├── 0027-drm-amd-display-add-plane-blend-LUT-and-TF-support.patch
│   ├── 0028-drm-amd-display-allow-newer-DC-hardware-to-use-degam.patch
│   ├── 0029-drm-amd-display-copy-3D-LUT-settings-from-crtc-state.patch
│   ├── 0030-drm-amd-display-Reset-CRTC-color-mgmt-state-if-commi.patch
│   ├── 0031-drm-amd-display-add-plane-CTM-driver-specific-proper.patch
│   ├── 0032-drm-amd-display-add-plane-CTM-support.patch
│   ├── 0033-drm-amd-display-Use-3x4-CTM-for-plane-CTM.patch
│   ├── 0034-HACK-Prefix-new-color-mgmt-properties-with-VALVE1_.patch
│   ├── 0035-HACK-add-KConfig-to-enable-driver-specific-color-mgm.patch
│   ├── 0036-draft-drm-amd-display-switch-priority-for-DPP-gamut-.patch
│   ├── 0037-drm-amd-display-Set-color_mgmt_changed-to-true-on-un.patch
│   ├── 0038-drm-amd-display-Duplicate-color-management-plane-blo.patch
│   ├── 0039-drm-amd-display-Remove-erroneous-color_mgmt_changed-.patch
│   ├── 0040-drm-amd-display-Don-t-consider-vblank-passed-if-curr.patch
│   └── 0041-Don-t-create-color_mgmt_properties-on-asics-SIENNA_C.patch
├── drm-patches
│   └── 0001-drm-6.7-Add-HDR-patches.patch
├── eevdf-patches
│   └── 0001-sched-6.7-merge-changes-from-dev-tree.patch
├── eevdf-patches-all
│   └── 0001-eevdf-patches.patch
├── eevdf-patches-sep
│   ├── 0001-sched-doc-Update-documentation-after-renames-and-syn.patch
│   ├── 0002-sched-fair-Update-min_vruntime-for-reweight_entity-c.patch
│   ├── 0003-sched-eevdf-Sort-the-rbtree-by-virtual-deadline.patch
│   ├── 0004-sched-eevdf-O-1-fastpath-for-task-selection.patch
│   ├── 0005-sched-stats-branch-statistics-for-pick_eevdf.patch
│   ├── 0006-sched-eevdf-Add-feature-comments.patch
│   ├── 0007-sched-eevdf-Remove-min_vruntime_copy.patch
│   ├── 0008-sched-eevdf-Use-sched_attr-sched_runtime-to-set-requ.patch
│   ├── 0009-sched-eevdf-Allow-shorter-slices-to-wakeup-preempt.patch
│   ├── 0010-sched-eevdf-Revenge-of-the-Sith-WSleeper.patch
│   └── 0011-sched-eevdf-Delay-dequeue.patch
├── eevdf-patches-v2
│   └── 0001-sched-6.7-merge-changes-from-dev-tree.patch
├── eevdf-patches-v2-all
│   └── 0001-eevdf-patches.patch
├── eevdf-patches-v2-sep
│   ├── 0001-sched-doc-Update-documentation-after-renames-and-syn.patch
│   ├── 0002-sched-eevdf-Sort-the-rbtree-by-virtual-deadline.patch
│   ├── 0003-sched-eevdf-O-1-fastpath-for-task-selection.patch
│   ├── 0004-sched-stats-branch-statistics-for-pick_eevdf.patch
│   ├── 0005-sched-eevdf-Add-feature-comments.patch
│   ├── 0006-sched-eevdf-Remove-min_vruntime_copy.patch
│   ├── 0007-sched-eevdf-Use-sched_attr-sched_runtime-to-set-requ.patch
│   ├── 0008-sched-eevdf-Allow-shorter-slices-to-wakeup-preempt.patch
│   ├── 0009-sched-eevdf-Revenge-of-the-Sith-WSleeper.patch
│   └── 0010-sched-eevdf-Delay-dequeue.patch
├── Files
├── fixes-miscellaneous
│   └── 0001-fixes-miscellaneous.patch
├── fixes-miscellaneous-sep
│   ├── 0001-mm-Change-dirty-writeback-defaults.patch
│   ├── 0002-ZEN-mm-Lower-the-non-hugetlbpage-pageblock-size-to-r.patch
│   ├── 0003-padata-Do-not-mark-padata_mt_helper-as-__init.patch
│   ├── 0004-Initialize-ata-before-graphics.patch
│   ├── 0005-Bluetooth-btusb-work-around-command-0xfc05-tx-timeou.patch
│   ├── 0006-readahead-correct-the-start-and-size-in-ondemand_rea.patch
│   ├── 0007-x86-barrier-Do-not-serialize-MSR-accesses-on-AMD.patch
│   ├── 0008-mm-Mark-nr_node_ids-__ro_after_init.patch
│   ├── 0009-smp-Mark-nr_cpu_ids-__ro_after_init.patch
│   ├── 0010-mm-nodemask-Use-nr_node_ids.patch
│   ├── 0011-docs-Add-block-device-blkdev-LED-trigger-documentati.patch
│   ├── 0012-leds-trigger-Add-block-device-LED-trigger.patch
│   └── 0013-leds-trigger-Adapt-blkdev_get_by_path-and-blkdev_put.patch
├── fs-patches
│   └── 0001-fs-exec.c-Add-fast-path-for-ENOENT-on-PATH-search-be.patch
├── futex-dev-patches
│   └── 0001-futex-6.7-merge-changes-from-dev-tree.patch
├── futex-dev-patches-all
│   └── 0001-futex-dev-patches.patch
├── futex-dev-patches-sep
│   ├── 0001-futex-Implement-FUTEX2_NUMA.patch
│   ├── 0002-futex-Propagate-flags-into-futex_get_value_locked.patch
│   ├── 0003-futex-Enable-FUTEX2_-8-16.patch
│   ├── 0004-futex-selftests-Extend-the-futex-selftests.patch
│   ├── 0005-futex-selftests-Extend-the-futex-selftests-for-NUMA.patch
│   └── 0006-futex-Force-futex-hash-collision.patch
├── futex-patches
│   └── 0001-futex-6.7-Add-entry-point-for-FUTEX_WAIT_MULTIPLE-op.patch
├── intel-patches
│   └── 0001-sched-fair-Don-t-force-smt-balancing-when-CPU-has-sp.patch
├── iosched-patches
│   └── 0001-iosched-6.7-merge-changes-from-dev-tree.patch
├── iosched-patches-all
│   └── 0001-iosched-patches.patch
├── iosched-patches-sep
│   ├── 0001-block-mq-deadline-pass-in-queue-directly-to-dd_inser.patch
│   ├── 0002-block-mq-deadline-serialize-request-dispatching.patch
│   ├── 0003-block-mq-deadline-skip-expensive-merge-lookups-if-co.patch
│   ├── 0004-block-mq-deadline-use-separate-insertion-lists.patch
│   ├── 0005-block-bfq-pass-in-queue-directly-to-dd_insert_reques.patch
│   ├── 0006-block-bfq-serialize-request-dispatching.patch
│   ├── 0007-block-bfq-skip-expensive-merge-lookups-if-contended.patch
│   └── 0008-block-bfq-use-separate-insertion-lists.patch
├── kbuild-cachyos-patches
│   └── 0001-Cachy-Allow-O3.patch
├── ksm-patches
│   └── 0001-ksm-6.7-merge-changes-from-dev-tree.patch
├── ksm-patches-all
│   └── 0001-ksm-patches.patch
├── ksm-patches-sep
│   ├── 0001-mm-ksm-add-ksm-advisor.patch
│   ├── 0002-mm-ksm-add-sysfs-knobs-for-advisor.patch
│   ├── 0003-mm-ksm-add-tracepoint-for-ksm-advisor.patch
│   └── 0004-mm-ksm-document-ksm-advisor-and-its-sysfs-knobs.patch
├── le9uo-default-on-patches
│   └── 0001-mm-6.7-add-le9uo.patch
├── le9uo-patches
│   └── 0001-mm-6.7-add-le9uo.patch
├── le9uo-patches-v2
│   └── 0001-mm-6.7-add-le9uo.patch
├── lrng-ddcci-patches
│   └── 0001-lrng-6.7-introduce-Linux-Random-Number-Generator-wit.patch
├── lrng-ddcci-patches-all
│   └── 0001-lrng-ddcci-patches.patch
├── lrng-ddcci-patches-sep
│   ├── 0001-drivers-ddcci-initial-merge.patch
│   ├── 0002-LRNG-Entropy-Source-and-DRNG-Manager.patch
│   ├── 0003-LRNG-allocate-one-DRNG-instance-per-NUMA-node.patch
│   ├── 0004-LRNG-proc-interface.patch
│   ├── 0005-LRNG-add-switchable-DRNG-support.patch
│   ├── 0006-LRNG-add-common-generic-hash-support.patch
│   ├── 0007-crypto-DRBG-externalize-DRBG-functions-for-LRNG.patch
│   ├── 0008-LRNG-add-SP800-90A-DRBG-extension.patch
│   ├── 0009-LRNG-add-kernel-crypto-API-PRNG-extension.patch
│   ├── 0010-LRNG-add-atomic-DRNG-implementation.patch
│   ├── 0011-LRNG-add-common-timer-based-entropy-source-code.patch
│   ├── 0012-LRNG-add-interrupt-entropy-source.patch
│   ├── 0013-scheduler-add-entropy-sampling-hook.patch
│   ├── 0014-LRNG-add-scheduler-based-entropy-source.patch
│   ├── 0015-LRNG-add-SP800-90B-compliant-health-tests.patch
│   ├── 0016-LRNG-add-random.c-entropy-source-support.patch
│   ├── 0017-LRNG-CPU-entropy-source.patch
│   ├── 0018-LRNG-add-Jitter-RNG-fast-noise-source.patch
│   ├── 0019-LRNG-add-option-to-enable-runtime-entropy-rate-confi.patch
│   ├── 0020-LRNG-add-interface-for-gathering-of-raw-entropy.patch
│   ├── 0021-LRNG-add-power-on-and-runtime-self-tests.patch
│   ├── 0022-LRNG-sysctls-and-proc-interface.patch
│   ├── 0023-LRMG-add-drop-in-replacement-random-4-API.patch
│   ├── 0024-LRNG-add-kernel-crypto-API-interface.patch
│   ├── 0025-LRNG-add-dev-lrng-device-file-support.patch
│   ├── 0026-LRNG-add-hwrand-framework-interface.patch
│   └── 0027-MAINTAINERS-add-Stephan-Mueller-as-a-LRNG-maintainer.patch
├── lrng-ddcci-patches-v2
│   └── 0001-lrng-6.7-introduce-Linux-Random-Number-Generator-wit.patch
├── lrng-ddcci-patches-v2-all
│   └── 0001-lrng-ddcci-patches.patch
├── lrng-ddcci-patches-v2-sep
│   ├── 0001-drivers-ddcci-initial-merge.patch
│   ├── 0002-LRNG-Entropy-Source-and-DRNG-Manager.patch
│   ├── 0003-LRNG-allocate-one-DRNG-instance-per-NUMA-node.patch
│   ├── 0004-LRNG-proc-interface.patch
│   ├── 0005-LRNG-add-switchable-DRNG-support.patch
│   ├── 0006-LRNG-add-common-generic-hash-support.patch
│   ├── 0007-crypto-DRBG-externalize-DRBG-functions-for-LRNG.patch
│   ├── 0008-LRNG-add-SP800-90A-DRBG-extension.patch
│   ├── 0009-LRNG-add-kernel-crypto-API-PRNG-extension.patch
│   ├── 0010-LRNG-add-atomic-DRNG-implementation.patch
│   ├── 0011-LRNG-add-common-timer-based-entropy-source-code.patch
│   ├── 0012-LRNG-add-interrupt-entropy-source.patch
│   ├── 0013-scheduler-add-entropy-sampling-hook.patch
│   ├── 0014-LRNG-add-scheduler-based-entropy-source.patch
│   ├── 0015-LRNG-add-SP800-90B-compliant-health-tests.patch
│   ├── 0016-LRNG-add-random.c-entropy-source-support.patch
│   ├── 0017-LRNG-CPU-entropy-source.patch
│   ├── 0018-LRNG-add-Jitter-RNG-fast-noise-source.patch
│   ├── 0019-LRNG-add-option-to-enable-runtime-entropy-rate-confi.patch
│   ├── 0020-LRNG-add-interface-for-gathering-of-raw-entropy.patch
│   ├── 0021-LRNG-add-power-on-and-runtime-self-tests.patch
│   ├── 0022-LRNG-sysctls-and-proc-interface.patch
│   ├── 0023-LRMG-add-drop-in-replacement-random-4-API.patch
│   ├── 0024-LRNG-add-kernel-crypto-API-interface.patch
│   ├── 0025-LRNG-add-dev-lrng-device-file-support.patch
│   ├── 0026-LRNG-add-hwrand-framework-interface.patch
│   └── 0027-MAINTAINERS-add-Stephan-Mueller-as-a-LRNG-maintainer.patch
├── lrng-patches
│   └── 0001-lrng-6.7-introduce-Linux-Random-Number-Generator.patch
├── lrng-patches-all
│   └── 0001-lrng-patches.patch
├── lrng-patches-sep
│   ├── 0001-LRNG-Entropy-Source-and-DRNG-Manager.patch
│   ├── 0002-LRNG-allocate-one-DRNG-instance-per-NUMA-node.patch
│   ├── 0003-LRNG-proc-interface.patch
│   ├── 0004-LRNG-add-switchable-DRNG-support.patch
│   ├── 0005-LRNG-add-common-generic-hash-support.patch
│   ├── 0006-crypto-DRBG-externalize-DRBG-functions-for-LRNG.patch
│   ├── 0007-LRNG-add-SP800-90A-DRBG-extension.patch
│   ├── 0008-LRNG-add-kernel-crypto-API-PRNG-extension.patch
│   ├── 0009-LRNG-add-atomic-DRNG-implementation.patch
│   ├── 0010-LRNG-add-common-timer-based-entropy-source-code.patch
│   ├── 0011-LRNG-add-interrupt-entropy-source.patch
│   ├── 0012-scheduler-add-entropy-sampling-hook.patch
│   ├── 0013-LRNG-add-scheduler-based-entropy-source.patch
│   ├── 0014-LRNG-add-SP800-90B-compliant-health-tests.patch
│   ├── 0015-LRNG-add-random.c-entropy-source-support.patch
│   ├── 0016-LRNG-CPU-entropy-source.patch
│   ├── 0017-LRNG-add-Jitter-RNG-fast-noise-source.patch
│   ├── 0018-LRNG-add-option-to-enable-runtime-entropy-rate-confi.patch
│   ├── 0019-LRNG-add-interface-for-gathering-of-raw-entropy.patch
│   ├── 0020-LRNG-add-power-on-and-runtime-self-tests.patch
│   ├── 0021-LRNG-sysctls-and-proc-interface.patch
│   ├── 0022-LRMG-add-drop-in-replacement-random-4-API.patch
│   ├── 0023-LRNG-add-kernel-crypto-API-interface.patch
│   ├── 0024-LRNG-add-dev-lrng-device-file-support.patch
│   ├── 0025-LRNG-add-hwrand-framework-interface.patch
│   └── 0026-MAINTAINERS-add-Stephan-Mueller-as-a-LRNG-maintainer.patch
├── lrng-patches-v2
│   └── 0001-lrng-6.7-introduce-Linux-Random-Number-Generator.patch
├── lrng-patches-v2-all
│   └── 0001-lrng-patches.patch
├── lrng-patches-v2-sep
│   ├── 0001-LRNG-Entropy-Source-and-DRNG-Manager.patch
│   ├── 0002-LRNG-allocate-one-DRNG-instance-per-NUMA-node.patch
│   ├── 0003-LRNG-proc-interface.patch
│   ├── 0004-LRNG-add-switchable-DRNG-support.patch
│   ├── 0005-LRNG-add-common-generic-hash-support.patch
│   ├── 0006-crypto-DRBG-externalize-DRBG-functions-for-LRNG.patch
│   ├── 0007-LRNG-add-SP800-90A-DRBG-extension.patch
│   ├── 0008-LRNG-add-kernel-crypto-API-PRNG-extension.patch
│   ├── 0009-LRNG-add-atomic-DRNG-implementation.patch
│   ├── 0010-LRNG-add-common-timer-based-entropy-source-code.patch
│   ├── 0011-LRNG-add-interrupt-entropy-source.patch
│   ├── 0012-scheduler-add-entropy-sampling-hook.patch
│   ├── 0013-LRNG-add-scheduler-based-entropy-source.patch
│   ├── 0014-LRNG-add-SP800-90B-compliant-health-tests.patch
│   ├── 0015-LRNG-add-random.c-entropy-source-support.patch
│   ├── 0016-LRNG-CPU-entropy-source.patch
│   ├── 0017-LRNG-add-Jitter-RNG-fast-noise-source.patch
│   ├── 0018-LRNG-add-option-to-enable-runtime-entropy-rate-confi.patch
│   ├── 0019-LRNG-add-interface-for-gathering-of-raw-entropy.patch
│   ├── 0020-LRNG-add-power-on-and-runtime-self-tests.patch
│   ├── 0021-LRNG-sysctls-and-proc-interface.patch
│   ├── 0022-LRMG-add-drop-in-replacement-random-4-API.patch
│   ├── 0023-LRNG-add-kernel-crypto-API-interface.patch
│   ├── 0024-LRNG-add-dev-lrng-device-file-support.patch
│   ├── 0025-LRNG-add-hwrand-framework-interface.patch
│   └── 0026-MAINTAINERS-add-Stephan-Mueller-as-a-LRNG-maintainer.patch
├── maple-lru-patches
│   └── 0001-mm-6.7-add-maple-tree-and-mglru-fixes.patch
├── maple-lru-patches-all
│   └── 0001-maple-lru-patches.patch
├── maple-lru-patches-sep
│   ├── 0001-Tune-mgLRU-to-protect-cache-used-in-the-last-second.patch
│   ├── 0002-tracing-mm-multigen-lru-fix-mglru-trace.patch
│   ├── 0003-mm-multi-gen-LRU-move-promoted-folio-out-of-lock.patch
│   ├── 0004-maple_tree-Add-mt_free_one-and-mt_attr-helpers.patch
│   ├── 0005-maple_tree-Introduce-mtree-mas-_lock_nested.patch
│   ├── 0006-maple_tree-Introduce-interfaces-__mt_dup-and-mtree_d.patch
│   ├── 0007-radix-tree-test-suite-Align-kmem_cache_alloc_bulk-wi.patch
│   ├── 0008-maple_tree-Add-test-for-mtree_dup.patch
│   ├── 0009-maple_tree-Update-the-documentation-of-maple-tree.patch
│   ├── 0010-maple_tree-Skip-other-tests-when-BENCH-is-enabled.patch
│   ├── 0011-maple_tree-Update-check_forking-and-bench_forking.patch
│   ├── 0012-maple_tree-Preserve-the-tree-attributes-when-destroy.patch
│   ├── 0013-fork-Use-__mt_dup-to-duplicate-maple-tree-in-dup_mma.patch
│   ├── 0014-maple_tree-Remove-unused-function.patch
│   ├── 0015-maple_tree-Remove-unnecessary-default-labels-from-sw.patch
│   ├── 0016-maple_tree-Make-mas_erase-more-robust.patch
│   ├── 0017-maple_tree-Move-debug-check-to-__mas_set_range.patch
│   ├── 0018-maple_tree-Add-end-of-node-tracking-to-the-maple-sta.patch
│   ├── 0019-maple_tree-Use-cached-node-end-in-mas_next.patch
│   ├── 0020-maple_tree-Use-cached-node-end-in-mas_destroy.patch
│   ├── 0021-maple_tree-Clean-up-inlines-for-some-functions.patch
│   ├── 0022-maple_tree-Separate-ma_state-node-from-status.patch
│   ├── 0023-maple_tree-Remove-mas_searchable.patch
│   ├── 0024-maple_tree-Use-maple-state-end-for-write-operations.patch
│   ├── 0025-maple_tree-Don-t-find-node-end-in-mtree_lookup_walk.patch
│   ├── 0026-maple_tree-mtree_range_walk-clean-up.patch
│   ├── 0027-maple_tree-Fix-comments-about-MAS_.patch
│   ├── 0028-maple_tree-Update-forking-to-separate-maple-state-an.patch
│   ├── 0029-mm-vmscan-LRU-unbalance-cgroup-reclaim.patch
│   ├── 0030-mm-multi-gen-LRU-MGLRU-unbalance-reclaim.patch
│   ├── 0031-mm-memcg-implement-unbalance-proactive-reclaim.patch
│   ├── 0032-mm-memcg-apply-proactive-reclaim-into-cgroupv1.patch
│   ├── 0033-maple_tree-change-return-type-of-mas_split_final_nod.patch
│   ├── 0034-maple_tree-Move-the-check-forward-to-avoid-static-ch.patch
│   ├── 0035-maple_tree-Avoid-ascending-when-mas-min-is-also-the-.patch
│   ├── 0036-maple_tree-Remove-an-unused-parameter-for-ma_meta_en.patch
│   ├── 0037-maple_tree-Delete-one-of-the-two-identical-checks.patch
│   ├── 0038-maple_tree-Simplify-mas_leaf_set_meta.patch
│   └── 0039-maple_tree-Avoid-checking-other-gaps-after-getting-t.patch
├── maple-lru-patches-v2
│   └── 0001-mm-6.7-add-maple-tree-and-mglru-fixes.patch
├── maple-lru-patches-v2-all
│   └── 0001-maple-lru-patches.patch
├── maple-lru-patches-v2-sep
│   ├── 0001-Tune-mgLRU-to-protect-cache-used-in-the-last-second.patch
│   ├── 0002-tracing-mm-multigen-lru-fix-mglru-trace.patch
│   ├── 0003-mm-multi-gen-LRU-move-promoted-folio-out-of-lock.patch
│   ├── 0004-maple_tree-Add-mt_free_one-and-mt_attr-helpers.patch
│   ├── 0005-maple_tree-Introduce-mtree-mas-_lock_nested.patch
│   ├── 0006-maple_tree-Introduce-interfaces-__mt_dup-and-mtree_d.patch
│   ├── 0007-radix-tree-test-suite-Align-kmem_cache_alloc_bulk-wi.patch
│   ├── 0008-maple_tree-Add-test-for-mtree_dup.patch
│   ├── 0009-maple_tree-Update-the-documentation-of-maple-tree.patch
│   ├── 0010-maple_tree-Skip-other-tests-when-BENCH-is-enabled.patch
│   ├── 0011-maple_tree-Update-check_forking-and-bench_forking.patch
│   ├── 0012-maple_tree-Preserve-the-tree-attributes-when-destroy.patch
│   ├── 0013-fork-Use-__mt_dup-to-duplicate-maple-tree-in-dup_mma.patch
│   ├── 0014-maple_tree-Remove-unused-function.patch
│   ├── 0015-maple_tree-Remove-unnecessary-default-labels-from-sw.patch
│   ├── 0016-maple_tree-Make-mas_erase-more-robust.patch
│   ├── 0017-maple_tree-Move-debug-check-to-__mas_set_range.patch
│   ├── 0018-maple_tree-Add-end-of-node-tracking-to-the-maple-sta.patch
│   ├── 0019-maple_tree-Use-cached-node-end-in-mas_next.patch
│   ├── 0020-maple_tree-Use-cached-node-end-in-mas_destroy.patch
│   ├── 0021-maple_tree-Clean-up-inlines-for-some-functions.patch
│   ├── 0022-maple_tree-Separate-ma_state-node-from-status.patch
│   ├── 0023-maple_tree-Remove-mas_searchable.patch
│   ├── 0024-maple_tree-Use-maple-state-end-for-write-operations.patch
│   ├── 0025-maple_tree-Don-t-find-node-end-in-mtree_lookup_walk.patch
│   ├── 0026-maple_tree-mtree_range_walk-clean-up.patch
│   ├── 0027-maple_tree-Fix-comments-about-MAS_.patch
│   ├── 0028-maple_tree-Update-forking-to-separate-maple-state-an.patch
│   ├── 0029-mm-vmscan-LRU-unbalance-cgroup-reclaim.patch
│   ├── 0030-mm-multi-gen-LRU-MGLRU-unbalance-reclaim.patch
│   ├── 0031-mm-memcg-implement-unbalance-proactive-reclaim.patch
│   ├── 0032-mm-memcg-apply-proactive-reclaim-into-cgroupv1.patch
│   ├── 0033-maple_tree-change-return-type-of-mas_split_final_nod.patch
│   ├── 0034-maple_tree-Move-the-check-forward-to-avoid-static-ch.patch
│   ├── 0035-maple_tree-Avoid-ascending-when-mas-min-is-also-the-.patch
│   ├── 0036-maple_tree-Remove-an-unused-parameter-for-ma_meta_en.patch
│   ├── 0037-maple_tree-Delete-one-of-the-two-identical-checks.patch
│   ├── 0038-maple_tree-Simplify-mas_leaf_set_meta.patch
│   ├── 0039-maple_tree-Avoid-checking-other-gaps-after-getting-t.patch
│   └── 0040-maple_tree-fix-comment-describing-mas_node_count_gfp.patch
├── maple-lru-patches-v3
│   └── 0001-mm-6.7-add-maple-tree-and-mglru-fixes.patch
├── maple-lru-patches-v3-all
│   └── 0001-maple-lru-patches.patch
├── maple-lru-patches-v3-sep
│   ├── 0001-Tune-mgLRU-to-protect-cache-used-in-the-last-second.patch
│   ├── 0002-tracing-mm-multigen-lru-fix-mglru-trace.patch
│   ├── 0003-mm-multi-gen-LRU-move-promoted-folio-out-of-lock.patch
│   ├── 0004-maple_tree-Add-mt_free_one-and-mt_attr-helpers.patch
│   ├── 0005-maple_tree-Introduce-mtree-mas-_lock_nested.patch
│   ├── 0006-maple_tree-Introduce-interfaces-__mt_dup-and-mtree_d.patch
│   ├── 0007-radix-tree-test-suite-Align-kmem_cache_alloc_bulk-wi.patch
│   ├── 0008-maple_tree-Add-test-for-mtree_dup.patch
│   ├── 0009-maple_tree-Update-the-documentation-of-maple-tree.patch
│   ├── 0010-maple_tree-Skip-other-tests-when-BENCH-is-enabled.patch
│   ├── 0011-maple_tree-Update-check_forking-and-bench_forking.patch
│   ├── 0012-maple_tree-Preserve-the-tree-attributes-when-destroy.patch
│   ├── 0013-fork-Use-__mt_dup-to-duplicate-maple-tree-in-dup_mma.patch
│   ├── 0014-maple_tree-Remove-unused-function.patch
│   ├── 0015-maple_tree-Remove-unnecessary-default-labels-from-sw.patch
│   ├── 0016-maple_tree-Make-mas_erase-more-robust.patch
│   ├── 0017-maple_tree-Move-debug-check-to-__mas_set_range.patch
│   ├── 0018-maple_tree-Add-end-of-node-tracking-to-the-maple-sta.patch
│   ├── 0019-maple_tree-Use-cached-node-end-in-mas_next.patch
│   ├── 0020-maple_tree-Use-cached-node-end-in-mas_destroy.patch
│   ├── 0021-maple_tree-Clean-up-inlines-for-some-functions.patch
│   ├── 0022-maple_tree-Separate-ma_state-node-from-status.patch
│   ├── 0023-maple_tree-Remove-mas_searchable.patch
│   ├── 0024-maple_tree-Use-maple-state-end-for-write-operations.patch
│   ├── 0025-maple_tree-Don-t-find-node-end-in-mtree_lookup_walk.patch
│   ├── 0026-maple_tree-mtree_range_walk-clean-up.patch
│   ├── 0027-maple_tree-Fix-comments-about-MAS_.patch
│   ├── 0028-maple_tree-Update-forking-to-separate-maple-state-an.patch
│   ├── 0029-mm-vmscan-LRU-unbalance-cgroup-reclaim.patch
│   ├── 0030-mm-multi-gen-LRU-MGLRU-unbalance-reclaim.patch
│   ├── 0031-mm-memcg-implement-unbalance-proactive-reclaim.patch
│   ├── 0032-mm-memcg-apply-proactive-reclaim-into-cgroupv1.patch
│   ├── 0033-maple_tree-change-return-type-of-mas_split_final_nod.patch
│   ├── 0034-maple_tree-Move-the-check-forward-to-avoid-static-ch.patch
│   ├── 0035-maple_tree-Avoid-ascending-when-mas-min-is-also-the-.patch
│   ├── 0036-maple_tree-Remove-an-unused-parameter-for-ma_meta_en.patch
│   ├── 0037-maple_tree-Delete-one-of-the-two-identical-checks.patch
│   ├── 0038-maple_tree-Simplify-mas_leaf_set_meta.patch
│   ├── 0039-maple_tree-Avoid-checking-other-gaps-after-getting-t.patch
│   ├── 0040-maple_tree-fix-comment-describing-mas_node_count_gfp.patch
│   ├── 0041-mm-lru_gen-batch-update-counters-on-againg.patch
│   ├── 0042-mm-lru_gen-move-pages-in-bulk-when-aging.patch
│   └── 0043-mm-lru_gen-try-to-prefetch-next-page-when-canning-LR.patch
├── memory-dev-patches
│   └── 0001-memory-6.7-introduce-memory-allocation-profiling.patch
├── memory-dev-patches-all
│   └── 0001-memory-dev-patches.patch
├── memory-dev-patches-sep
│   ├── 0001-lib-string_helpers-Add-flags-param-to-string_get_siz.patch
│   ├── 0002-scripts-kallysms-Always-include-__start-and-__stop-s.patch
│   ├── 0003-fs-Convert-alloc_inode_sb-to-a-macro.patch
│   ├── 0004-nodemask-Split-out-include-linux-nodemask_types.h.patch
│   ├── 0005-prandom-Remove-unused-include.patch
│   ├── 0006-mm-enumerate-all-gfp-flags.patch
│   ├── 0007-mm-introduce-slabobj_ext-to-support-slab-object-exte.patch
│   ├── 0008-mm-introduce-__GFP_NO_OBJ_EXT-flag-to-selectively-pr.patch
│   ├── 0009-mm-slab-introduce-SLAB_NO_OBJ_EXT-to-avoid-obj_ext-c.patch
│   ├── 0010-mm-prevent-slabobj_ext-allocations-for-slabobj_ext-a.patch
│   ├── 0011-slab-objext-introduce-objext_flags-as-extension-to-p.patch
│   ├── 0012-lib-code-tagging-framework.patch
│   ├── 0013-lib-code-tagging-module-support.patch
│   ├── 0014-lib-prevent-module-unloading-if-memory-is-not-freed.patch
│   ├── 0015-lib-add-allocation-tagging-support-for-memory-alloca.patch
│   ├── 0016-lib-introduce-support-for-page-allocation-tagging.patch
│   ├── 0017-change-alloc_pages-name-in-dma_map_ops-to-avoid-name.patch
│   ├── 0018-change-alloc_pages-name-in-ivpu_bo_ops-to-avoid-conf.patch
│   ├── 0019-mm-enable-page-allocation-tagging.patch
│   ├── 0020-mm-create-new-codetag-references-during-page-splitti.patch
│   ├── 0021-mm-page_ext-enable-early_page_ext-when-CONFIG_MEM_AL.patch
│   ├── 0022-lib-add-codetag-reference-into-slabobj_ext.patch
│   ├── 0023-mm-slab-add-allocation-accounting-into-slab-allocati.patch
│   ├── 0024-mm-slab-enable-slab-allocation-tagging-for-kmalloc-a.patch
│   ├── 0025-mm-slub-Mark-slab_free_freelist_hook-__always_inline.patch
│   ├── 0026-mempool-Hook-up-to-memory-allocation-profiling.patch
│   ├── 0027-xfs-Memory-allocation-profiling-fixups.patch
│   ├── 0028-timekeeping-Fix-a-circular-include-dependency.patch
│   ├── 0029-mm-percpu-Introduce-pcpuobj_ext.patch
│   ├── 0030-mm-percpu-Add-codetag-reference-into-pcpuobj_ext.patch
│   ├── 0031-mm-percpu-enable-per-cpu-allocation-tagging.patch
│   ├── 0032-arm64-Fix-circular-header-dependency.patch
│   ├── 0033-mm-vmalloc-Enable-memory-allocation-profiling.patch
│   ├── 0034-rhashtable-Plumb-through-alloc-tag.patch
│   ├── 0035-lib-add-memory-allocations-report-in-show_mem.patch
│   ├── 0036-codetag-debug-skip-objext-checking-when-it-s-for-obj.patch
│   ├── 0037-codetag-debug-mark-codetags-for-reserved-pages-as-em.patch
│   ├── 0038-codetag-debug-introduce-OBJEXTS_ALLOC_FAIL-to-mark-f.patch
│   ├── 0039-MAINTAINERS-Add-entries-for-code-tagging-and-memory-.patch
│   ├── 0040-sched.h-test.patch
│   ├── 0041-kernel-numa.c-Move-logging-out-of-numa.h.patch
│   ├── 0042-sched.h-Move-spin-rwlock-_needbreak-to-spinlock.h.patch
│   ├── 0043-ktime.h-move-ktime_t-to-types.h.patch
│   ├── 0044-kmsan-add-missing-types.h-dependency.patch
│   ├── 0045-hrtimers-Split-out-hrtimer_types.h.patch
│   ├── 0046-locking-mutex-split-out-mutex_types.h.patch
│   ├── 0047-posix-cpu-timers-Split-out-posix-timers_types.h.patch
│   ├── 0048-locking-seqlock-Split-out-seqlock_types.h.patch
│   ├── 0049-pid-Split-out-pid_types.h.patch
│   ├── 0050-plist-Split-out-plist_types.h.patch
│   ├── 0051-wait-Remove-uapi-header-file-from-main-header-file.patch
│   ├── 0052-rslib-kill-bogus-dependency-on-list.h.patch
│   ├── 0053-timerqueue-Split-out-timerqueue_types.h.patch
│   ├── 0054-signal-Kill-bogus-dependency-on-list.h.patch
│   ├── 0055-timers-Split-out-timer_types.h.patch
│   ├── 0056-workqueue-Split-out-workqueue_types.h.patch
│   ├── 0057-shm-Kill-bogus-dependency-on-list.h.patch
│   ├── 0058-ipc-Kill-bogus-dependency-on-spinlock.h.patch
│   ├── 0059-sched.h-kill-bogus-dependency-on-irqflags.h.patch
│   ├── 0060-mm_types_task.h-Trim-dependencies.patch
│   ├── 0061-cpumask-Split-out-cpumask_types.h.patch
│   ├── 0062-syscall_user_dispatch.h-split-out-_types.h.patch
│   ├── 0063-x86-signal-kill-dependency-on-time.h.patch
│   ├── 0064-uapi-linux-resource.h-fix-include.patch
│   ├── 0065-refcount-Split-out-refcount_types.h.patch
│   ├── 0066-fixup-nodemask-Split-out-include-linux-nodemask_type.patch
│   ├── 0067-seccomp-Split-out-seccomp_types.h.patch
│   ├── 0068-fixup-hrtimers-Split-out-hrtimer_types.h.patch
│   ├── 0069-uidgid-Split-out-uidgid_types.h.patch
│   ├── 0070-sem-Split-out-sem_types.h.patch
│   ├── 0071-squash-shm-Kill-bogus-dependency-on-list.h.patch
│   ├── 0072-lockdep-move-held_lock-to-lockdep_types.h.patch
│   ├── 0073-restart_block-Trim-includes.patch
│   └── 0074-XXX-what-do-about-thread_info-asm-current.patch
├── memory-patches
│   └── 0001-memory-6.7-introduce-memory-allocation-profiling.patch
├── memory-patches-all
│   └── 0001-memory-patches.patch
├── memory-patches-sep
│   ├── 0001-lib-string_helpers-Add-flags-param-to-string_get_siz.patch
│   ├── 0002-scripts-kallysms-Always-include-__start-and-__stop-s.patch
│   ├── 0003-fs-Convert-alloc_inode_sb-to-a-macro.patch
│   ├── 0004-nodemask-Split-out-include-linux-nodemask_types.h.patch
│   ├── 0005-prandom-Remove-unused-include.patch
│   ├── 0006-mm-enumerate-all-gfp-flags.patch
│   ├── 0007-mm-introduce-slabobj_ext-to-support-slab-object-exte.patch
│   ├── 0008-mm-introduce-__GFP_NO_OBJ_EXT-flag-to-selectively-pr.patch
│   ├── 0009-mm-slab-introduce-SLAB_NO_OBJ_EXT-to-avoid-obj_ext-c.patch
│   ├── 0010-mm-prevent-slabobj_ext-allocations-for-slabobj_ext-a.patch
│   ├── 0011-slab-objext-introduce-objext_flags-as-extension-to-p.patch
│   ├── 0012-lib-code-tagging-framework.patch
│   ├── 0013-lib-code-tagging-module-support.patch
│   ├── 0014-lib-prevent-module-unloading-if-memory-is-not-freed.patch
│   ├── 0015-lib-add-allocation-tagging-support-for-memory-alloca.patch
│   ├── 0016-lib-introduce-support-for-page-allocation-tagging.patch
│   ├── 0017-change-alloc_pages-name-in-dma_map_ops-to-avoid-name.patch
│   ├── 0018-change-alloc_pages-name-in-ivpu_bo_ops-to-avoid-conf.patch
│   ├── 0019-mm-enable-page-allocation-tagging.patch
│   ├── 0020-mm-create-new-codetag-references-during-page-splitti.patch
│   ├── 0021-mm-page_ext-enable-early_page_ext-when-CONFIG_MEM_AL.patch
│   ├── 0022-lib-add-codetag-reference-into-slabobj_ext.patch
│   ├── 0023-mm-slab-add-allocation-accounting-into-slab-allocati.patch
│   ├── 0024-mm-slab-enable-slab-allocation-tagging-for-kmalloc-a.patch
│   ├── 0025-mm-slub-Mark-slab_free_freelist_hook-__always_inline.patch
│   ├── 0026-mempool-Hook-up-to-memory-allocation-profiling.patch
│   ├── 0027-xfs-Memory-allocation-profiling-fixups.patch
│   ├── 0028-timekeeping-Fix-a-circular-include-dependency.patch
│   ├── 0029-mm-percpu-Introduce-pcpuobj_ext.patch
│   ├── 0030-mm-percpu-Add-codetag-reference-into-pcpuobj_ext.patch
│   ├── 0031-mm-percpu-enable-per-cpu-allocation-tagging.patch
│   ├── 0032-arm64-Fix-circular-header-dependency.patch
│   ├── 0033-mm-vmalloc-Enable-memory-allocation-profiling.patch
│   ├── 0034-rhashtable-Plumb-through-alloc-tag.patch
│   ├── 0035-lib-add-memory-allocations-report-in-show_mem.patch
│   ├── 0036-codetag-debug-skip-objext-checking-when-it-s-for-obj.patch
│   ├── 0037-codetag-debug-mark-codetags-for-reserved-pages-as-em.patch
│   ├── 0038-codetag-debug-introduce-OBJEXTS_ALLOC_FAIL-to-mark-f.patch
│   └── 0039-MAINTAINERS-Add-entries-for-code-tagging-and-memory-.patch
├── mm-mitigate-cachyos-patches
│   └── 0001-mm-Mitigate-a-vmap-lock-contention-v3.patch
├── ntsync-patches
│   └── 0001-ntsync-6.7-merge-changes-from-dev-tree.patch
├── ntsync-patches-all
│   └── 0001-ntsync-patches.patch
├── ntsync-patches-sep
│   ├── 0001-ntsync-Introduce-the-ntsync-driver-and-character-dev.patch
│   ├── 0002-ntsync-Reserve-a-minor-device-number-and-ioctl-range.patch
│   ├── 0003-ntsync-Introduce-NTSYNC_IOC_CREATE_SEM-and-NTSYNC_IO.patch
│   ├── 0004-ntsync-Introduce-NTSYNC_IOC_PUT_SEM.patch
│   ├── 0005-ntsync-Introduce-NTSYNC_IOC_WAIT_ANY.patch
│   ├── 0006-ntsync-Introduce-NTSYNC_IOC_WAIT_ALL.patch
│   ├── 0007-ntsync-Introduce-NTSYNC_IOC_CREATE_MUTEX.patch
│   ├── 0008-ntsync-Introduce-NTSYNC_IOC_PUT_MUTEX.patch
│   ├── 0009-ntsync-Introduce-NTSYNC_IOC_KILL_OWNER.patch
│   ├── 0010-ntsync-Introduce-NTSYNC_IOC_READ_SEM.patch
│   ├── 0011-ntsync-Introduce-NTSYNC_IOC_READ_MUTEX.patch
│   ├── 0012-ntsync-Introduce-NTSYNC_IOC_CREATE_EVENT.patch
│   ├── 0013-ntsync-Introduce-NTSYNC_IOC_SET_EVENT.patch
│   ├── 0014-ntsync-Introduce-NTSYNC_IOC_RESET_EVENT.patch
│   ├── 0015-ntsync-Introduce-NTSYNC_IOC_PULSE_EVENT.patch
│   ├── 0016-ntsync-Introduce-NTSYNC_IOC_READ_EVENT.patch
│   ├── 0017-ntsync-Introduce-alertable-waits.patch
│   ├── 0018-selftests-ntsync-Add-some-tests-for-semaphore-state.patch
│   ├── 0019-selftests-ntsync-Add-some-tests-for-mutex-state.patch
│   ├── 0020-selftests-ntsync-Add-some-tests-for-WINESYNC_IOC_WAI.patch
│   ├── 0021-selftests-ntsync-Add-some-tests-for-WINESYNC_IOC_WAI.patch
│   ├── 0022-selftests-ntsync-Add-some-tests-for-invalid-object-h.patch
│   ├── 0023-selftests-ntsync-Add-some-tests-for-wakeup-signaling.patch
│   ├── 0024-selftests-ntsync-Add-some-tests-for-wakeup-signaling.patch
│   ├── 0025-selftests-ntsync-Add-some-tests-for-manual-reset-eve.patch
│   ├── 0026-selftests-ntsync-Add-some-tests-for-auto-reset-event.patch
│   ├── 0027-selftests-ntsync-Add-some-tests-for-wakeup-signaling.patch
│   ├── 0028-selftests-ntsync-Add-some-tests-for-invalid-object-h.patch
│   ├── 0029-selftests-ntsync-Add-tests-for-alertable-waits.patch
│   ├── 0030-selftests-ntsync-Add-some-tests-for-wakeup-signaling.patch
│   ├── 0031-maintainers-Add-an-entry-for-ntsync.patch
│   └── 0032-docs-ntsync-Add-documentation-for-the-ntsync-uAPI.patch
├── pf-patches
│   └── 0001-wifi-ath11k-Fix-debugfs-by-using-vif_add_debugfs-op.patch
├── pf-patches-v2
│   └── 0001-pf-patches.patch
├── pf-patches-v2-sep
│   ├── 0001-wifi-ath11k-Fix-debugfs-by-using-vif_add_debugfs-op.patch
│   └── 0002-HID-logitech-hidpp-Do-not-flood-kernel-log.patch
├── pf-patches-v3
│   └── 0001-pf-patches.patch
├── pf-patches-v3-sep
│   ├── 0001-wifi-ath11k-Fix-debugfs-by-using-vif_add_debugfs-op.patch
│   ├── 0002-HID-logitech-hidpp-Do-not-flood-kernel-log.patch
│   ├── 0003-mm-thp_get_unmapped_area-must-honour-topdown-prefere.patch
│   ├── 0004-mm-huge_memory-don-t-force-huge-page-alignment-on-32.patch
│   └── 0005-mm-mmap-map-MAP_STACK-to-VM_NOHUGEPAGE.patch
├── prjc-patches
│   └── 0001-PRJC-for-6.7.patch
├── prjc-patches-v2
│   └── 0001-PRJC-for-6.7.patch
├── prjc-patches-v3
│   └── 0001-PRJC-for-6.7.patch
├── sched-ext-patches
│   └── 0001-sched-6.7-Implement-BPF-extensible-scheduler-class.patch
├── sched-ext-patches-all
│   └── 0001-sched-ext-patches.patch
├── sched-ext-patches-sep
│   ├── 0001-sched-6.7-Merge-BPF-changes.patch
│   ├── 0002-cgroup-Implement-cgroup_show_cftypes.patch
│   ├── 0003-sched-Restructure-sched_class-order-sanity-checks-in.patch
│   ├── 0004-sched-Allow-sched_cgroup_fork-to-fail-and-introduce-.patch
│   ├── 0005-sched-Add-sched_class-reweight_task.patch
│   ├── 0006-sched-Add-sched_class-switching_to-and-expose-check_.patch
│   ├── 0007-sched-Factor-out-cgroup-weight-conversion-functions.patch
│   ├── 0008-sched-Expose-css_tg-and-__setscheduler_prio.patch
│   ├── 0009-sched-Enumerate-CPU-cgroup-file-types.patch
│   ├── 0010-sched-Add-reason-to-sched_class-rq_-on-off-line.patch
│   ├── 0011-sched-Add-normal_policy.patch
│   ├── 0012-sched_ext-Add-boilerplate-for-extensible-scheduler-c.patch
│   ├── 0013-sched_ext-Implement-BPF-extensible-scheduler-class.patch
│   ├── 0014-sched_ext-Add-scx_simple-and-scx_example_qmap-exampl.patch
│   ├── 0015-sched_ext-Add-sysrq-S-which-disables-the-BPF-schedul.patch
│   ├── 0016-sched_ext-Implement-runnable-task-stall-watchdog.patch
│   ├── 0017-sched_ext-Allow-BPF-schedulers-to-disallow-specific-.patch
│   ├── 0018-sched_ext-Allow-BPF-schedulers-to-switch-all-eligibl.patch
│   ├── 0019-sched_ext-Print-sched_ext-info-when-dumping-stack.patch
│   ├── 0020-sched_ext-Implement-scx_bpf_kick_cpu-and-task-preemp.patch
│   ├── 0021-sched_ext-Add-a-central-scheduler-which-makes-all-sc.patch
│   ├── 0022-sched_ext-Make-watchdog-handle-ops.dispatch-looping-.patch
│   ├── 0023-sched_ext-Add-task-state-tracking-operations.patch
│   ├── 0024-sched_ext-Implement-tickless-support.patch
│   ├── 0025-sched_ext-Track-tasks-that-are-subjects-of-the-in-fl.patch
│   ├── 0026-sched_ext-Add-cgroup-support.patch
│   ├── 0027-sched_ext-Add-a-cgroup-based-core-scheduling-schedul.patch
│   ├── 0028-sched_ext-Add-a-cgroup-scheduler-which-uses-flattene.patch
│   ├── 0029-sched_ext-Implement-SCX_KICK_WAIT.patch
│   ├── 0030-sched_ext-Implement-sched_ext_ops.cpu_acquire-releas.patch
│   ├── 0031-sched_ext-Implement-sched_ext_ops.cpu_online-offline.patch
│   ├── 0032-sched_ext-Implement-core-sched-support.patch
│   ├── 0033-sched_ext-Add-vtime-ordered-priority-queue-to-dispat.patch
│   ├── 0034-sched_ext-Documentation-scheduler-Document-extensibl.patch
│   ├── 0035-sched_ext-Add-a-basic-userland-vruntime-scheduler.patch
│   ├── 0036-sched_ext-Add-scx_rusty-a-rust-userspace-hybrid-sche.patch
│   ├── 0037-sched_ext-Add-scx_layered-a-highly-configurable-mult.patch
│   ├── 0038-scx-Move-scx_ops_enable_state_str-outside-CONFIG_SCH.patch
│   ├── 0039-scx-Fix-a-straggling-atomic64_set.patch
│   ├── 0040-scx-Use-.bpf.-sub-skel.h-suffix-instead-of-.-sub-ske.patch
│   ├── 0041-scx-Add-s-uSIZE-typedefs-in-scx_common.h.patch
│   ├── 0042-scx_-rusty-layered-Generate-skel-file-in-OUT_DIR.patch
│   ├── 0043-scx_-rusty-layered-ravg_read-is-now-provided-by-scx_.patch
│   ├── 0044-scx_-rusty-layered-Make-naming-and-build-consistent-.patch
│   ├── 0045-scx_-rusty-layered-Run-bindgen-s-clang-with-CLANG_CF.patch
│   ├── 0046-scx_-rusty-layered-Factor-out-build.rs-s-into-scx_ut.patch
│   ├── 0047-scx_-rusty-layered-Follow-scx_utils-BpfBuilder-API-u.patch
│   ├── 0048-scx_-layered-rusty-Minor-build-updates.patch
│   ├── 0049-scx-Move-common-headers-under-include-scx.patch
│   ├── 0050-scx-More-include-path-and-build-updates.patch
│   ├── 0051-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0052-scx-Disable-vtime-ordering-for-internal-DSQs.patch
│   ├── 0053-scx-Enforce-either-or-usage-of-DSQ-FIFO-PRIQ-dispatc.patch
│   ├── 0054-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0055-scx-Remove-now-unused-rb_node-from-first_local_task.patch
│   ├── 0056-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0057-scx-Add-missing-to-error-invocation-in-Makefile.patch
│   ├── 0058-scx-Add-skeleton-for-scx-testing-framework.patch
│   ├── 0059-kernfs-convert-kernfs_idr_lock-to-an-irq-safe-raw-sp.patch
│   ├── 0060-sched_ext-fix-race-in-scx_move_task-with-exiting-tas.patch
│   ├── 0061-scx-Support-direct-dispatching-from-ops.select_cpu.patch
│   ├── 0062-scx-Remove-SCX_ENQ_LOCAL-flag.patch
│   ├── 0063-scx-Add-scx_bpf_select_cpu_dfl-kfunc.patch
│   ├── 0064-scx-Add-selftests-for-new-select_cpu-dispatch-semant.patch
│   ├── 0065-scx-Error-for-a-priq-builtin-DSQ-in-dispatch_enqueue.patch
│   ├── 0066-scx-Add-testcases-for-vtime-dispatching-to-builtin-D.patch
│   ├── 0067-scx-Always-set-task-scx-weight-before-enable.patch
│   ├── 0068-scx-Call-enable-disable-on-entry-exit-to-scx.patch
│   ├── 0069-scx-Rename-prep_enable-and-cancel_enable-add-exit_ta.patch
│   ├── 0070-scx-Add-init_enable_count-testcase.patch
│   ├── 0071-scx-Move-sched_ext_entity.ddsq_id-out-of-modifiable-.patch
│   ├── 0072-scx-Add-missing-DSQ-fallback-test-files.patch
│   ├── 0073-scx-Claim-idle-core-in-scx_select_cpu_dfl-for-nr_cpu.patch
│   └── 0074-scx-Make-select_cpu_dfl-test-a-bit-less-brittle.patch
├── sched-ext-patches-v10
│   └── 0001-sched-6.7-Implement-BPF-extensible-scheduler-class.patch
├── sched-ext-patches-v10-all
│   └── 0001-sched-ext-patches.patch
├── sched-ext-patches-v10-sep
│   ├── 0001-sched-6.7-Merge-BPF-changes.patch
│   ├── 0002-cgroup-Implement-cgroup_show_cftypes.patch
│   ├── 0003-sched-Restructure-sched_class-order-sanity-checks-in.patch
│   ├── 0004-sched-Allow-sched_cgroup_fork-to-fail-and-introduce-.patch
│   ├── 0005-sched-Add-sched_class-reweight_task.patch
│   ├── 0006-sched-Add-sched_class-switching_to-and-expose-check_.patch
│   ├── 0007-sched-Factor-out-cgroup-weight-conversion-functions.patch
│   ├── 0008-sched-Expose-css_tg-and-__setscheduler_prio.patch
│   ├── 0009-sched-Enumerate-CPU-cgroup-file-types.patch
│   ├── 0010-sched-Add-reason-to-sched_class-rq_-on-off-line.patch
│   ├── 0011-sched-Add-normal_policy.patch
│   ├── 0012-sched_ext-Add-boilerplate-for-extensible-scheduler-c.patch
│   ├── 0013-sched_ext-Implement-BPF-extensible-scheduler-class.patch
│   ├── 0014-sched_ext-Add-scx_simple-and-scx_example_qmap-exampl.patch
│   ├── 0015-sched_ext-Add-sysrq-S-which-disables-the-BPF-schedul.patch
│   ├── 0016-sched_ext-Implement-runnable-task-stall-watchdog.patch
│   ├── 0017-sched_ext-Allow-BPF-schedulers-to-disallow-specific-.patch
│   ├── 0018-sched_ext-Allow-BPF-schedulers-to-switch-all-eligibl.patch
│   ├── 0019-sched_ext-Print-sched_ext-info-when-dumping-stack.patch
│   ├── 0020-sched_ext-Implement-scx_bpf_kick_cpu-and-task-preemp.patch
│   ├── 0021-sched_ext-Add-a-central-scheduler-which-makes-all-sc.patch
│   ├── 0022-sched_ext-Make-watchdog-handle-ops.dispatch-looping-.patch
│   ├── 0023-sched_ext-Add-task-state-tracking-operations.patch
│   ├── 0024-sched_ext-Implement-tickless-support.patch
│   ├── 0025-sched_ext-Track-tasks-that-are-subjects-of-the-in-fl.patch
│   ├── 0026-sched_ext-Add-cgroup-support.patch
│   ├── 0027-sched_ext-Add-a-cgroup-based-core-scheduling-schedul.patch
│   ├── 0028-sched_ext-Add-a-cgroup-scheduler-which-uses-flattene.patch
│   ├── 0029-sched_ext-Implement-SCX_KICK_WAIT.patch
│   ├── 0030-sched_ext-Implement-sched_ext_ops.cpu_acquire-releas.patch
│   ├── 0031-sched_ext-Implement-sched_ext_ops.cpu_online-offline.patch
│   ├── 0032-sched_ext-Implement-core-sched-support.patch
│   ├── 0033-sched_ext-Add-vtime-ordered-priority-queue-to-dispat.patch
│   ├── 0034-sched_ext-Documentation-scheduler-Document-extensibl.patch
│   ├── 0035-sched_ext-Add-a-basic-userland-vruntime-scheduler.patch
│   ├── 0036-sched_ext-Add-scx_rusty-a-rust-userspace-hybrid-sche.patch
│   ├── 0037-sched_ext-Add-scx_layered-a-highly-configurable-mult.patch
│   ├── 0038-scx-Move-scx_ops_enable_state_str-outside-CONFIG_SCH.patch
│   ├── 0039-scx-Fix-a-straggling-atomic64_set.patch
│   ├── 0040-scx-Use-.bpf.-sub-skel.h-suffix-instead-of-.-sub-ske.patch
│   ├── 0041-scx-Add-s-uSIZE-typedefs-in-scx_common.h.patch
│   ├── 0042-scx_-rusty-layered-Generate-skel-file-in-OUT_DIR.patch
│   ├── 0043-scx_-rusty-layered-ravg_read-is-now-provided-by-scx_.patch
│   ├── 0044-scx_-rusty-layered-Make-naming-and-build-consistent-.patch
│   ├── 0045-scx_-rusty-layered-Run-bindgen-s-clang-with-CLANG_CF.patch
│   ├── 0046-scx_-rusty-layered-Factor-out-build.rs-s-into-scx_ut.patch
│   ├── 0047-scx_-rusty-layered-Follow-scx_utils-BpfBuilder-API-u.patch
│   ├── 0048-scx_-layered-rusty-Minor-build-updates.patch
│   ├── 0049-scx-Move-common-headers-under-include-scx.patch
│   ├── 0050-scx-More-include-path-and-build-updates.patch
│   ├── 0051-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0052-scx-Disable-vtime-ordering-for-internal-DSQs.patch
│   ├── 0053-scx-Enforce-either-or-usage-of-DSQ-FIFO-PRIQ-dispatc.patch
│   ├── 0054-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0055-scx-Remove-now-unused-rb_node-from-first_local_task.patch
│   ├── 0056-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0057-scx-Add-missing-to-error-invocation-in-Makefile.patch
│   ├── 0058-scx-Add-skeleton-for-scx-testing-framework.patch
│   ├── 0059-kernfs-convert-kernfs_idr_lock-to-an-irq-safe-raw-sp.patch
│   ├── 0060-sched_ext-fix-race-in-scx_move_task-with-exiting-tas.patch
│   ├── 0061-scx-Support-direct-dispatching-from-ops.select_cpu.patch
│   ├── 0062-scx-Remove-SCX_ENQ_LOCAL-flag.patch
│   ├── 0063-scx-Add-scx_bpf_select_cpu_dfl-kfunc.patch
│   ├── 0064-scx-Add-selftests-for-new-select_cpu-dispatch-semant.patch
│   ├── 0065-scx-Error-for-a-priq-builtin-DSQ-in-dispatch_enqueue.patch
│   ├── 0066-scx-Add-testcases-for-vtime-dispatching-to-builtin-D.patch
│   ├── 0067-scx-Always-set-task-scx-weight-before-enable.patch
│   ├── 0068-scx-Call-enable-disable-on-entry-exit-to-scx.patch
│   ├── 0069-scx-Rename-prep_enable-and-cancel_enable-add-exit_ta.patch
│   ├── 0070-scx-Add-init_enable_count-testcase.patch
│   ├── 0071-scx-Move-sched_ext_entity.ddsq_id-out-of-modifiable-.patch
│   ├── 0072-scx-Add-missing-DSQ-fallback-test-files.patch
│   ├── 0073-scx-Claim-idle-core-in-scx_select_cpu_dfl-for-nr_cpu.patch
│   ├── 0074-scx-Make-select_cpu_dfl-test-a-bit-less-brittle.patch
│   ├── 0075-scx-Set-default-slice-for-default-select_cpu-dispatc.patch
│   ├── 0076-scx-Avoid-possible-deadlock-with-cpus_read_lock.patch
│   ├── 0077-scx-Use-READ-WRITE_ONCE-for-scx_watchdog_timeout-tim.patch
│   ├── 0078-scx-Rename-rq-scx.watchdog_list-and-friends-to-runna.patch
│   ├── 0079-scx-Factor-out-scx_ops_bypass-and-s-scx_ops_disablin.patch
│   ├── 0080-scx-Implement-bypass-depth-and-always-bypass-while-d.patch
│   ├── 0081-scx-Implement-turning-off-bypassing.patch
│   ├── 0082-scx-Optimize-scx_ops_bypass.patch
│   ├── 0083-scx-Expose-bypassing-state-to-userland.patch
│   ├── 0084-scx-s-register_ext_kfuncs-scx_init.patch
│   ├── 0085-scx-Bypass-while-PM-operations-are-in-progress.patch
│   ├── 0086-scx-Disabling-scx_bpf_kick_cpu-while-bypassing.patch
│   ├── 0087-Revert-scx-Avoid-possible-deadlock-with-cpus_read_lo.patch
│   ├── 0088-scx-Make-scx_task_state-handling-more-idiomatic.patch
│   ├── 0089-scx-Sync-schedulers-from-SCX-v0.1.5-74923c6cdbc3.patch
│   ├── 0090-scx-Fix-direct-dispatch-for-non-builtin-DSQs.patch
│   ├── 0091-scx-Keep-track-of-enq-flags-in-direct-dispatch.patch
│   ├── 0092-scx-Test-vtime-dispatching-from-ops.select_cpu.patch
│   ├── 0093-scx-Implement-scx-selftests-framework.patch
│   ├── 0094-scx-Convert-remaining-testcases-to-use-new-framework.patch
│   ├── 0095-scx-Update-ddsp-testcases-to-check-for-error-exits.patch
│   ├── 0096-scx-Copy-scx_exit_kind-to-scx_test.h.patch
│   ├── 0097-scx-Narrow-cpus_read_lock-critical-section-in-scx_op.patch
│   ├── 0098-scx-Reorder-scx_fork_rwsem-cpu_hotplug_lock-and-scx_.patch
│   ├── 0099-scx-Sync-from-scx-repo.patch
│   ├── 0100-scx-Add-sys-kernel-sched_ext-interface.patch
│   └── 0101-scx-Replace-sys-kernel-debug-sched-ext-with-tools-sc.patch
├── sched-ext-patches-v11
│   └── 0001-sched-6.7-Implement-BPF-extensible-scheduler-class.patch
├── sched-ext-patches-v11-all
│   └── 0001-sched-ext-patches.patch
├── sched-ext-patches-v11-sep
│   ├── 0001-sched-6.7-Merge-BPF-changes.patch
│   ├── 0002-cgroup-Implement-cgroup_show_cftypes.patch
│   ├── 0003-sched-Restructure-sched_class-order-sanity-checks-in.patch
│   ├── 0004-sched-Allow-sched_cgroup_fork-to-fail-and-introduce-.patch
│   ├── 0005-sched-Add-sched_class-reweight_task.patch
│   ├── 0006-sched-Add-sched_class-switching_to-and-expose-check_.patch
│   ├── 0007-sched-Factor-out-cgroup-weight-conversion-functions.patch
│   ├── 0008-sched-Expose-css_tg-and-__setscheduler_prio.patch
│   ├── 0009-sched-Enumerate-CPU-cgroup-file-types.patch
│   ├── 0010-sched-Add-reason-to-sched_class-rq_-on-off-line.patch
│   ├── 0011-sched-Add-normal_policy.patch
│   ├── 0012-sched_ext-Add-boilerplate-for-extensible-scheduler-c.patch
│   ├── 0013-sched_ext-Implement-BPF-extensible-scheduler-class.patch
│   ├── 0014-sched_ext-Add-scx_simple-and-scx_example_qmap-exampl.patch
│   ├── 0015-sched_ext-Add-sysrq-S-which-disables-the-BPF-schedul.patch
│   ├── 0016-sched_ext-Implement-runnable-task-stall-watchdog.patch
│   ├── 0017-sched_ext-Allow-BPF-schedulers-to-disallow-specific-.patch
│   ├── 0018-sched_ext-Allow-BPF-schedulers-to-switch-all-eligibl.patch
│   ├── 0019-sched_ext-Print-sched_ext-info-when-dumping-stack.patch
│   ├── 0020-sched_ext-Implement-scx_bpf_kick_cpu-and-task-preemp.patch
│   ├── 0021-sched_ext-Add-a-central-scheduler-which-makes-all-sc.patch
│   ├── 0022-sched_ext-Make-watchdog-handle-ops.dispatch-looping-.patch
│   ├── 0023-sched_ext-Add-task-state-tracking-operations.patch
│   ├── 0024-sched_ext-Implement-tickless-support.patch
│   ├── 0025-sched_ext-Track-tasks-that-are-subjects-of-the-in-fl.patch
│   ├── 0026-sched_ext-Add-cgroup-support.patch
│   ├── 0027-sched_ext-Add-a-cgroup-based-core-scheduling-schedul.patch
│   ├── 0028-sched_ext-Add-a-cgroup-scheduler-which-uses-flattene.patch
│   ├── 0029-sched_ext-Implement-SCX_KICK_WAIT.patch
│   ├── 0030-sched_ext-Implement-sched_ext_ops.cpu_acquire-releas.patch
│   ├── 0031-sched_ext-Implement-sched_ext_ops.cpu_online-offline.patch
│   ├── 0032-sched_ext-Implement-core-sched-support.patch
│   ├── 0033-sched_ext-Add-vtime-ordered-priority-queue-to-dispat.patch
│   ├── 0034-sched_ext-Documentation-scheduler-Document-extensibl.patch
│   ├── 0035-sched_ext-Add-a-basic-userland-vruntime-scheduler.patch
│   ├── 0036-sched_ext-Add-scx_rusty-a-rust-userspace-hybrid-sche.patch
│   ├── 0037-sched_ext-Add-scx_layered-a-highly-configurable-mult.patch
│   ├── 0038-scx-Move-scx_ops_enable_state_str-outside-CONFIG_SCH.patch
│   ├── 0039-scx-Fix-a-straggling-atomic64_set.patch
│   ├── 0040-scx-Use-.bpf.-sub-skel.h-suffix-instead-of-.-sub-ske.patch
│   ├── 0041-scx-Add-s-uSIZE-typedefs-in-scx_common.h.patch
│   ├── 0042-scx_-rusty-layered-Generate-skel-file-in-OUT_DIR.patch
│   ├── 0043-scx_-rusty-layered-ravg_read-is-now-provided-by-scx_.patch
│   ├── 0044-scx_-rusty-layered-Make-naming-and-build-consistent-.patch
│   ├── 0045-scx_-rusty-layered-Run-bindgen-s-clang-with-CLANG_CF.patch
│   ├── 0046-scx_-rusty-layered-Factor-out-build.rs-s-into-scx_ut.patch
│   ├── 0047-scx_-rusty-layered-Follow-scx_utils-BpfBuilder-API-u.patch
│   ├── 0048-scx_-layered-rusty-Minor-build-updates.patch
│   ├── 0049-scx-Move-common-headers-under-include-scx.patch
│   ├── 0050-scx-More-include-path-and-build-updates.patch
│   ├── 0051-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0052-scx-Disable-vtime-ordering-for-internal-DSQs.patch
│   ├── 0053-scx-Enforce-either-or-usage-of-DSQ-FIFO-PRIQ-dispatc.patch
│   ├── 0054-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0055-scx-Remove-now-unused-rb_node-from-first_local_task.patch
│   ├── 0056-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0057-scx-Add-missing-to-error-invocation-in-Makefile.patch
│   ├── 0058-scx-Add-skeleton-for-scx-testing-framework.patch
│   ├── 0059-kernfs-convert-kernfs_idr_lock-to-an-irq-safe-raw-sp.patch
│   ├── 0060-sched_ext-fix-race-in-scx_move_task-with-exiting-tas.patch
│   ├── 0061-scx-Support-direct-dispatching-from-ops.select_cpu.patch
│   ├── 0062-scx-Remove-SCX_ENQ_LOCAL-flag.patch
│   ├── 0063-scx-Add-scx_bpf_select_cpu_dfl-kfunc.patch
│   ├── 0064-scx-Add-selftests-for-new-select_cpu-dispatch-semant.patch
│   ├── 0065-scx-Error-for-a-priq-builtin-DSQ-in-dispatch_enqueue.patch
│   ├── 0066-scx-Add-testcases-for-vtime-dispatching-to-builtin-D.patch
│   ├── 0067-scx-Always-set-task-scx-weight-before-enable.patch
│   ├── 0068-scx-Call-enable-disable-on-entry-exit-to-scx.patch
│   ├── 0069-scx-Rename-prep_enable-and-cancel_enable-add-exit_ta.patch
│   ├── 0070-scx-Add-init_enable_count-testcase.patch
│   ├── 0071-scx-Move-sched_ext_entity.ddsq_id-out-of-modifiable-.patch
│   ├── 0072-scx-Add-missing-DSQ-fallback-test-files.patch
│   ├── 0073-scx-Claim-idle-core-in-scx_select_cpu_dfl-for-nr_cpu.patch
│   ├── 0074-scx-Make-select_cpu_dfl-test-a-bit-less-brittle.patch
│   ├── 0075-scx-Set-default-slice-for-default-select_cpu-dispatc.patch
│   ├── 0076-scx-Avoid-possible-deadlock-with-cpus_read_lock.patch
│   ├── 0077-scx-Use-READ-WRITE_ONCE-for-scx_watchdog_timeout-tim.patch
│   ├── 0078-scx-Rename-rq-scx.watchdog_list-and-friends-to-runna.patch
│   ├── 0079-scx-Factor-out-scx_ops_bypass-and-s-scx_ops_disablin.patch
│   ├── 0080-scx-Implement-bypass-depth-and-always-bypass-while-d.patch
│   ├── 0081-scx-Implement-turning-off-bypassing.patch
│   ├── 0082-scx-Optimize-scx_ops_bypass.patch
│   ├── 0083-scx-Expose-bypassing-state-to-userland.patch
│   ├── 0084-scx-s-register_ext_kfuncs-scx_init.patch
│   ├── 0085-scx-Bypass-while-PM-operations-are-in-progress.patch
│   ├── 0086-scx-Disabling-scx_bpf_kick_cpu-while-bypassing.patch
│   ├── 0087-Revert-scx-Avoid-possible-deadlock-with-cpus_read_lo.patch
│   ├── 0088-scx-Make-scx_task_state-handling-more-idiomatic.patch
│   ├── 0089-scx-Sync-schedulers-from-SCX-v0.1.5-74923c6cdbc3.patch
│   ├── 0090-scx-Fix-direct-dispatch-for-non-builtin-DSQs.patch
│   ├── 0091-scx-Keep-track-of-enq-flags-in-direct-dispatch.patch
│   ├── 0092-scx-Test-vtime-dispatching-from-ops.select_cpu.patch
│   ├── 0093-scx-Implement-scx-selftests-framework.patch
│   ├── 0094-scx-Convert-remaining-testcases-to-use-new-framework.patch
│   ├── 0095-scx-Update-ddsp-testcases-to-check-for-error-exits.patch
│   ├── 0096-scx-Copy-scx_exit_kind-to-scx_test.h.patch
│   ├── 0097-scx-Narrow-cpus_read_lock-critical-section-in-scx_op.patch
│   ├── 0098-scx-Reorder-scx_fork_rwsem-cpu_hotplug_lock-and-scx_.patch
│   ├── 0099-scx-Sync-from-scx-repo.patch
│   ├── 0100-scx-Add-sys-kernel-sched_ext-interface.patch
│   ├── 0101-scx-Replace-sys-kernel-debug-sched-ext-with-tools-sc.patch
│   ├── 0102-scx-Make-the-pointer-passing-to-.dispatch-MAYBE_NULL.patch
│   └── 0103-selftests-scx-Check-if-MAYBE_NULL-works-for-the-2nd-.patch
├── sched-ext-patches-v12
│   └── 0001-sched-6.7-Implement-BPF-extensible-scheduler-class.patch
├── sched-ext-patches-v12-all
│   └── 0001-sched-ext-patches.patch
├── sched-ext-patches-v12-sep
│   ├── 0001-sched-6.7-Merge-BPF-changes.patch
│   ├── 0002-cgroup-Implement-cgroup_show_cftypes.patch
│   ├── 0003-sched-Restructure-sched_class-order-sanity-checks-in.patch
│   ├── 0004-sched-Allow-sched_cgroup_fork-to-fail-and-introduce-.patch
│   ├── 0005-sched-Add-sched_class-reweight_task.patch
│   ├── 0006-sched-Add-sched_class-switching_to-and-expose-check_.patch
│   ├── 0007-sched-Factor-out-cgroup-weight-conversion-functions.patch
│   ├── 0008-sched-Expose-css_tg-and-__setscheduler_prio.patch
│   ├── 0009-sched-Enumerate-CPU-cgroup-file-types.patch
│   ├── 0010-sched-Add-reason-to-sched_class-rq_-on-off-line.patch
│   ├── 0011-sched-Add-normal_policy.patch
│   ├── 0012-sched_ext-Add-boilerplate-for-extensible-scheduler-c.patch
│   ├── 0013-sched_ext-Implement-BPF-extensible-scheduler-class.patch
│   ├── 0014-sched_ext-Add-scx_simple-and-scx_example_qmap-exampl.patch
│   ├── 0015-sched_ext-Add-sysrq-S-which-disables-the-BPF-schedul.patch
│   ├── 0016-sched_ext-Implement-runnable-task-stall-watchdog.patch
│   ├── 0017-sched_ext-Allow-BPF-schedulers-to-disallow-specific-.patch
│   ├── 0018-sched_ext-Allow-BPF-schedulers-to-switch-all-eligibl.patch
│   ├── 0019-sched_ext-Print-sched_ext-info-when-dumping-stack.patch
│   ├── 0020-sched_ext-Implement-scx_bpf_kick_cpu-and-task-preemp.patch
│   ├── 0021-sched_ext-Add-a-central-scheduler-which-makes-all-sc.patch
│   ├── 0022-sched_ext-Make-watchdog-handle-ops.dispatch-looping-.patch
│   ├── 0023-sched_ext-Add-task-state-tracking-operations.patch
│   ├── 0024-sched_ext-Implement-tickless-support.patch
│   ├── 0025-sched_ext-Track-tasks-that-are-subjects-of-the-in-fl.patch
│   ├── 0026-sched_ext-Add-cgroup-support.patch
│   ├── 0027-sched_ext-Add-a-cgroup-based-core-scheduling-schedul.patch
│   ├── 0028-sched_ext-Add-a-cgroup-scheduler-which-uses-flattene.patch
│   ├── 0029-sched_ext-Implement-SCX_KICK_WAIT.patch
│   ├── 0030-sched_ext-Implement-sched_ext_ops.cpu_acquire-releas.patch
│   ├── 0031-sched_ext-Implement-sched_ext_ops.cpu_online-offline.patch
│   ├── 0032-sched_ext-Implement-core-sched-support.patch
│   ├── 0033-sched_ext-Add-vtime-ordered-priority-queue-to-dispat.patch
│   ├── 0034-sched_ext-Documentation-scheduler-Document-extensibl.patch
│   ├── 0035-sched_ext-Add-a-basic-userland-vruntime-scheduler.patch
│   ├── 0036-sched_ext-Add-scx_rusty-a-rust-userspace-hybrid-sche.patch
│   ├── 0037-sched_ext-Add-scx_layered-a-highly-configurable-mult.patch
│   ├── 0038-scx-Move-scx_ops_enable_state_str-outside-CONFIG_SCH.patch
│   ├── 0039-scx-Fix-a-straggling-atomic64_set.patch
│   ├── 0040-scx-Use-.bpf.-sub-skel.h-suffix-instead-of-.-sub-ske.patch
│   ├── 0041-scx-Add-s-uSIZE-typedefs-in-scx_common.h.patch
│   ├── 0042-scx_-rusty-layered-Generate-skel-file-in-OUT_DIR.patch
│   ├── 0043-scx_-rusty-layered-ravg_read-is-now-provided-by-scx_.patch
│   ├── 0044-scx_-rusty-layered-Make-naming-and-build-consistent-.patch
│   ├── 0045-scx_-rusty-layered-Run-bindgen-s-clang-with-CLANG_CF.patch
│   ├── 0046-scx_-rusty-layered-Factor-out-build.rs-s-into-scx_ut.patch
│   ├── 0047-scx_-rusty-layered-Follow-scx_utils-BpfBuilder-API-u.patch
│   ├── 0048-scx_-layered-rusty-Minor-build-updates.patch
│   ├── 0049-scx-Move-common-headers-under-include-scx.patch
│   ├── 0050-scx-More-include-path-and-build-updates.patch
│   ├── 0051-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0052-scx-Disable-vtime-ordering-for-internal-DSQs.patch
│   ├── 0053-scx-Enforce-either-or-usage-of-DSQ-FIFO-PRIQ-dispatc.patch
│   ├── 0054-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0055-scx-Remove-now-unused-rb_node-from-first_local_task.patch
│   ├── 0056-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0057-scx-Add-missing-to-error-invocation-in-Makefile.patch
│   ├── 0058-scx-Add-skeleton-for-scx-testing-framework.patch
│   ├── 0059-kernfs-convert-kernfs_idr_lock-to-an-irq-safe-raw-sp.patch
│   ├── 0060-sched_ext-fix-race-in-scx_move_task-with-exiting-tas.patch
│   ├── 0061-scx-Support-direct-dispatching-from-ops.select_cpu.patch
│   ├── 0062-scx-Remove-SCX_ENQ_LOCAL-flag.patch
│   ├── 0063-scx-Add-scx_bpf_select_cpu_dfl-kfunc.patch
│   ├── 0064-scx-Add-selftests-for-new-select_cpu-dispatch-semant.patch
│   ├── 0065-scx-Error-for-a-priq-builtin-DSQ-in-dispatch_enqueue.patch
│   ├── 0066-scx-Add-testcases-for-vtime-dispatching-to-builtin-D.patch
│   ├── 0067-scx-Always-set-task-scx-weight-before-enable.patch
│   ├── 0068-scx-Call-enable-disable-on-entry-exit-to-scx.patch
│   ├── 0069-scx-Rename-prep_enable-and-cancel_enable-add-exit_ta.patch
│   ├── 0070-scx-Add-init_enable_count-testcase.patch
│   ├── 0071-scx-Move-sched_ext_entity.ddsq_id-out-of-modifiable-.patch
│   ├── 0072-scx-Add-missing-DSQ-fallback-test-files.patch
│   ├── 0073-scx-Claim-idle-core-in-scx_select_cpu_dfl-for-nr_cpu.patch
│   ├── 0074-scx-Make-select_cpu_dfl-test-a-bit-less-brittle.patch
│   ├── 0075-scx-Set-default-slice-for-default-select_cpu-dispatc.patch
│   ├── 0076-scx-Avoid-possible-deadlock-with-cpus_read_lock.patch
│   ├── 0077-scx-Use-READ-WRITE_ONCE-for-scx_watchdog_timeout-tim.patch
│   ├── 0078-scx-Rename-rq-scx.watchdog_list-and-friends-to-runna.patch
│   ├── 0079-scx-Factor-out-scx_ops_bypass-and-s-scx_ops_disablin.patch
│   ├── 0080-scx-Implement-bypass-depth-and-always-bypass-while-d.patch
│   ├── 0081-scx-Implement-turning-off-bypassing.patch
│   ├── 0082-scx-Optimize-scx_ops_bypass.patch
│   ├── 0083-scx-Expose-bypassing-state-to-userland.patch
│   ├── 0084-scx-s-register_ext_kfuncs-scx_init.patch
│   ├── 0085-scx-Bypass-while-PM-operations-are-in-progress.patch
│   ├── 0086-scx-Disabling-scx_bpf_kick_cpu-while-bypassing.patch
│   ├── 0087-Revert-scx-Avoid-possible-deadlock-with-cpus_read_lo.patch
│   ├── 0088-scx-Make-scx_task_state-handling-more-idiomatic.patch
│   ├── 0089-scx-Sync-schedulers-from-SCX-v0.1.5-74923c6cdbc3.patch
│   ├── 0090-scx-Fix-direct-dispatch-for-non-builtin-DSQs.patch
│   ├── 0091-scx-Keep-track-of-enq-flags-in-direct-dispatch.patch
│   ├── 0092-scx-Test-vtime-dispatching-from-ops.select_cpu.patch
│   ├── 0093-scx-Implement-scx-selftests-framework.patch
│   ├── 0094-scx-Convert-remaining-testcases-to-use-new-framework.patch
│   ├── 0095-scx-Update-ddsp-testcases-to-check-for-error-exits.patch
│   ├── 0096-scx-Copy-scx_exit_kind-to-scx_test.h.patch
│   ├── 0097-scx-Narrow-cpus_read_lock-critical-section-in-scx_op.patch
│   ├── 0098-scx-Reorder-scx_fork_rwsem-cpu_hotplug_lock-and-scx_.patch
│   ├── 0099-scx-Sync-from-scx-repo.patch
│   ├── 0100-scx-Add-sys-kernel-sched_ext-interface.patch
│   ├── 0101-scx-Replace-sys-kernel-debug-sched-ext-with-tools-sc.patch
│   ├── 0102-scx-Make-the-pointer-passing-to-.dispatch-MAYBE_NULL.patch
│   ├── 0103-selftests-scx-Check-if-MAYBE_NULL-works-for-the-2nd-.patch
│   └── 0104-scx-Fix-a-couple-follow-ups-to-recent-struct_ops-cha.patch
├── sched-ext-patches-v13
│   └── 0001-sched-6.7-Implement-BPF-extensible-scheduler-class.patch
├── sched-ext-patches-v13-all
│   └── 0001-sched-ext-patches.patch
├── sched-ext-patches-v13-sep
│   ├── 0001-sched-6.7-Merge-BPF-changes.patch
│   ├── 0002-cgroup-Implement-cgroup_show_cftypes.patch
│   ├── 0003-sched-Restructure-sched_class-order-sanity-checks-in.patch
│   ├── 0004-sched-Allow-sched_cgroup_fork-to-fail-and-introduce-.patch
│   ├── 0005-sched-Add-sched_class-reweight_task.patch
│   ├── 0006-sched-Add-sched_class-switching_to-and-expose-check_.patch
│   ├── 0007-sched-Factor-out-cgroup-weight-conversion-functions.patch
│   ├── 0008-sched-Expose-css_tg-and-__setscheduler_prio.patch
│   ├── 0009-sched-Enumerate-CPU-cgroup-file-types.patch
│   ├── 0010-sched-Add-reason-to-sched_class-rq_-on-off-line.patch
│   ├── 0011-sched-Add-normal_policy.patch
│   ├── 0012-sched_ext-Add-boilerplate-for-extensible-scheduler-c.patch
│   ├── 0013-sched_ext-Implement-BPF-extensible-scheduler-class.patch
│   ├── 0014-sched_ext-Add-scx_simple-and-scx_example_qmap-exampl.patch
│   ├── 0015-sched_ext-Add-sysrq-S-which-disables-the-BPF-schedul.patch
│   ├── 0016-sched_ext-Implement-runnable-task-stall-watchdog.patch
│   ├── 0017-sched_ext-Allow-BPF-schedulers-to-disallow-specific-.patch
│   ├── 0018-sched_ext-Allow-BPF-schedulers-to-switch-all-eligibl.patch
│   ├── 0019-sched_ext-Print-sched_ext-info-when-dumping-stack.patch
│   ├── 0020-sched_ext-Implement-scx_bpf_kick_cpu-and-task-preemp.patch
│   ├── 0021-sched_ext-Add-a-central-scheduler-which-makes-all-sc.patch
│   ├── 0022-sched_ext-Make-watchdog-handle-ops.dispatch-looping-.patch
│   ├── 0023-sched_ext-Add-task-state-tracking-operations.patch
│   ├── 0024-sched_ext-Implement-tickless-support.patch
│   ├── 0025-sched_ext-Track-tasks-that-are-subjects-of-the-in-fl.patch
│   ├── 0026-sched_ext-Add-cgroup-support.patch
│   ├── 0027-sched_ext-Add-a-cgroup-based-core-scheduling-schedul.patch
│   ├── 0028-sched_ext-Add-a-cgroup-scheduler-which-uses-flattene.patch
│   ├── 0029-sched_ext-Implement-SCX_KICK_WAIT.patch
│   ├── 0030-sched_ext-Implement-sched_ext_ops.cpu_acquire-releas.patch
│   ├── 0031-sched_ext-Implement-sched_ext_ops.cpu_online-offline.patch
│   ├── 0032-sched_ext-Implement-core-sched-support.patch
│   ├── 0033-sched_ext-Add-vtime-ordered-priority-queue-to-dispat.patch
│   ├── 0034-sched_ext-Documentation-scheduler-Document-extensibl.patch
│   ├── 0035-sched_ext-Add-a-basic-userland-vruntime-scheduler.patch
│   ├── 0036-sched_ext-Add-scx_rusty-a-rust-userspace-hybrid-sche.patch
│   ├── 0037-sched_ext-Add-scx_layered-a-highly-configurable-mult.patch
│   ├── 0038-scx-Move-scx_ops_enable_state_str-outside-CONFIG_SCH.patch
│   ├── 0039-scx-Fix-a-straggling-atomic64_set.patch
│   ├── 0040-scx-Use-.bpf.-sub-skel.h-suffix-instead-of-.-sub-ske.patch
│   ├── 0041-scx-Add-s-uSIZE-typedefs-in-scx_common.h.patch
│   ├── 0042-scx_-rusty-layered-Generate-skel-file-in-OUT_DIR.patch
│   ├── 0043-scx_-rusty-layered-ravg_read-is-now-provided-by-scx_.patch
│   ├── 0044-scx_-rusty-layered-Make-naming-and-build-consistent-.patch
│   ├── 0045-scx_-rusty-layered-Run-bindgen-s-clang-with-CLANG_CF.patch
│   ├── 0046-scx_-rusty-layered-Factor-out-build.rs-s-into-scx_ut.patch
│   ├── 0047-scx_-rusty-layered-Follow-scx_utils-BpfBuilder-API-u.patch
│   ├── 0048-scx_-layered-rusty-Minor-build-updates.patch
│   ├── 0049-scx-Move-common-headers-under-include-scx.patch
│   ├── 0050-scx-More-include-path-and-build-updates.patch
│   ├── 0051-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0052-scx-Disable-vtime-ordering-for-internal-DSQs.patch
│   ├── 0053-scx-Enforce-either-or-usage-of-DSQ-FIFO-PRIQ-dispatc.patch
│   ├── 0054-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0055-scx-Remove-now-unused-rb_node-from-first_local_task.patch
│   ├── 0056-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0057-scx-Add-missing-to-error-invocation-in-Makefile.patch
│   ├── 0058-scx-Add-skeleton-for-scx-testing-framework.patch
│   ├── 0059-sched_ext-fix-race-in-scx_move_task-with-exiting-tas.patch
│   ├── 0060-scx-Support-direct-dispatching-from-ops.select_cpu.patch
│   ├── 0061-scx-Remove-SCX_ENQ_LOCAL-flag.patch
│   ├── 0062-scx-Add-scx_bpf_select_cpu_dfl-kfunc.patch
│   ├── 0063-scx-Add-selftests-for-new-select_cpu-dispatch-semant.patch
│   ├── 0064-scx-Error-for-a-priq-builtin-DSQ-in-dispatch_enqueue.patch
│   ├── 0065-scx-Add-testcases-for-vtime-dispatching-to-builtin-D.patch
│   ├── 0066-scx-Always-set-task-scx-weight-before-enable.patch
│   ├── 0067-scx-Call-enable-disable-on-entry-exit-to-scx.patch
│   ├── 0068-scx-Rename-prep_enable-and-cancel_enable-add-exit_ta.patch
│   ├── 0069-scx-Add-init_enable_count-testcase.patch
│   ├── 0070-scx-Move-sched_ext_entity.ddsq_id-out-of-modifiable-.patch
│   ├── 0071-scx-Add-missing-DSQ-fallback-test-files.patch
│   ├── 0072-scx-Claim-idle-core-in-scx_select_cpu_dfl-for-nr_cpu.patch
│   ├── 0073-scx-Make-select_cpu_dfl-test-a-bit-less-brittle.patch
│   ├── 0074-scx-Set-default-slice-for-default-select_cpu-dispatc.patch
│   ├── 0075-scx-Avoid-possible-deadlock-with-cpus_read_lock.patch
│   ├── 0076-scx-Use-READ-WRITE_ONCE-for-scx_watchdog_timeout-tim.patch
│   ├── 0077-scx-Rename-rq-scx.watchdog_list-and-friends-to-runna.patch
│   ├── 0078-scx-Factor-out-scx_ops_bypass-and-s-scx_ops_disablin.patch
│   ├── 0079-scx-Implement-bypass-depth-and-always-bypass-while-d.patch
│   ├── 0080-scx-Implement-turning-off-bypassing.patch
│   ├── 0081-scx-Optimize-scx_ops_bypass.patch
│   ├── 0082-scx-Expose-bypassing-state-to-userland.patch
│   ├── 0083-scx-s-register_ext_kfuncs-scx_init.patch
│   ├── 0084-scx-Bypass-while-PM-operations-are-in-progress.patch
│   ├── 0085-scx-Disabling-scx_bpf_kick_cpu-while-bypassing.patch
│   ├── 0086-Revert-scx-Avoid-possible-deadlock-with-cpus_read_lo.patch
│   ├── 0087-scx-Make-scx_task_state-handling-more-idiomatic.patch
│   ├── 0088-scx-Sync-schedulers-from-SCX-v0.1.5-74923c6cdbc3.patch
│   ├── 0089-scx-Fix-direct-dispatch-for-non-builtin-DSQs.patch
│   ├── 0090-scx-Keep-track-of-enq-flags-in-direct-dispatch.patch
│   ├── 0091-scx-Test-vtime-dispatching-from-ops.select_cpu.patch
│   ├── 0092-scx-Implement-scx-selftests-framework.patch
│   ├── 0093-scx-Convert-remaining-testcases-to-use-new-framework.patch
│   ├── 0094-scx-Update-ddsp-testcases-to-check-for-error-exits.patch
│   ├── 0095-scx-Copy-scx_exit_kind-to-scx_test.h.patch
│   ├── 0096-scx-Narrow-cpus_read_lock-critical-section-in-scx_op.patch
│   ├── 0097-scx-Reorder-scx_fork_rwsem-cpu_hotplug_lock-and-scx_.patch
│   ├── 0098-scx-Sync-from-scx-repo.patch
│   ├── 0099-scx-Add-sys-kernel-sched_ext-interface.patch
│   ├── 0100-scx-Replace-sys-kernel-debug-sched-ext-with-tools-sc.patch
│   ├── 0101-scx-Make-the-pointer-passing-to-.dispatch-MAYBE_NULL.patch
│   ├── 0102-selftests-scx-Check-if-MAYBE_NULL-works-for-the-2nd-.patch
│   └── 0103-scx-Fix-a-couple-follow-ups-to-recent-struct_ops-cha.patch
├── sched-ext-patches-v14
│   └── 0001-sched-6.7-Implement-BPF-extensible-scheduler-class.patch
├── sched-ext-patches-v14-all
│   └── 0001-sched-ext-patches.patch
├── sched-ext-patches-v14-sep
│   ├── 0001-sched-6.7-Merge-BPF-changes.patch
│   ├── 0002-cgroup-Implement-cgroup_show_cftypes.patch
│   ├── 0003-sched-Restructure-sched_class-order-sanity-checks-in.patch
│   ├── 0004-sched-Allow-sched_cgroup_fork-to-fail-and-introduce-.patch
│   ├── 0005-sched-Add-sched_class-reweight_task.patch
│   ├── 0006-sched-Add-sched_class-switching_to-and-expose-check_.patch
│   ├── 0007-sched-Factor-out-cgroup-weight-conversion-functions.patch
│   ├── 0008-sched-Expose-css_tg-and-__setscheduler_prio.patch
│   ├── 0009-sched-Enumerate-CPU-cgroup-file-types.patch
│   ├── 0010-sched-Add-reason-to-sched_class-rq_-on-off-line.patch
│   ├── 0011-sched-Add-normal_policy.patch
│   ├── 0012-sched_ext-Add-boilerplate-for-extensible-scheduler-c.patch
│   ├── 0013-sched_ext-Implement-BPF-extensible-scheduler-class.patch
│   ├── 0014-sched_ext-Add-scx_simple-and-scx_example_qmap-exampl.patch
│   ├── 0015-sched_ext-Add-sysrq-S-which-disables-the-BPF-schedul.patch
│   ├── 0016-sched_ext-Implement-runnable-task-stall-watchdog.patch
│   ├── 0017-sched_ext-Allow-BPF-schedulers-to-disallow-specific-.patch
│   ├── 0018-sched_ext-Allow-BPF-schedulers-to-switch-all-eligibl.patch
│   ├── 0019-sched_ext-Print-sched_ext-info-when-dumping-stack.patch
│   ├── 0020-sched_ext-Implement-scx_bpf_kick_cpu-and-task-preemp.patch
│   ├── 0021-sched_ext-Add-a-central-scheduler-which-makes-all-sc.patch
│   ├── 0022-sched_ext-Make-watchdog-handle-ops.dispatch-looping-.patch
│   ├── 0023-sched_ext-Add-task-state-tracking-operations.patch
│   ├── 0024-sched_ext-Implement-tickless-support.patch
│   ├── 0025-sched_ext-Track-tasks-that-are-subjects-of-the-in-fl.patch
│   ├── 0026-sched_ext-Add-cgroup-support.patch
│   ├── 0027-sched_ext-Add-a-cgroup-based-core-scheduling-schedul.patch
│   ├── 0028-sched_ext-Add-a-cgroup-scheduler-which-uses-flattene.patch
│   ├── 0029-sched_ext-Implement-SCX_KICK_WAIT.patch
│   ├── 0030-sched_ext-Implement-sched_ext_ops.cpu_acquire-releas.patch
│   ├── 0031-sched_ext-Implement-sched_ext_ops.cpu_online-offline.patch
│   ├── 0032-sched_ext-Implement-core-sched-support.patch
│   ├── 0033-sched_ext-Add-vtime-ordered-priority-queue-to-dispat.patch
│   ├── 0034-sched_ext-Documentation-scheduler-Document-extensibl.patch
│   ├── 0035-sched_ext-Add-a-basic-userland-vruntime-scheduler.patch
│   ├── 0036-sched_ext-Add-scx_rusty-a-rust-userspace-hybrid-sche.patch
│   ├── 0037-sched_ext-Add-scx_layered-a-highly-configurable-mult.patch
│   ├── 0038-scx-Move-scx_ops_enable_state_str-outside-CONFIG_SCH.patch
│   ├── 0039-scx-Fix-a-straggling-atomic64_set.patch
│   ├── 0040-scx-Use-.bpf.-sub-skel.h-suffix-instead-of-.-sub-ske.patch
│   ├── 0041-scx-Add-s-uSIZE-typedefs-in-scx_common.h.patch
│   ├── 0042-scx_-rusty-layered-Generate-skel-file-in-OUT_DIR.patch
│   ├── 0043-scx_-rusty-layered-ravg_read-is-now-provided-by-scx_.patch
│   ├── 0044-scx_-rusty-layered-Make-naming-and-build-consistent-.patch
│   ├── 0045-scx_-rusty-layered-Run-bindgen-s-clang-with-CLANG_CF.patch
│   ├── 0046-scx_-rusty-layered-Factor-out-build.rs-s-into-scx_ut.patch
│   ├── 0047-scx_-rusty-layered-Follow-scx_utils-BpfBuilder-API-u.patch
│   ├── 0048-scx_-layered-rusty-Minor-build-updates.patch
│   ├── 0049-scx-Move-common-headers-under-include-scx.patch
│   ├── 0050-scx-More-include-path-and-build-updates.patch
│   ├── 0051-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0052-scx-Disable-vtime-ordering-for-internal-DSQs.patch
│   ├── 0053-scx-Enforce-either-or-usage-of-DSQ-FIFO-PRIQ-dispatc.patch
│   ├── 0054-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0055-scx-Remove-now-unused-rb_node-from-first_local_task.patch
│   ├── 0056-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0057-scx-Add-missing-to-error-invocation-in-Makefile.patch
│   ├── 0058-scx-Add-skeleton-for-scx-testing-framework.patch
│   ├── 0059-sched_ext-fix-race-in-scx_move_task-with-exiting-tas.patch
│   ├── 0060-scx-Support-direct-dispatching-from-ops.select_cpu.patch
│   ├── 0061-scx-Remove-SCX_ENQ_LOCAL-flag.patch
│   ├── 0062-scx-Add-scx_bpf_select_cpu_dfl-kfunc.patch
│   ├── 0063-scx-Add-selftests-for-new-select_cpu-dispatch-semant.patch
│   ├── 0064-scx-Error-for-a-priq-builtin-DSQ-in-dispatch_enqueue.patch
│   ├── 0065-scx-Add-testcases-for-vtime-dispatching-to-builtin-D.patch
│   ├── 0066-scx-Always-set-task-scx-weight-before-enable.patch
│   ├── 0067-scx-Call-enable-disable-on-entry-exit-to-scx.patch
│   ├── 0068-scx-Rename-prep_enable-and-cancel_enable-add-exit_ta.patch
│   ├── 0069-scx-Add-init_enable_count-testcase.patch
│   ├── 0070-scx-Move-sched_ext_entity.ddsq_id-out-of-modifiable-.patch
│   ├── 0071-scx-Add-missing-DSQ-fallback-test-files.patch
│   ├── 0072-scx-Claim-idle-core-in-scx_select_cpu_dfl-for-nr_cpu.patch
│   ├── 0073-scx-Make-select_cpu_dfl-test-a-bit-less-brittle.patch
│   ├── 0074-scx-Set-default-slice-for-default-select_cpu-dispatc.patch
│   ├── 0075-scx-Avoid-possible-deadlock-with-cpus_read_lock.patch
│   ├── 0076-scx-Use-READ-WRITE_ONCE-for-scx_watchdog_timeout-tim.patch
│   ├── 0077-scx-Rename-rq-scx.watchdog_list-and-friends-to-runna.patch
│   ├── 0078-scx-Factor-out-scx_ops_bypass-and-s-scx_ops_disablin.patch
│   ├── 0079-scx-Implement-bypass-depth-and-always-bypass-while-d.patch
│   ├── 0080-scx-Implement-turning-off-bypassing.patch
│   ├── 0081-scx-Optimize-scx_ops_bypass.patch
│   ├── 0082-scx-Expose-bypassing-state-to-userland.patch
│   ├── 0083-scx-s-register_ext_kfuncs-scx_init.patch
│   ├── 0084-scx-Bypass-while-PM-operations-are-in-progress.patch
│   ├── 0085-scx-Disabling-scx_bpf_kick_cpu-while-bypassing.patch
│   ├── 0086-Revert-scx-Avoid-possible-deadlock-with-cpus_read_lo.patch
│   ├── 0087-scx-Make-scx_task_state-handling-more-idiomatic.patch
│   ├── 0088-scx-Sync-schedulers-from-SCX-v0.1.5-74923c6cdbc3.patch
│   ├── 0089-scx-Fix-direct-dispatch-for-non-builtin-DSQs.patch
│   ├── 0090-scx-Keep-track-of-enq-flags-in-direct-dispatch.patch
│   ├── 0091-scx-Test-vtime-dispatching-from-ops.select_cpu.patch
│   ├── 0092-scx-Implement-scx-selftests-framework.patch
│   ├── 0093-scx-Convert-remaining-testcases-to-use-new-framework.patch
│   ├── 0094-scx-Update-ddsp-testcases-to-check-for-error-exits.patch
│   ├── 0095-scx-Copy-scx_exit_kind-to-scx_test.h.patch
│   ├── 0096-scx-Narrow-cpus_read_lock-critical-section-in-scx_op.patch
│   ├── 0097-scx-Reorder-scx_fork_rwsem-cpu_hotplug_lock-and-scx_.patch
│   ├── 0098-scx-Sync-from-scx-repo.patch
│   ├── 0099-scx-Add-sys-kernel-sched_ext-interface.patch
│   ├── 0100-scx-Replace-sys-kernel-debug-sched-ext-with-tools-sc.patch
│   ├── 0101-scx-Make-the-pointer-passing-to-.dispatch-MAYBE_NULL.patch
│   ├── 0102-selftests-scx-Check-if-MAYBE_NULL-works-for-the-2nd-.patch
│   ├── 0103-scx-Fix-a-couple-follow-ups-to-recent-struct_ops-cha.patch
│   ├── 0104-scx-Make-scx_exit_info-fields-dynamically-allocated.patch
│   ├── 0105-scx-Misc-scx_exit_info-related-updates.patch
│   └── 0106-scx-Dump-debug-info-after-an-abort.patch
├── sched-ext-patches-v15
│   └── 0001-sched-6.7-Implement-BPF-extensible-scheduler-class.patch
├── sched-ext-patches-v15-all
│   └── 0001-sched-ext-patches.patch
├── sched-ext-patches-v15-sep
│   ├── 0001-sched-6.7-Merge-BPF-changes.patch
│   ├── 0002-cgroup-Implement-cgroup_show_cftypes.patch
│   ├── 0003-sched-Restructure-sched_class-order-sanity-checks-in.patch
│   ├── 0004-sched-Allow-sched_cgroup_fork-to-fail-and-introduce-.patch
│   ├── 0005-sched-Add-sched_class-reweight_task.patch
│   ├── 0006-sched-Add-sched_class-switching_to-and-expose-check_.patch
│   ├── 0007-sched-Factor-out-cgroup-weight-conversion-functions.patch
│   ├── 0008-sched-Expose-css_tg-and-__setscheduler_prio.patch
│   ├── 0009-sched-Enumerate-CPU-cgroup-file-types.patch
│   ├── 0010-sched-Add-reason-to-sched_class-rq_-on-off-line.patch
│   ├── 0011-sched-Add-normal_policy.patch
│   ├── 0012-sched_ext-Add-boilerplate-for-extensible-scheduler-c.patch
│   ├── 0013-sched_ext-Implement-BPF-extensible-scheduler-class.patch
│   ├── 0014-sched_ext-Add-scx_simple-and-scx_example_qmap-exampl.patch
│   ├── 0015-sched_ext-Add-sysrq-S-which-disables-the-BPF-schedul.patch
│   ├── 0016-sched_ext-Implement-runnable-task-stall-watchdog.patch
│   ├── 0017-sched_ext-Allow-BPF-schedulers-to-disallow-specific-.patch
│   ├── 0018-sched_ext-Allow-BPF-schedulers-to-switch-all-eligibl.patch
│   ├── 0019-sched_ext-Print-sched_ext-info-when-dumping-stack.patch
│   ├── 0020-sched_ext-Implement-scx_bpf_kick_cpu-and-task-preemp.patch
│   ├── 0021-sched_ext-Add-a-central-scheduler-which-makes-all-sc.patch
│   ├── 0022-sched_ext-Make-watchdog-handle-ops.dispatch-looping-.patch
│   ├── 0023-sched_ext-Add-task-state-tracking-operations.patch
│   ├── 0024-sched_ext-Implement-tickless-support.patch
│   ├── 0025-sched_ext-Track-tasks-that-are-subjects-of-the-in-fl.patch
│   ├── 0026-sched_ext-Add-cgroup-support.patch
│   ├── 0027-sched_ext-Add-a-cgroup-based-core-scheduling-schedul.patch
│   ├── 0028-sched_ext-Add-a-cgroup-scheduler-which-uses-flattene.patch
│   ├── 0029-sched_ext-Implement-SCX_KICK_WAIT.patch
│   ├── 0030-sched_ext-Implement-sched_ext_ops.cpu_acquire-releas.patch
│   ├── 0031-sched_ext-Implement-sched_ext_ops.cpu_online-offline.patch
│   ├── 0032-sched_ext-Implement-core-sched-support.patch
│   ├── 0033-sched_ext-Add-vtime-ordered-priority-queue-to-dispat.patch
│   ├── 0034-sched_ext-Documentation-scheduler-Document-extensibl.patch
│   ├── 0035-sched_ext-Add-a-basic-userland-vruntime-scheduler.patch
│   ├── 0036-sched_ext-Add-scx_rusty-a-rust-userspace-hybrid-sche.patch
│   ├── 0037-sched_ext-Add-scx_layered-a-highly-configurable-mult.patch
│   ├── 0038-scx-Move-scx_ops_enable_state_str-outside-CONFIG_SCH.patch
│   ├── 0039-scx-Fix-a-straggling-atomic64_set.patch
│   ├── 0040-scx-Use-.bpf.-sub-skel.h-suffix-instead-of-.-sub-ske.patch
│   ├── 0041-scx-Add-s-uSIZE-typedefs-in-scx_common.h.patch
│   ├── 0042-scx_-rusty-layered-Generate-skel-file-in-OUT_DIR.patch
│   ├── 0043-scx_-rusty-layered-ravg_read-is-now-provided-by-scx_.patch
│   ├── 0044-scx_-rusty-layered-Make-naming-and-build-consistent-.patch
│   ├── 0045-scx_-rusty-layered-Run-bindgen-s-clang-with-CLANG_CF.patch
│   ├── 0046-scx_-rusty-layered-Factor-out-build.rs-s-into-scx_ut.patch
│   ├── 0047-scx_-rusty-layered-Follow-scx_utils-BpfBuilder-API-u.patch
│   ├── 0048-scx_-layered-rusty-Minor-build-updates.patch
│   ├── 0049-scx-Move-common-headers-under-include-scx.patch
│   ├── 0050-scx-More-include-path-and-build-updates.patch
│   ├── 0051-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0052-scx-Disable-vtime-ordering-for-internal-DSQs.patch
│   ├── 0053-scx-Enforce-either-or-usage-of-DSQ-FIFO-PRIQ-dispatc.patch
│   ├── 0054-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0055-scx-Remove-now-unused-rb_node-from-first_local_task.patch
│   ├── 0056-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0057-scx-Add-missing-to-error-invocation-in-Makefile.patch
│   ├── 0058-scx-Add-skeleton-for-scx-testing-framework.patch
│   ├── 0059-sched_ext-fix-race-in-scx_move_task-with-exiting-tas.patch
│   ├── 0060-scx-Support-direct-dispatching-from-ops.select_cpu.patch
│   ├── 0061-scx-Remove-SCX_ENQ_LOCAL-flag.patch
│   ├── 0062-scx-Add-scx_bpf_select_cpu_dfl-kfunc.patch
│   ├── 0063-scx-Add-selftests-for-new-select_cpu-dispatch-semant.patch
│   ├── 0064-scx-Error-for-a-priq-builtin-DSQ-in-dispatch_enqueue.patch
│   ├── 0065-scx-Add-testcases-for-vtime-dispatching-to-builtin-D.patch
│   ├── 0066-scx-Always-set-task-scx-weight-before-enable.patch
│   ├── 0067-scx-Call-enable-disable-on-entry-exit-to-scx.patch
│   ├── 0068-scx-Rename-prep_enable-and-cancel_enable-add-exit_ta.patch
│   ├── 0069-scx-Add-init_enable_count-testcase.patch
│   ├── 0070-scx-Move-sched_ext_entity.ddsq_id-out-of-modifiable-.patch
│   ├── 0071-scx-Add-missing-DSQ-fallback-test-files.patch
│   ├── 0072-scx-Claim-idle-core-in-scx_select_cpu_dfl-for-nr_cpu.patch
│   ├── 0073-scx-Make-select_cpu_dfl-test-a-bit-less-brittle.patch
│   ├── 0074-scx-Set-default-slice-for-default-select_cpu-dispatc.patch
│   ├── 0075-scx-Avoid-possible-deadlock-with-cpus_read_lock.patch
│   ├── 0076-scx-Use-READ-WRITE_ONCE-for-scx_watchdog_timeout-tim.patch
│   ├── 0077-scx-Rename-rq-scx.watchdog_list-and-friends-to-runna.patch
│   ├── 0078-scx-Factor-out-scx_ops_bypass-and-s-scx_ops_disablin.patch
│   ├── 0079-scx-Implement-bypass-depth-and-always-bypass-while-d.patch
│   ├── 0080-scx-Implement-turning-off-bypassing.patch
│   ├── 0081-scx-Optimize-scx_ops_bypass.patch
│   ├── 0082-scx-Expose-bypassing-state-to-userland.patch
│   ├── 0083-scx-s-register_ext_kfuncs-scx_init.patch
│   ├── 0084-scx-Bypass-while-PM-operations-are-in-progress.patch
│   ├── 0085-scx-Disabling-scx_bpf_kick_cpu-while-bypassing.patch
│   ├── 0086-Revert-scx-Avoid-possible-deadlock-with-cpus_read_lo.patch
│   ├── 0087-scx-Make-scx_task_state-handling-more-idiomatic.patch
│   ├── 0088-scx-Sync-schedulers-from-SCX-v0.1.5-74923c6cdbc3.patch
│   ├── 0089-scx-Fix-direct-dispatch-for-non-builtin-DSQs.patch
│   ├── 0090-scx-Keep-track-of-enq-flags-in-direct-dispatch.patch
│   ├── 0091-scx-Test-vtime-dispatching-from-ops.select_cpu.patch
│   ├── 0092-scx-Implement-scx-selftests-framework.patch
│   ├── 0093-scx-Convert-remaining-testcases-to-use-new-framework.patch
│   ├── 0094-scx-Update-ddsp-testcases-to-check-for-error-exits.patch
│   ├── 0095-scx-Copy-scx_exit_kind-to-scx_test.h.patch
│   ├── 0096-scx-Narrow-cpus_read_lock-critical-section-in-scx_op.patch
│   ├── 0097-scx-Reorder-scx_fork_rwsem-cpu_hotplug_lock-and-scx_.patch
│   ├── 0098-scx-Sync-from-scx-repo.patch
│   ├── 0099-scx-Add-sys-kernel-sched_ext-interface.patch
│   ├── 0100-scx-Replace-sys-kernel-debug-sched-ext-with-tools-sc.patch
│   ├── 0101-scx-Make-the-pointer-passing-to-.dispatch-MAYBE_NULL.patch
│   ├── 0102-selftests-scx-Check-if-MAYBE_NULL-works-for-the-2nd-.patch
│   ├── 0103-scx-Fix-a-couple-follow-ups-to-recent-struct_ops-cha.patch
│   ├── 0104-scx-Make-scx_exit_info-fields-dynamically-allocated.patch
│   ├── 0105-scx-Misc-scx_exit_info-related-updates.patch
│   ├── 0106-scx-Dump-debug-info-after-an-abort.patch
│   └── 0107-scx-rq-should-be-locked-when-calling-scx_ops_exit_ta.patch
├── sched-ext-patches-v16
│   └── 0001-sched-6.7-Implement-BPF-extensible-scheduler-class.patch
├── sched-ext-patches-v16-all
│   └── 0001-sched-ext-patches.patch
├── sched-ext-patches-v16-sep
│   ├── 0001-sched-6.7-Merge-BPF-changes.patch
│   ├── 0002-cgroup-Implement-cgroup_show_cftypes.patch
│   ├── 0003-sched-Restructure-sched_class-order-sanity-checks-in.patch
│   ├── 0004-sched-Allow-sched_cgroup_fork-to-fail-and-introduce-.patch
│   ├── 0005-sched-Add-sched_class-reweight_task.patch
│   ├── 0006-sched-Add-sched_class-switching_to-and-expose-check_.patch
│   ├── 0007-sched-Factor-out-cgroup-weight-conversion-functions.patch
│   ├── 0008-sched-Expose-css_tg-and-__setscheduler_prio.patch
│   ├── 0009-sched-Enumerate-CPU-cgroup-file-types.patch
│   ├── 0010-sched-Add-reason-to-sched_class-rq_-on-off-line.patch
│   ├── 0011-sched-Add-normal_policy.patch
│   ├── 0012-sched_ext-Add-boilerplate-for-extensible-scheduler-c.patch
│   ├── 0013-sched_ext-Implement-BPF-extensible-scheduler-class.patch
│   ├── 0014-sched_ext-Add-scx_simple-and-scx_example_qmap-exampl.patch
│   ├── 0015-sched_ext-Add-sysrq-S-which-disables-the-BPF-schedul.patch
│   ├── 0016-sched_ext-Implement-runnable-task-stall-watchdog.patch
│   ├── 0017-sched_ext-Allow-BPF-schedulers-to-disallow-specific-.patch
│   ├── 0018-sched_ext-Allow-BPF-schedulers-to-switch-all-eligibl.patch
│   ├── 0019-sched_ext-Print-sched_ext-info-when-dumping-stack.patch
│   ├── 0020-sched_ext-Implement-scx_bpf_kick_cpu-and-task-preemp.patch
│   ├── 0021-sched_ext-Add-a-central-scheduler-which-makes-all-sc.patch
│   ├── 0022-sched_ext-Make-watchdog-handle-ops.dispatch-looping-.patch
│   ├── 0023-sched_ext-Add-task-state-tracking-operations.patch
│   ├── 0024-sched_ext-Implement-tickless-support.patch
│   ├── 0025-sched_ext-Track-tasks-that-are-subjects-of-the-in-fl.patch
│   ├── 0026-sched_ext-Add-cgroup-support.patch
│   ├── 0027-sched_ext-Add-a-cgroup-based-core-scheduling-schedul.patch
│   ├── 0028-sched_ext-Add-a-cgroup-scheduler-which-uses-flattene.patch
│   ├── 0029-sched_ext-Implement-SCX_KICK_WAIT.patch
│   ├── 0030-sched_ext-Implement-sched_ext_ops.cpu_acquire-releas.patch
│   ├── 0031-sched_ext-Implement-sched_ext_ops.cpu_online-offline.patch
│   ├── 0032-sched_ext-Implement-core-sched-support.patch
│   ├── 0033-sched_ext-Add-vtime-ordered-priority-queue-to-dispat.patch
│   ├── 0034-sched_ext-Documentation-scheduler-Document-extensibl.patch
│   ├── 0035-sched_ext-Add-a-basic-userland-vruntime-scheduler.patch
│   ├── 0036-sched_ext-Add-scx_rusty-a-rust-userspace-hybrid-sche.patch
│   ├── 0037-sched_ext-Add-scx_layered-a-highly-configurable-mult.patch
│   ├── 0038-scx-Move-scx_ops_enable_state_str-outside-CONFIG_SCH.patch
│   ├── 0039-scx-Fix-a-straggling-atomic64_set.patch
│   ├── 0040-scx-Use-.bpf.-sub-skel.h-suffix-instead-of-.-sub-ske.patch
│   ├── 0041-scx-Add-s-uSIZE-typedefs-in-scx_common.h.patch
│   ├── 0042-scx_-rusty-layered-Generate-skel-file-in-OUT_DIR.patch
│   ├── 0043-scx_-rusty-layered-ravg_read-is-now-provided-by-scx_.patch
│   ├── 0044-scx_-rusty-layered-Make-naming-and-build-consistent-.patch
│   ├── 0045-scx_-rusty-layered-Run-bindgen-s-clang-with-CLANG_CF.patch
│   ├── 0046-scx_-rusty-layered-Factor-out-build.rs-s-into-scx_ut.patch
│   ├── 0047-scx_-rusty-layered-Follow-scx_utils-BpfBuilder-API-u.patch
│   ├── 0048-scx_-layered-rusty-Minor-build-updates.patch
│   ├── 0049-scx-Move-common-headers-under-include-scx.patch
│   ├── 0050-scx-More-include-path-and-build-updates.patch
│   ├── 0051-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0052-scx-Disable-vtime-ordering-for-internal-DSQs.patch
│   ├── 0053-scx-Enforce-either-or-usage-of-DSQ-FIFO-PRIQ-dispatc.patch
│   ├── 0054-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0055-scx-Remove-now-unused-rb_node-from-first_local_task.patch
│   ├── 0056-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0057-scx-Add-missing-to-error-invocation-in-Makefile.patch
│   ├── 0058-scx-Add-skeleton-for-scx-testing-framework.patch
│   ├── 0059-sched_ext-fix-race-in-scx_move_task-with-exiting-tas.patch
│   ├── 0060-scx-Support-direct-dispatching-from-ops.select_cpu.patch
│   ├── 0061-scx-Remove-SCX_ENQ_LOCAL-flag.patch
│   ├── 0062-scx-Add-scx_bpf_select_cpu_dfl-kfunc.patch
│   ├── 0063-scx-Add-selftests-for-new-select_cpu-dispatch-semant.patch
│   ├── 0064-scx-Error-for-a-priq-builtin-DSQ-in-dispatch_enqueue.patch
│   ├── 0065-scx-Add-testcases-for-vtime-dispatching-to-builtin-D.patch
│   ├── 0066-scx-Always-set-task-scx-weight-before-enable.patch
│   ├── 0067-scx-Call-enable-disable-on-entry-exit-to-scx.patch
│   ├── 0068-scx-Rename-prep_enable-and-cancel_enable-add-exit_ta.patch
│   ├── 0069-scx-Add-init_enable_count-testcase.patch
│   ├── 0070-scx-Move-sched_ext_entity.ddsq_id-out-of-modifiable-.patch
│   ├── 0071-scx-Add-missing-DSQ-fallback-test-files.patch
│   ├── 0072-scx-Claim-idle-core-in-scx_select_cpu_dfl-for-nr_cpu.patch
│   ├── 0073-scx-Make-select_cpu_dfl-test-a-bit-less-brittle.patch
│   ├── 0074-scx-Set-default-slice-for-default-select_cpu-dispatc.patch
│   ├── 0075-scx-Avoid-possible-deadlock-with-cpus_read_lock.patch
│   ├── 0076-scx-Use-READ-WRITE_ONCE-for-scx_watchdog_timeout-tim.patch
│   ├── 0077-scx-Rename-rq-scx.watchdog_list-and-friends-to-runna.patch
│   ├── 0078-scx-Factor-out-scx_ops_bypass-and-s-scx_ops_disablin.patch
│   ├── 0079-scx-Implement-bypass-depth-and-always-bypass-while-d.patch
│   ├── 0080-scx-Implement-turning-off-bypassing.patch
│   ├── 0081-scx-Optimize-scx_ops_bypass.patch
│   ├── 0082-scx-Expose-bypassing-state-to-userland.patch
│   ├── 0083-scx-s-register_ext_kfuncs-scx_init.patch
│   ├── 0084-scx-Bypass-while-PM-operations-are-in-progress.patch
│   ├── 0085-scx-Disabling-scx_bpf_kick_cpu-while-bypassing.patch
│   ├── 0086-Revert-scx-Avoid-possible-deadlock-with-cpus_read_lo.patch
│   ├── 0087-scx-Make-scx_task_state-handling-more-idiomatic.patch
│   ├── 0088-scx-Sync-schedulers-from-SCX-v0.1.5-74923c6cdbc3.patch
│   ├── 0089-scx-Fix-direct-dispatch-for-non-builtin-DSQs.patch
│   ├── 0090-scx-Keep-track-of-enq-flags-in-direct-dispatch.patch
│   ├── 0091-scx-Test-vtime-dispatching-from-ops.select_cpu.patch
│   ├── 0092-scx-Implement-scx-selftests-framework.patch
│   ├── 0093-scx-Convert-remaining-testcases-to-use-new-framework.patch
│   ├── 0094-scx-Update-ddsp-testcases-to-check-for-error-exits.patch
│   ├── 0095-scx-Copy-scx_exit_kind-to-scx_test.h.patch
│   ├── 0096-scx-Narrow-cpus_read_lock-critical-section-in-scx_op.patch
│   ├── 0097-scx-Reorder-scx_fork_rwsem-cpu_hotplug_lock-and-scx_.patch
│   ├── 0098-scx-Sync-from-scx-repo.patch
│   ├── 0099-scx-Add-sys-kernel-sched_ext-interface.patch
│   ├── 0100-scx-Replace-sys-kernel-debug-sched-ext-with-tools-sc.patch
│   ├── 0101-scx-Make-the-pointer-passing-to-.dispatch-MAYBE_NULL.patch
│   ├── 0102-selftests-scx-Check-if-MAYBE_NULL-works-for-the-2nd-.patch
│   ├── 0103-scx-Fix-a-couple-follow-ups-to-recent-struct_ops-cha.patch
│   ├── 0104-scx-Make-scx_exit_info-fields-dynamically-allocated.patch
│   ├── 0105-scx-Misc-scx_exit_info-related-updates.patch
│   ├── 0106-scx-Dump-debug-info-after-an-abort.patch
│   ├── 0107-scx-rq-should-be-locked-when-calling-scx_ops_exit_ta.patch
│   ├── 0108-kernfs-Rearrange-kernfs_node-fields-to-reduce-its-si.patch
│   └── 0109-kernfs-RCU-protect-kernfs_nodes-and-avoid-kernfs_idr.patch
├── sched-ext-patches-v2
│   └── 0001-sched-6.7-Implement-BPF-extensible-scheduler-class.patch
├── sched-ext-patches-v2-all
│   └── 0001-sched-ext-patches.patch
├── sched-ext-patches-v2-sep
│   ├── 0001-sched-6.7-Merge-BPF-changes.patch
│   ├── 0002-cgroup-Implement-cgroup_show_cftypes.patch
│   ├── 0003-sched-Restructure-sched_class-order-sanity-checks-in.patch
│   ├── 0004-sched-Allow-sched_cgroup_fork-to-fail-and-introduce-.patch
│   ├── 0005-sched-Add-sched_class-reweight_task.patch
│   ├── 0006-sched-Add-sched_class-switching_to-and-expose-check_.patch
│   ├── 0007-sched-Factor-out-cgroup-weight-conversion-functions.patch
│   ├── 0008-sched-Expose-css_tg-and-__setscheduler_prio.patch
│   ├── 0009-sched-Enumerate-CPU-cgroup-file-types.patch
│   ├── 0010-sched-Add-reason-to-sched_class-rq_-on-off-line.patch
│   ├── 0011-sched-Add-normal_policy.patch
│   ├── 0012-sched_ext-Add-boilerplate-for-extensible-scheduler-c.patch
│   ├── 0013-sched_ext-Implement-BPF-extensible-scheduler-class.patch
│   ├── 0014-sched_ext-Add-scx_simple-and-scx_example_qmap-exampl.patch
│   ├── 0015-sched_ext-Add-sysrq-S-which-disables-the-BPF-schedul.patch
│   ├── 0016-sched_ext-Implement-runnable-task-stall-watchdog.patch
│   ├── 0017-sched_ext-Allow-BPF-schedulers-to-disallow-specific-.patch
│   ├── 0018-sched_ext-Allow-BPF-schedulers-to-switch-all-eligibl.patch
│   ├── 0019-sched_ext-Print-sched_ext-info-when-dumping-stack.patch
│   ├── 0020-sched_ext-Implement-scx_bpf_kick_cpu-and-task-preemp.patch
│   ├── 0021-sched_ext-Add-a-central-scheduler-which-makes-all-sc.patch
│   ├── 0022-sched_ext-Make-watchdog-handle-ops.dispatch-looping-.patch
│   ├── 0023-sched_ext-Add-task-state-tracking-operations.patch
│   ├── 0024-sched_ext-Implement-tickless-support.patch
│   ├── 0025-sched_ext-Track-tasks-that-are-subjects-of-the-in-fl.patch
│   ├── 0026-sched_ext-Add-cgroup-support.patch
│   ├── 0027-sched_ext-Add-a-cgroup-based-core-scheduling-schedul.patch
│   ├── 0028-sched_ext-Add-a-cgroup-scheduler-which-uses-flattene.patch
│   ├── 0029-sched_ext-Implement-SCX_KICK_WAIT.patch
│   ├── 0030-sched_ext-Implement-sched_ext_ops.cpu_acquire-releas.patch
│   ├── 0031-sched_ext-Implement-sched_ext_ops.cpu_online-offline.patch
│   ├── 0032-sched_ext-Implement-core-sched-support.patch
│   ├── 0033-sched_ext-Add-vtime-ordered-priority-queue-to-dispat.patch
│   ├── 0034-sched_ext-Documentation-scheduler-Document-extensibl.patch
│   ├── 0035-sched_ext-Add-a-basic-userland-vruntime-scheduler.patch
│   ├── 0036-sched_ext-Add-scx_rusty-a-rust-userspace-hybrid-sche.patch
│   ├── 0037-sched_ext-Add-scx_layered-a-highly-configurable-mult.patch
│   ├── 0038-scx-Move-scx_ops_enable_state_str-outside-CONFIG_SCH.patch
│   ├── 0039-scx-Fix-a-straggling-atomic64_set.patch
│   ├── 0040-scx-Use-.bpf.-sub-skel.h-suffix-instead-of-.-sub-ske.patch
│   ├── 0041-scx-Add-s-uSIZE-typedefs-in-scx_common.h.patch
│   ├── 0042-scx_-rusty-layered-Generate-skel-file-in-OUT_DIR.patch
│   ├── 0043-scx_-rusty-layered-ravg_read-is-now-provided-by-scx_.patch
│   ├── 0044-scx_-rusty-layered-Make-naming-and-build-consistent-.patch
│   ├── 0045-scx_-rusty-layered-Run-bindgen-s-clang-with-CLANG_CF.patch
│   ├── 0046-scx_-rusty-layered-Factor-out-build.rs-s-into-scx_ut.patch
│   ├── 0047-scx_-rusty-layered-Follow-scx_utils-BpfBuilder-API-u.patch
│   ├── 0048-scx_-layered-rusty-Minor-build-updates.patch
│   ├── 0049-scx-Move-common-headers-under-include-scx.patch
│   ├── 0050-scx-More-include-path-and-build-updates.patch
│   ├── 0051-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0052-scx-Disable-vtime-ordering-for-internal-DSQs.patch
│   ├── 0053-scx-Enforce-either-or-usage-of-DSQ-FIFO-PRIQ-dispatc.patch
│   ├── 0054-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0055-scx-Remove-now-unused-rb_node-from-first_local_task.patch
│   ├── 0056-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0057-scx-Add-missing-to-error-invocation-in-Makefile.patch
│   ├── 0058-scx-Add-skeleton-for-scx-testing-framework.patch
│   ├── 0059-kernfs-convert-kernfs_idr_lock-to-an-irq-safe-raw-sp.patch
│   ├── 0060-sched_ext-fix-race-in-scx_move_task-with-exiting-tas.patch
│   ├── 0061-scx-Support-direct-dispatching-from-ops.select_cpu.patch
│   ├── 0062-scx-Remove-SCX_ENQ_LOCAL-flag.patch
│   ├── 0063-scx-Add-scx_bpf_select_cpu_dfl-kfunc.patch
│   ├── 0064-scx-Add-selftests-for-new-select_cpu-dispatch-semant.patch
│   ├── 0065-scx-Error-for-a-priq-builtin-DSQ-in-dispatch_enqueue.patch
│   ├── 0066-scx-Add-testcases-for-vtime-dispatching-to-builtin-D.patch
│   ├── 0067-scx-Always-set-task-scx-weight-before-enable.patch
│   ├── 0068-scx-Call-enable-disable-on-entry-exit-to-scx.patch
│   ├── 0069-scx-Rename-prep_enable-and-cancel_enable-add-exit_ta.patch
│   ├── 0070-scx-Add-init_enable_count-testcase.patch
│   ├── 0071-scx-Move-sched_ext_entity.ddsq_id-out-of-modifiable-.patch
│   ├── 0072-scx-Add-missing-DSQ-fallback-test-files.patch
│   ├── 0073-scx-Claim-idle-core-in-scx_select_cpu_dfl-for-nr_cpu.patch
│   ├── 0074-scx-Make-select_cpu_dfl-test-a-bit-less-brittle.patch
│   └── 0075-scx-Set-default-slice-for-default-select_cpu-dispatc.patch
├── sched-ext-patches-v3
│   └── 0001-sched-6.7-Implement-BPF-extensible-scheduler-class.patch
├── sched-ext-patches-v3-all
│   └── 0001-sched-ext-patches.patch
├── sched-ext-patches-v3-sep
│   ├── 0001-sched-6.7-Merge-BPF-changes.patch
│   ├── 0002-cgroup-Implement-cgroup_show_cftypes.patch
│   ├── 0003-sched-Restructure-sched_class-order-sanity-checks-in.patch
│   ├── 0004-sched-Allow-sched_cgroup_fork-to-fail-and-introduce-.patch
│   ├── 0005-sched-Add-sched_class-reweight_task.patch
│   ├── 0006-sched-Add-sched_class-switching_to-and-expose-check_.patch
│   ├── 0007-sched-Factor-out-cgroup-weight-conversion-functions.patch
│   ├── 0008-sched-Expose-css_tg-and-__setscheduler_prio.patch
│   ├── 0009-sched-Enumerate-CPU-cgroup-file-types.patch
│   ├── 0010-sched-Add-reason-to-sched_class-rq_-on-off-line.patch
│   ├── 0011-sched-Add-normal_policy.patch
│   ├── 0012-sched_ext-Add-boilerplate-for-extensible-scheduler-c.patch
│   ├── 0013-sched_ext-Implement-BPF-extensible-scheduler-class.patch
│   ├── 0014-sched_ext-Add-scx_simple-and-scx_example_qmap-exampl.patch
│   ├── 0015-sched_ext-Add-sysrq-S-which-disables-the-BPF-schedul.patch
│   ├── 0016-sched_ext-Implement-runnable-task-stall-watchdog.patch
│   ├── 0017-sched_ext-Allow-BPF-schedulers-to-disallow-specific-.patch
│   ├── 0018-sched_ext-Allow-BPF-schedulers-to-switch-all-eligibl.patch
│   ├── 0019-sched_ext-Print-sched_ext-info-when-dumping-stack.patch
│   ├── 0020-sched_ext-Implement-scx_bpf_kick_cpu-and-task-preemp.patch
│   ├── 0021-sched_ext-Add-a-central-scheduler-which-makes-all-sc.patch
│   ├── 0022-sched_ext-Make-watchdog-handle-ops.dispatch-looping-.patch
│   ├── 0023-sched_ext-Add-task-state-tracking-operations.patch
│   ├── 0024-sched_ext-Implement-tickless-support.patch
│   ├── 0025-sched_ext-Track-tasks-that-are-subjects-of-the-in-fl.patch
│   ├── 0026-sched_ext-Add-cgroup-support.patch
│   ├── 0027-sched_ext-Add-a-cgroup-based-core-scheduling-schedul.patch
│   ├── 0028-sched_ext-Add-a-cgroup-scheduler-which-uses-flattene.patch
│   ├── 0029-sched_ext-Implement-SCX_KICK_WAIT.patch
│   ├── 0030-sched_ext-Implement-sched_ext_ops.cpu_acquire-releas.patch
│   ├── 0031-sched_ext-Implement-sched_ext_ops.cpu_online-offline.patch
│   ├── 0032-sched_ext-Implement-core-sched-support.patch
│   ├── 0033-sched_ext-Add-vtime-ordered-priority-queue-to-dispat.patch
│   ├── 0034-sched_ext-Documentation-scheduler-Document-extensibl.patch
│   ├── 0035-sched_ext-Add-a-basic-userland-vruntime-scheduler.patch
│   ├── 0036-sched_ext-Add-scx_rusty-a-rust-userspace-hybrid-sche.patch
│   ├── 0037-sched_ext-Add-scx_layered-a-highly-configurable-mult.patch
│   ├── 0038-scx-Move-scx_ops_enable_state_str-outside-CONFIG_SCH.patch
│   ├── 0039-scx-Fix-a-straggling-atomic64_set.patch
│   ├── 0040-scx-Use-.bpf.-sub-skel.h-suffix-instead-of-.-sub-ske.patch
│   ├── 0041-scx-Add-s-uSIZE-typedefs-in-scx_common.h.patch
│   ├── 0042-scx_-rusty-layered-Generate-skel-file-in-OUT_DIR.patch
│   ├── 0043-scx_-rusty-layered-ravg_read-is-now-provided-by-scx_.patch
│   ├── 0044-scx_-rusty-layered-Make-naming-and-build-consistent-.patch
│   ├── 0045-scx_-rusty-layered-Run-bindgen-s-clang-with-CLANG_CF.patch
│   ├── 0046-scx_-rusty-layered-Factor-out-build.rs-s-into-scx_ut.patch
│   ├── 0047-scx_-rusty-layered-Follow-scx_utils-BpfBuilder-API-u.patch
│   ├── 0048-scx_-layered-rusty-Minor-build-updates.patch
│   ├── 0049-scx-Move-common-headers-under-include-scx.patch
│   ├── 0050-scx-More-include-path-and-build-updates.patch
│   ├── 0051-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0052-scx-Disable-vtime-ordering-for-internal-DSQs.patch
│   ├── 0053-scx-Enforce-either-or-usage-of-DSQ-FIFO-PRIQ-dispatc.patch
│   ├── 0054-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0055-scx-Remove-now-unused-rb_node-from-first_local_task.patch
│   ├── 0056-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0057-scx-Add-missing-to-error-invocation-in-Makefile.patch
│   ├── 0058-scx-Add-skeleton-for-scx-testing-framework.patch
│   ├── 0059-kernfs-convert-kernfs_idr_lock-to-an-irq-safe-raw-sp.patch
│   ├── 0060-sched_ext-fix-race-in-scx_move_task-with-exiting-tas.patch
│   ├── 0061-scx-Support-direct-dispatching-from-ops.select_cpu.patch
│   ├── 0062-scx-Remove-SCX_ENQ_LOCAL-flag.patch
│   ├── 0063-scx-Add-scx_bpf_select_cpu_dfl-kfunc.patch
│   ├── 0064-scx-Add-selftests-for-new-select_cpu-dispatch-semant.patch
│   ├── 0065-scx-Error-for-a-priq-builtin-DSQ-in-dispatch_enqueue.patch
│   ├── 0066-scx-Add-testcases-for-vtime-dispatching-to-builtin-D.patch
│   ├── 0067-scx-Always-set-task-scx-weight-before-enable.patch
│   ├── 0068-scx-Call-enable-disable-on-entry-exit-to-scx.patch
│   ├── 0069-scx-Rename-prep_enable-and-cancel_enable-add-exit_ta.patch
│   ├── 0070-scx-Add-init_enable_count-testcase.patch
│   ├── 0071-scx-Move-sched_ext_entity.ddsq_id-out-of-modifiable-.patch
│   ├── 0072-scx-Add-missing-DSQ-fallback-test-files.patch
│   ├── 0073-scx-Claim-idle-core-in-scx_select_cpu_dfl-for-nr_cpu.patch
│   ├── 0074-scx-Make-select_cpu_dfl-test-a-bit-less-brittle.patch
│   ├── 0075-scx-Set-default-slice-for-default-select_cpu-dispatc.patch
│   └── 0076-scx-Avoid-possible-deadlock-with-cpus_read_lock.patch
├── sched-ext-patches-v4
│   └── 0001-sched-6.7-Implement-BPF-extensible-scheduler-class.patch
├── sched-ext-patches-v4-all
│   └── 0001-sched-ext-patches.patch
├── sched-ext-patches-v4-sep
│   ├── 0001-sched-6.7-Merge-BPF-changes.patch
│   ├── 0002-cgroup-Implement-cgroup_show_cftypes.patch
│   ├── 0003-sched-Restructure-sched_class-order-sanity-checks-in.patch
│   ├── 0004-sched-Allow-sched_cgroup_fork-to-fail-and-introduce-.patch
│   ├── 0005-sched-Add-sched_class-reweight_task.patch
│   ├── 0006-sched-Add-sched_class-switching_to-and-expose-check_.patch
│   ├── 0007-sched-Factor-out-cgroup-weight-conversion-functions.patch
│   ├── 0008-sched-Expose-css_tg-and-__setscheduler_prio.patch
│   ├── 0009-sched-Enumerate-CPU-cgroup-file-types.patch
│   ├── 0010-sched-Add-reason-to-sched_class-rq_-on-off-line.patch
│   ├── 0011-sched-Add-normal_policy.patch
│   ├── 0012-sched_ext-Add-boilerplate-for-extensible-scheduler-c.patch
│   ├── 0013-sched_ext-Implement-BPF-extensible-scheduler-class.patch
│   ├── 0014-sched_ext-Add-scx_simple-and-scx_example_qmap-exampl.patch
│   ├── 0015-sched_ext-Add-sysrq-S-which-disables-the-BPF-schedul.patch
│   ├── 0016-sched_ext-Implement-runnable-task-stall-watchdog.patch
│   ├── 0017-sched_ext-Allow-BPF-schedulers-to-disallow-specific-.patch
│   ├── 0018-sched_ext-Allow-BPF-schedulers-to-switch-all-eligibl.patch
│   ├── 0019-sched_ext-Print-sched_ext-info-when-dumping-stack.patch
│   ├── 0020-sched_ext-Implement-scx_bpf_kick_cpu-and-task-preemp.patch
│   ├── 0021-sched_ext-Add-a-central-scheduler-which-makes-all-sc.patch
│   ├── 0022-sched_ext-Make-watchdog-handle-ops.dispatch-looping-.patch
│   ├── 0023-sched_ext-Add-task-state-tracking-operations.patch
│   ├── 0024-sched_ext-Implement-tickless-support.patch
│   ├── 0025-sched_ext-Track-tasks-that-are-subjects-of-the-in-fl.patch
│   ├── 0026-sched_ext-Add-cgroup-support.patch
│   ├── 0027-sched_ext-Add-a-cgroup-based-core-scheduling-schedul.patch
│   ├── 0028-sched_ext-Add-a-cgroup-scheduler-which-uses-flattene.patch
│   ├── 0029-sched_ext-Implement-SCX_KICK_WAIT.patch
│   ├── 0030-sched_ext-Implement-sched_ext_ops.cpu_acquire-releas.patch
│   ├── 0031-sched_ext-Implement-sched_ext_ops.cpu_online-offline.patch
│   ├── 0032-sched_ext-Implement-core-sched-support.patch
│   ├── 0033-sched_ext-Add-vtime-ordered-priority-queue-to-dispat.patch
│   ├── 0034-sched_ext-Documentation-scheduler-Document-extensibl.patch
│   ├── 0035-sched_ext-Add-a-basic-userland-vruntime-scheduler.patch
│   ├── 0036-sched_ext-Add-scx_rusty-a-rust-userspace-hybrid-sche.patch
│   ├── 0037-sched_ext-Add-scx_layered-a-highly-configurable-mult.patch
│   ├── 0038-scx-Move-scx_ops_enable_state_str-outside-CONFIG_SCH.patch
│   ├── 0039-scx-Fix-a-straggling-atomic64_set.patch
│   ├── 0040-scx-Use-.bpf.-sub-skel.h-suffix-instead-of-.-sub-ske.patch
│   ├── 0041-scx-Add-s-uSIZE-typedefs-in-scx_common.h.patch
│   ├── 0042-scx_-rusty-layered-Generate-skel-file-in-OUT_DIR.patch
│   ├── 0043-scx_-rusty-layered-ravg_read-is-now-provided-by-scx_.patch
│   ├── 0044-scx_-rusty-layered-Make-naming-and-build-consistent-.patch
│   ├── 0045-scx_-rusty-layered-Run-bindgen-s-clang-with-CLANG_CF.patch
│   ├── 0046-scx_-rusty-layered-Factor-out-build.rs-s-into-scx_ut.patch
│   ├── 0047-scx_-rusty-layered-Follow-scx_utils-BpfBuilder-API-u.patch
│   ├── 0048-scx_-layered-rusty-Minor-build-updates.patch
│   ├── 0049-scx-Move-common-headers-under-include-scx.patch
│   ├── 0050-scx-More-include-path-and-build-updates.patch
│   ├── 0051-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0052-scx-Disable-vtime-ordering-for-internal-DSQs.patch
│   ├── 0053-scx-Enforce-either-or-usage-of-DSQ-FIFO-PRIQ-dispatc.patch
│   ├── 0054-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0055-scx-Remove-now-unused-rb_node-from-first_local_task.patch
│   ├── 0056-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0057-scx-Add-missing-to-error-invocation-in-Makefile.patch
│   ├── 0058-scx-Add-skeleton-for-scx-testing-framework.patch
│   ├── 0059-kernfs-convert-kernfs_idr_lock-to-an-irq-safe-raw-sp.patch
│   ├── 0060-sched_ext-fix-race-in-scx_move_task-with-exiting-tas.patch
│   ├── 0061-scx-Support-direct-dispatching-from-ops.select_cpu.patch
│   ├── 0062-scx-Remove-SCX_ENQ_LOCAL-flag.patch
│   ├── 0063-scx-Add-scx_bpf_select_cpu_dfl-kfunc.patch
│   ├── 0064-scx-Add-selftests-for-new-select_cpu-dispatch-semant.patch
│   ├── 0065-scx-Error-for-a-priq-builtin-DSQ-in-dispatch_enqueue.patch
│   ├── 0066-scx-Add-testcases-for-vtime-dispatching-to-builtin-D.patch
│   ├── 0067-scx-Always-set-task-scx-weight-before-enable.patch
│   ├── 0068-scx-Call-enable-disable-on-entry-exit-to-scx.patch
│   ├── 0069-scx-Rename-prep_enable-and-cancel_enable-add-exit_ta.patch
│   ├── 0070-scx-Add-init_enable_count-testcase.patch
│   ├── 0071-scx-Move-sched_ext_entity.ddsq_id-out-of-modifiable-.patch
│   ├── 0072-scx-Add-missing-DSQ-fallback-test-files.patch
│   ├── 0073-scx-Claim-idle-core-in-scx_select_cpu_dfl-for-nr_cpu.patch
│   ├── 0074-scx-Make-select_cpu_dfl-test-a-bit-less-brittle.patch
│   ├── 0075-scx-Set-default-slice-for-default-select_cpu-dispatc.patch
│   ├── 0076-scx-Avoid-possible-deadlock-with-cpus_read_lock.patch
│   ├── 0077-scx-Use-READ-WRITE_ONCE-for-scx_watchdog_timeout-tim.patch
│   ├── 0078-scx-Rename-rq-scx.watchdog_list-and-friends-to-runna.patch
│   ├── 0079-scx-Factor-out-scx_ops_bypass-and-s-scx_ops_disablin.patch
│   ├── 0080-scx-Implement-bypass-depth-and-always-bypass-while-d.patch
│   ├── 0081-scx-Implement-turning-off-bypassing.patch
│   ├── 0082-scx-Optimize-scx_ops_bypass.patch
│   ├── 0083-scx-Expose-bypassing-state-to-userland.patch
│   ├── 0084-scx-s-register_ext_kfuncs-scx_init.patch
│   ├── 0085-scx-Bypass-while-PM-operations-are-in-progress.patch
│   └── 0086-scx-Disabling-scx_bpf_kick_cpu-while-bypassing.patch
├── sched-ext-patches-v5
│   └── 0001-sched-6.7-Implement-BPF-extensible-scheduler-class.patch
├── sched-ext-patches-v5-all
│   └── 0001-sched-ext-patches.patch
├── sched-ext-patches-v5-sep
│   ├── 0001-sched-6.7-Merge-BPF-changes.patch
│   ├── 0002-cgroup-Implement-cgroup_show_cftypes.patch
│   ├── 0003-sched-Restructure-sched_class-order-sanity-checks-in.patch
│   ├── 0004-sched-Allow-sched_cgroup_fork-to-fail-and-introduce-.patch
│   ├── 0005-sched-Add-sched_class-reweight_task.patch
│   ├── 0006-sched-Add-sched_class-switching_to-and-expose-check_.patch
│   ├── 0007-sched-Factor-out-cgroup-weight-conversion-functions.patch
│   ├── 0008-sched-Expose-css_tg-and-__setscheduler_prio.patch
│   ├── 0009-sched-Enumerate-CPU-cgroup-file-types.patch
│   ├── 0010-sched-Add-reason-to-sched_class-rq_-on-off-line.patch
│   ├── 0011-sched-Add-normal_policy.patch
│   ├── 0012-sched_ext-Add-boilerplate-for-extensible-scheduler-c.patch
│   ├── 0013-sched_ext-Implement-BPF-extensible-scheduler-class.patch
│   ├── 0014-sched_ext-Add-scx_simple-and-scx_example_qmap-exampl.patch
│   ├── 0015-sched_ext-Add-sysrq-S-which-disables-the-BPF-schedul.patch
│   ├── 0016-sched_ext-Implement-runnable-task-stall-watchdog.patch
│   ├── 0017-sched_ext-Allow-BPF-schedulers-to-disallow-specific-.patch
│   ├── 0018-sched_ext-Allow-BPF-schedulers-to-switch-all-eligibl.patch
│   ├── 0019-sched_ext-Print-sched_ext-info-when-dumping-stack.patch
│   ├── 0020-sched_ext-Implement-scx_bpf_kick_cpu-and-task-preemp.patch
│   ├── 0021-sched_ext-Add-a-central-scheduler-which-makes-all-sc.patch
│   ├── 0022-sched_ext-Make-watchdog-handle-ops.dispatch-looping-.patch
│   ├── 0023-sched_ext-Add-task-state-tracking-operations.patch
│   ├── 0024-sched_ext-Implement-tickless-support.patch
│   ├── 0025-sched_ext-Track-tasks-that-are-subjects-of-the-in-fl.patch
│   ├── 0026-sched_ext-Add-cgroup-support.patch
│   ├── 0027-sched_ext-Add-a-cgroup-based-core-scheduling-schedul.patch
│   ├── 0028-sched_ext-Add-a-cgroup-scheduler-which-uses-flattene.patch
│   ├── 0029-sched_ext-Implement-SCX_KICK_WAIT.patch
│   ├── 0030-sched_ext-Implement-sched_ext_ops.cpu_acquire-releas.patch
│   ├── 0031-sched_ext-Implement-sched_ext_ops.cpu_online-offline.patch
│   ├── 0032-sched_ext-Implement-core-sched-support.patch
│   ├── 0033-sched_ext-Add-vtime-ordered-priority-queue-to-dispat.patch
│   ├── 0034-sched_ext-Documentation-scheduler-Document-extensibl.patch
│   ├── 0035-sched_ext-Add-a-basic-userland-vruntime-scheduler.patch
│   ├── 0036-sched_ext-Add-scx_rusty-a-rust-userspace-hybrid-sche.patch
│   ├── 0037-sched_ext-Add-scx_layered-a-highly-configurable-mult.patch
│   ├── 0038-scx-Move-scx_ops_enable_state_str-outside-CONFIG_SCH.patch
│   ├── 0039-scx-Fix-a-straggling-atomic64_set.patch
│   ├── 0040-scx-Use-.bpf.-sub-skel.h-suffix-instead-of-.-sub-ske.patch
│   ├── 0041-scx-Add-s-uSIZE-typedefs-in-scx_common.h.patch
│   ├── 0042-scx_-rusty-layered-Generate-skel-file-in-OUT_DIR.patch
│   ├── 0043-scx_-rusty-layered-ravg_read-is-now-provided-by-scx_.patch
│   ├── 0044-scx_-rusty-layered-Make-naming-and-build-consistent-.patch
│   ├── 0045-scx_-rusty-layered-Run-bindgen-s-clang-with-CLANG_CF.patch
│   ├── 0046-scx_-rusty-layered-Factor-out-build.rs-s-into-scx_ut.patch
│   ├── 0047-scx_-rusty-layered-Follow-scx_utils-BpfBuilder-API-u.patch
│   ├── 0048-scx_-layered-rusty-Minor-build-updates.patch
│   ├── 0049-scx-Move-common-headers-under-include-scx.patch
│   ├── 0050-scx-More-include-path-and-build-updates.patch
│   ├── 0051-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0052-scx-Disable-vtime-ordering-for-internal-DSQs.patch
│   ├── 0053-scx-Enforce-either-or-usage-of-DSQ-FIFO-PRIQ-dispatc.patch
│   ├── 0054-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0055-scx-Remove-now-unused-rb_node-from-first_local_task.patch
│   ├── 0056-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0057-scx-Add-missing-to-error-invocation-in-Makefile.patch
│   ├── 0058-scx-Add-skeleton-for-scx-testing-framework.patch
│   ├── 0059-kernfs-convert-kernfs_idr_lock-to-an-irq-safe-raw-sp.patch
│   ├── 0060-sched_ext-fix-race-in-scx_move_task-with-exiting-tas.patch
│   ├── 0061-scx-Support-direct-dispatching-from-ops.select_cpu.patch
│   ├── 0062-scx-Remove-SCX_ENQ_LOCAL-flag.patch
│   ├── 0063-scx-Add-scx_bpf_select_cpu_dfl-kfunc.patch
│   ├── 0064-scx-Add-selftests-for-new-select_cpu-dispatch-semant.patch
│   ├── 0065-scx-Error-for-a-priq-builtin-DSQ-in-dispatch_enqueue.patch
│   ├── 0066-scx-Add-testcases-for-vtime-dispatching-to-builtin-D.patch
│   ├── 0067-scx-Always-set-task-scx-weight-before-enable.patch
│   ├── 0068-scx-Call-enable-disable-on-entry-exit-to-scx.patch
│   ├── 0069-scx-Rename-prep_enable-and-cancel_enable-add-exit_ta.patch
│   ├── 0070-scx-Add-init_enable_count-testcase.patch
│   ├── 0071-scx-Move-sched_ext_entity.ddsq_id-out-of-modifiable-.patch
│   ├── 0072-scx-Add-missing-DSQ-fallback-test-files.patch
│   ├── 0073-scx-Claim-idle-core-in-scx_select_cpu_dfl-for-nr_cpu.patch
│   ├── 0074-scx-Make-select_cpu_dfl-test-a-bit-less-brittle.patch
│   ├── 0075-scx-Set-default-slice-for-default-select_cpu-dispatc.patch
│   ├── 0076-scx-Avoid-possible-deadlock-with-cpus_read_lock.patch
│   ├── 0077-scx-Use-READ-WRITE_ONCE-for-scx_watchdog_timeout-tim.patch
│   ├── 0078-scx-Rename-rq-scx.watchdog_list-and-friends-to-runna.patch
│   ├── 0079-scx-Factor-out-scx_ops_bypass-and-s-scx_ops_disablin.patch
│   ├── 0080-scx-Implement-bypass-depth-and-always-bypass-while-d.patch
│   ├── 0081-scx-Implement-turning-off-bypassing.patch
│   ├── 0082-scx-Optimize-scx_ops_bypass.patch
│   ├── 0083-scx-Expose-bypassing-state-to-userland.patch
│   ├── 0084-scx-s-register_ext_kfuncs-scx_init.patch
│   ├── 0085-scx-Bypass-while-PM-operations-are-in-progress.patch
│   ├── 0086-scx-Disabling-scx_bpf_kick_cpu-while-bypassing.patch
│   ├── 0087-Revert-scx-Avoid-possible-deadlock-with-cpus_read_lo.patch
│   ├── 0088-scx-Make-scx_task_state-handling-more-idiomatic.patch
│   └── 0089-scx-Sync-schedulers-from-SCX-v0.1.5-74923c6cdbc3.patch
├── sched-ext-patches-v6
│   └── 0001-sched-6.7-Implement-BPF-extensible-scheduler-class.patch
├── sched-ext-patches-v6-all
│   └── 0001-sched-ext-patches.patch
├── sched-ext-patches-v6-sep
│   ├── 0001-sched-6.7-Merge-BPF-changes.patch
│   ├── 0002-cgroup-Implement-cgroup_show_cftypes.patch
│   ├── 0003-sched-Restructure-sched_class-order-sanity-checks-in.patch
│   ├── 0004-sched-Allow-sched_cgroup_fork-to-fail-and-introduce-.patch
│   ├── 0005-sched-Add-sched_class-reweight_task.patch
│   ├── 0006-sched-Add-sched_class-switching_to-and-expose-check_.patch
│   ├── 0007-sched-Factor-out-cgroup-weight-conversion-functions.patch
│   ├── 0008-sched-Expose-css_tg-and-__setscheduler_prio.patch
│   ├── 0009-sched-Enumerate-CPU-cgroup-file-types.patch
│   ├── 0010-sched-Add-reason-to-sched_class-rq_-on-off-line.patch
│   ├── 0011-sched-Add-normal_policy.patch
│   ├── 0012-sched_ext-Add-boilerplate-for-extensible-scheduler-c.patch
│   ├── 0013-sched_ext-Implement-BPF-extensible-scheduler-class.patch
│   ├── 0014-sched_ext-Add-scx_simple-and-scx_example_qmap-exampl.patch
│   ├── 0015-sched_ext-Add-sysrq-S-which-disables-the-BPF-schedul.patch
│   ├── 0016-sched_ext-Implement-runnable-task-stall-watchdog.patch
│   ├── 0017-sched_ext-Allow-BPF-schedulers-to-disallow-specific-.patch
│   ├── 0018-sched_ext-Allow-BPF-schedulers-to-switch-all-eligibl.patch
│   ├── 0019-sched_ext-Print-sched_ext-info-when-dumping-stack.patch
│   ├── 0020-sched_ext-Implement-scx_bpf_kick_cpu-and-task-preemp.patch
│   ├── 0021-sched_ext-Add-a-central-scheduler-which-makes-all-sc.patch
│   ├── 0022-sched_ext-Make-watchdog-handle-ops.dispatch-looping-.patch
│   ├── 0023-sched_ext-Add-task-state-tracking-operations.patch
│   ├── 0024-sched_ext-Implement-tickless-support.patch
│   ├── 0025-sched_ext-Track-tasks-that-are-subjects-of-the-in-fl.patch
│   ├── 0026-sched_ext-Add-cgroup-support.patch
│   ├── 0027-sched_ext-Add-a-cgroup-based-core-scheduling-schedul.patch
│   ├── 0028-sched_ext-Add-a-cgroup-scheduler-which-uses-flattene.patch
│   ├── 0029-sched_ext-Implement-SCX_KICK_WAIT.patch
│   ├── 0030-sched_ext-Implement-sched_ext_ops.cpu_acquire-releas.patch
│   ├── 0031-sched_ext-Implement-sched_ext_ops.cpu_online-offline.patch
│   ├── 0032-sched_ext-Implement-core-sched-support.patch
│   ├── 0033-sched_ext-Add-vtime-ordered-priority-queue-to-dispat.patch
│   ├── 0034-sched_ext-Documentation-scheduler-Document-extensibl.patch
│   ├── 0035-sched_ext-Add-a-basic-userland-vruntime-scheduler.patch
│   ├── 0036-sched_ext-Add-scx_rusty-a-rust-userspace-hybrid-sche.patch
│   ├── 0037-sched_ext-Add-scx_layered-a-highly-configurable-mult.patch
│   ├── 0038-scx-Move-scx_ops_enable_state_str-outside-CONFIG_SCH.patch
│   ├── 0039-scx-Fix-a-straggling-atomic64_set.patch
│   ├── 0040-scx-Use-.bpf.-sub-skel.h-suffix-instead-of-.-sub-ske.patch
│   ├── 0041-scx-Add-s-uSIZE-typedefs-in-scx_common.h.patch
│   ├── 0042-scx_-rusty-layered-Generate-skel-file-in-OUT_DIR.patch
│   ├── 0043-scx_-rusty-layered-ravg_read-is-now-provided-by-scx_.patch
│   ├── 0044-scx_-rusty-layered-Make-naming-and-build-consistent-.patch
│   ├── 0045-scx_-rusty-layered-Run-bindgen-s-clang-with-CLANG_CF.patch
│   ├── 0046-scx_-rusty-layered-Factor-out-build.rs-s-into-scx_ut.patch
│   ├── 0047-scx_-rusty-layered-Follow-scx_utils-BpfBuilder-API-u.patch
│   ├── 0048-scx_-layered-rusty-Minor-build-updates.patch
│   ├── 0049-scx-Move-common-headers-under-include-scx.patch
│   ├── 0050-scx-More-include-path-and-build-updates.patch
│   ├── 0051-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0052-scx-Disable-vtime-ordering-for-internal-DSQs.patch
│   ├── 0053-scx-Enforce-either-or-usage-of-DSQ-FIFO-PRIQ-dispatc.patch
│   ├── 0054-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0055-scx-Remove-now-unused-rb_node-from-first_local_task.patch
│   ├── 0056-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0057-scx-Add-missing-to-error-invocation-in-Makefile.patch
│   ├── 0058-scx-Add-skeleton-for-scx-testing-framework.patch
│   ├── 0059-kernfs-convert-kernfs_idr_lock-to-an-irq-safe-raw-sp.patch
│   ├── 0060-sched_ext-fix-race-in-scx_move_task-with-exiting-tas.patch
│   ├── 0061-scx-Support-direct-dispatching-from-ops.select_cpu.patch
│   ├── 0062-scx-Remove-SCX_ENQ_LOCAL-flag.patch
│   ├── 0063-scx-Add-scx_bpf_select_cpu_dfl-kfunc.patch
│   ├── 0064-scx-Add-selftests-for-new-select_cpu-dispatch-semant.patch
│   ├── 0065-scx-Error-for-a-priq-builtin-DSQ-in-dispatch_enqueue.patch
│   ├── 0066-scx-Add-testcases-for-vtime-dispatching-to-builtin-D.patch
│   ├── 0067-scx-Always-set-task-scx-weight-before-enable.patch
│   ├── 0068-scx-Call-enable-disable-on-entry-exit-to-scx.patch
│   ├── 0069-scx-Rename-prep_enable-and-cancel_enable-add-exit_ta.patch
│   ├── 0070-scx-Add-init_enable_count-testcase.patch
│   ├── 0071-scx-Move-sched_ext_entity.ddsq_id-out-of-modifiable-.patch
│   ├── 0072-scx-Add-missing-DSQ-fallback-test-files.patch
│   ├── 0073-scx-Claim-idle-core-in-scx_select_cpu_dfl-for-nr_cpu.patch
│   ├── 0074-scx-Make-select_cpu_dfl-test-a-bit-less-brittle.patch
│   ├── 0075-scx-Set-default-slice-for-default-select_cpu-dispatc.patch
│   ├── 0076-scx-Avoid-possible-deadlock-with-cpus_read_lock.patch
│   ├── 0077-scx-Use-READ-WRITE_ONCE-for-scx_watchdog_timeout-tim.patch
│   ├── 0078-scx-Rename-rq-scx.watchdog_list-and-friends-to-runna.patch
│   ├── 0079-scx-Factor-out-scx_ops_bypass-and-s-scx_ops_disablin.patch
│   ├── 0080-scx-Implement-bypass-depth-and-always-bypass-while-d.patch
│   ├── 0081-scx-Implement-turning-off-bypassing.patch
│   ├── 0082-scx-Optimize-scx_ops_bypass.patch
│   ├── 0083-scx-Expose-bypassing-state-to-userland.patch
│   ├── 0084-scx-s-register_ext_kfuncs-scx_init.patch
│   ├── 0085-scx-Bypass-while-PM-operations-are-in-progress.patch
│   ├── 0086-scx-Disabling-scx_bpf_kick_cpu-while-bypassing.patch
│   ├── 0087-Revert-scx-Avoid-possible-deadlock-with-cpus_read_lo.patch
│   ├── 0088-scx-Make-scx_task_state-handling-more-idiomatic.patch
│   ├── 0089-scx-Sync-schedulers-from-SCX-v0.1.5-74923c6cdbc3.patch
│   ├── 0090-scx-Fix-direct-dispatch-for-non-builtin-DSQs.patch
│   ├── 0091-scx-Keep-track-of-enq-flags-in-direct-dispatch.patch
│   └── 0092-scx-Test-vtime-dispatching-from-ops.select_cpu.patch
├── sched-ext-patches-v7
│   └── 0001-sched-6.7-Implement-BPF-extensible-scheduler-class.patch
├── sched-ext-patches-v7-all
│   └── 0001-sched-ext-patches.patch
├── sched-ext-patches-v7-sep
│   ├── 0001-sched-6.7-Merge-BPF-changes.patch
│   ├── 0002-cgroup-Implement-cgroup_show_cftypes.patch
│   ├── 0003-sched-Restructure-sched_class-order-sanity-checks-in.patch
│   ├── 0004-sched-Allow-sched_cgroup_fork-to-fail-and-introduce-.patch
│   ├── 0005-sched-Add-sched_class-reweight_task.patch
│   ├── 0006-sched-Add-sched_class-switching_to-and-expose-check_.patch
│   ├── 0007-sched-Factor-out-cgroup-weight-conversion-functions.patch
│   ├── 0008-sched-Expose-css_tg-and-__setscheduler_prio.patch
│   ├── 0009-sched-Enumerate-CPU-cgroup-file-types.patch
│   ├── 0010-sched-Add-reason-to-sched_class-rq_-on-off-line.patch
│   ├── 0011-sched-Add-normal_policy.patch
│   ├── 0012-sched_ext-Add-boilerplate-for-extensible-scheduler-c.patch
│   ├── 0013-sched_ext-Implement-BPF-extensible-scheduler-class.patch
│   ├── 0014-sched_ext-Add-scx_simple-and-scx_example_qmap-exampl.patch
│   ├── 0015-sched_ext-Add-sysrq-S-which-disables-the-BPF-schedul.patch
│   ├── 0016-sched_ext-Implement-runnable-task-stall-watchdog.patch
│   ├── 0017-sched_ext-Allow-BPF-schedulers-to-disallow-specific-.patch
│   ├── 0018-sched_ext-Allow-BPF-schedulers-to-switch-all-eligibl.patch
│   ├── 0019-sched_ext-Print-sched_ext-info-when-dumping-stack.patch
│   ├── 0020-sched_ext-Implement-scx_bpf_kick_cpu-and-task-preemp.patch
│   ├── 0021-sched_ext-Add-a-central-scheduler-which-makes-all-sc.patch
│   ├── 0022-sched_ext-Make-watchdog-handle-ops.dispatch-looping-.patch
│   ├── 0023-sched_ext-Add-task-state-tracking-operations.patch
│   ├── 0024-sched_ext-Implement-tickless-support.patch
│   ├── 0025-sched_ext-Track-tasks-that-are-subjects-of-the-in-fl.patch
│   ├── 0026-sched_ext-Add-cgroup-support.patch
│   ├── 0027-sched_ext-Add-a-cgroup-based-core-scheduling-schedul.patch
│   ├── 0028-sched_ext-Add-a-cgroup-scheduler-which-uses-flattene.patch
│   ├── 0029-sched_ext-Implement-SCX_KICK_WAIT.patch
│   ├── 0030-sched_ext-Implement-sched_ext_ops.cpu_acquire-releas.patch
│   ├── 0031-sched_ext-Implement-sched_ext_ops.cpu_online-offline.patch
│   ├── 0032-sched_ext-Implement-core-sched-support.patch
│   ├── 0033-sched_ext-Add-vtime-ordered-priority-queue-to-dispat.patch
│   ├── 0034-sched_ext-Documentation-scheduler-Document-extensibl.patch
│   ├── 0035-sched_ext-Add-a-basic-userland-vruntime-scheduler.patch
│   ├── 0036-sched_ext-Add-scx_rusty-a-rust-userspace-hybrid-sche.patch
│   ├── 0037-sched_ext-Add-scx_layered-a-highly-configurable-mult.patch
│   ├── 0038-scx-Move-scx_ops_enable_state_str-outside-CONFIG_SCH.patch
│   ├── 0039-scx-Fix-a-straggling-atomic64_set.patch
│   ├── 0040-scx-Use-.bpf.-sub-skel.h-suffix-instead-of-.-sub-ske.patch
│   ├── 0041-scx-Add-s-uSIZE-typedefs-in-scx_common.h.patch
│   ├── 0042-scx_-rusty-layered-Generate-skel-file-in-OUT_DIR.patch
│   ├── 0043-scx_-rusty-layered-ravg_read-is-now-provided-by-scx_.patch
│   ├── 0044-scx_-rusty-layered-Make-naming-and-build-consistent-.patch
│   ├── 0045-scx_-rusty-layered-Run-bindgen-s-clang-with-CLANG_CF.patch
│   ├── 0046-scx_-rusty-layered-Factor-out-build.rs-s-into-scx_ut.patch
│   ├── 0047-scx_-rusty-layered-Follow-scx_utils-BpfBuilder-API-u.patch
│   ├── 0048-scx_-layered-rusty-Minor-build-updates.patch
│   ├── 0049-scx-Move-common-headers-under-include-scx.patch
│   ├── 0050-scx-More-include-path-and-build-updates.patch
│   ├── 0051-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0052-scx-Disable-vtime-ordering-for-internal-DSQs.patch
│   ├── 0053-scx-Enforce-either-or-usage-of-DSQ-FIFO-PRIQ-dispatc.patch
│   ├── 0054-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0055-scx-Remove-now-unused-rb_node-from-first_local_task.patch
│   ├── 0056-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0057-scx-Add-missing-to-error-invocation-in-Makefile.patch
│   ├── 0058-scx-Add-skeleton-for-scx-testing-framework.patch
│   ├── 0059-kernfs-convert-kernfs_idr_lock-to-an-irq-safe-raw-sp.patch
│   ├── 0060-sched_ext-fix-race-in-scx_move_task-with-exiting-tas.patch
│   ├── 0061-scx-Support-direct-dispatching-from-ops.select_cpu.patch
│   ├── 0062-scx-Remove-SCX_ENQ_LOCAL-flag.patch
│   ├── 0063-scx-Add-scx_bpf_select_cpu_dfl-kfunc.patch
│   ├── 0064-scx-Add-selftests-for-new-select_cpu-dispatch-semant.patch
│   ├── 0065-scx-Error-for-a-priq-builtin-DSQ-in-dispatch_enqueue.patch
│   ├── 0066-scx-Add-testcases-for-vtime-dispatching-to-builtin-D.patch
│   ├── 0067-scx-Always-set-task-scx-weight-before-enable.patch
│   ├── 0068-scx-Call-enable-disable-on-entry-exit-to-scx.patch
│   ├── 0069-scx-Rename-prep_enable-and-cancel_enable-add-exit_ta.patch
│   ├── 0070-scx-Add-init_enable_count-testcase.patch
│   ├── 0071-scx-Move-sched_ext_entity.ddsq_id-out-of-modifiable-.patch
│   ├── 0072-scx-Add-missing-DSQ-fallback-test-files.patch
│   ├── 0073-scx-Claim-idle-core-in-scx_select_cpu_dfl-for-nr_cpu.patch
│   ├── 0074-scx-Make-select_cpu_dfl-test-a-bit-less-brittle.patch
│   ├── 0075-scx-Set-default-slice-for-default-select_cpu-dispatc.patch
│   ├── 0076-scx-Avoid-possible-deadlock-with-cpus_read_lock.patch
│   ├── 0077-scx-Use-READ-WRITE_ONCE-for-scx_watchdog_timeout-tim.patch
│   ├── 0078-scx-Rename-rq-scx.watchdog_list-and-friends-to-runna.patch
│   ├── 0079-scx-Factor-out-scx_ops_bypass-and-s-scx_ops_disablin.patch
│   ├── 0080-scx-Implement-bypass-depth-and-always-bypass-while-d.patch
│   ├── 0081-scx-Implement-turning-off-bypassing.patch
│   ├── 0082-scx-Optimize-scx_ops_bypass.patch
│   ├── 0083-scx-Expose-bypassing-state-to-userland.patch
│   ├── 0084-scx-s-register_ext_kfuncs-scx_init.patch
│   ├── 0085-scx-Bypass-while-PM-operations-are-in-progress.patch
│   ├── 0086-scx-Disabling-scx_bpf_kick_cpu-while-bypassing.patch
│   ├── 0087-Revert-scx-Avoid-possible-deadlock-with-cpus_read_lo.patch
│   ├── 0088-scx-Make-scx_task_state-handling-more-idiomatic.patch
│   ├── 0089-scx-Sync-schedulers-from-SCX-v0.1.5-74923c6cdbc3.patch
│   ├── 0090-scx-Fix-direct-dispatch-for-non-builtin-DSQs.patch
│   ├── 0091-scx-Keep-track-of-enq-flags-in-direct-dispatch.patch
│   ├── 0092-scx-Test-vtime-dispatching-from-ops.select_cpu.patch
│   └── 0093-scx-Implement-scx-selftests-framework.patch
├── sched-ext-patches-v8
│   └── 0001-sched-6.7-Implement-BPF-extensible-scheduler-class.patch
├── sched-ext-patches-v8-all
│   └── 0001-sched-ext-patches.patch
├── sched-ext-patches-v8-sep
│   ├── 0001-sched-6.7-Merge-BPF-changes.patch
│   ├── 0002-cgroup-Implement-cgroup_show_cftypes.patch
│   ├── 0003-sched-Restructure-sched_class-order-sanity-checks-in.patch
│   ├── 0004-sched-Allow-sched_cgroup_fork-to-fail-and-introduce-.patch
│   ├── 0005-sched-Add-sched_class-reweight_task.patch
│   ├── 0006-sched-Add-sched_class-switching_to-and-expose-check_.patch
│   ├── 0007-sched-Factor-out-cgroup-weight-conversion-functions.patch
│   ├── 0008-sched-Expose-css_tg-and-__setscheduler_prio.patch
│   ├── 0009-sched-Enumerate-CPU-cgroup-file-types.patch
│   ├── 0010-sched-Add-reason-to-sched_class-rq_-on-off-line.patch
│   ├── 0011-sched-Add-normal_policy.patch
│   ├── 0012-sched_ext-Add-boilerplate-for-extensible-scheduler-c.patch
│   ├── 0013-sched_ext-Implement-BPF-extensible-scheduler-class.patch
│   ├── 0014-sched_ext-Add-scx_simple-and-scx_example_qmap-exampl.patch
│   ├── 0015-sched_ext-Add-sysrq-S-which-disables-the-BPF-schedul.patch
│   ├── 0016-sched_ext-Implement-runnable-task-stall-watchdog.patch
│   ├── 0017-sched_ext-Allow-BPF-schedulers-to-disallow-specific-.patch
│   ├── 0018-sched_ext-Allow-BPF-schedulers-to-switch-all-eligibl.patch
│   ├── 0019-sched_ext-Print-sched_ext-info-when-dumping-stack.patch
│   ├── 0020-sched_ext-Implement-scx_bpf_kick_cpu-and-task-preemp.patch
│   ├── 0021-sched_ext-Add-a-central-scheduler-which-makes-all-sc.patch
│   ├── 0022-sched_ext-Make-watchdog-handle-ops.dispatch-looping-.patch
│   ├── 0023-sched_ext-Add-task-state-tracking-operations.patch
│   ├── 0024-sched_ext-Implement-tickless-support.patch
│   ├── 0025-sched_ext-Track-tasks-that-are-subjects-of-the-in-fl.patch
│   ├── 0026-sched_ext-Add-cgroup-support.patch
│   ├── 0027-sched_ext-Add-a-cgroup-based-core-scheduling-schedul.patch
│   ├── 0028-sched_ext-Add-a-cgroup-scheduler-which-uses-flattene.patch
│   ├── 0029-sched_ext-Implement-SCX_KICK_WAIT.patch
│   ├── 0030-sched_ext-Implement-sched_ext_ops.cpu_acquire-releas.patch
│   ├── 0031-sched_ext-Implement-sched_ext_ops.cpu_online-offline.patch
│   ├── 0032-sched_ext-Implement-core-sched-support.patch
│   ├── 0033-sched_ext-Add-vtime-ordered-priority-queue-to-dispat.patch
│   ├── 0034-sched_ext-Documentation-scheduler-Document-extensibl.patch
│   ├── 0035-sched_ext-Add-a-basic-userland-vruntime-scheduler.patch
│   ├── 0036-sched_ext-Add-scx_rusty-a-rust-userspace-hybrid-sche.patch
│   ├── 0037-sched_ext-Add-scx_layered-a-highly-configurable-mult.patch
│   ├── 0038-scx-Move-scx_ops_enable_state_str-outside-CONFIG_SCH.patch
│   ├── 0039-scx-Fix-a-straggling-atomic64_set.patch
│   ├── 0040-scx-Use-.bpf.-sub-skel.h-suffix-instead-of-.-sub-ske.patch
│   ├── 0041-scx-Add-s-uSIZE-typedefs-in-scx_common.h.patch
│   ├── 0042-scx_-rusty-layered-Generate-skel-file-in-OUT_DIR.patch
│   ├── 0043-scx_-rusty-layered-ravg_read-is-now-provided-by-scx_.patch
│   ├── 0044-scx_-rusty-layered-Make-naming-and-build-consistent-.patch
│   ├── 0045-scx_-rusty-layered-Run-bindgen-s-clang-with-CLANG_CF.patch
│   ├── 0046-scx_-rusty-layered-Factor-out-build.rs-s-into-scx_ut.patch
│   ├── 0047-scx_-rusty-layered-Follow-scx_utils-BpfBuilder-API-u.patch
│   ├── 0048-scx_-layered-rusty-Minor-build-updates.patch
│   ├── 0049-scx-Move-common-headers-under-include-scx.patch
│   ├── 0050-scx-More-include-path-and-build-updates.patch
│   ├── 0051-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0052-scx-Disable-vtime-ordering-for-internal-DSQs.patch
│   ├── 0053-scx-Enforce-either-or-usage-of-DSQ-FIFO-PRIQ-dispatc.patch
│   ├── 0054-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0055-scx-Remove-now-unused-rb_node-from-first_local_task.patch
│   ├── 0056-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0057-scx-Add-missing-to-error-invocation-in-Makefile.patch
│   ├── 0058-scx-Add-skeleton-for-scx-testing-framework.patch
│   ├── 0059-kernfs-convert-kernfs_idr_lock-to-an-irq-safe-raw-sp.patch
│   ├── 0060-sched_ext-fix-race-in-scx_move_task-with-exiting-tas.patch
│   ├── 0061-scx-Support-direct-dispatching-from-ops.select_cpu.patch
│   ├── 0062-scx-Remove-SCX_ENQ_LOCAL-flag.patch
│   ├── 0063-scx-Add-scx_bpf_select_cpu_dfl-kfunc.patch
│   ├── 0064-scx-Add-selftests-for-new-select_cpu-dispatch-semant.patch
│   ├── 0065-scx-Error-for-a-priq-builtin-DSQ-in-dispatch_enqueue.patch
│   ├── 0066-scx-Add-testcases-for-vtime-dispatching-to-builtin-D.patch
│   ├── 0067-scx-Always-set-task-scx-weight-before-enable.patch
│   ├── 0068-scx-Call-enable-disable-on-entry-exit-to-scx.patch
│   ├── 0069-scx-Rename-prep_enable-and-cancel_enable-add-exit_ta.patch
│   ├── 0070-scx-Add-init_enable_count-testcase.patch
│   ├── 0071-scx-Move-sched_ext_entity.ddsq_id-out-of-modifiable-.patch
│   ├── 0072-scx-Add-missing-DSQ-fallback-test-files.patch
│   ├── 0073-scx-Claim-idle-core-in-scx_select_cpu_dfl-for-nr_cpu.patch
│   ├── 0074-scx-Make-select_cpu_dfl-test-a-bit-less-brittle.patch
│   ├── 0075-scx-Set-default-slice-for-default-select_cpu-dispatc.patch
│   ├── 0076-scx-Avoid-possible-deadlock-with-cpus_read_lock.patch
│   ├── 0077-scx-Use-READ-WRITE_ONCE-for-scx_watchdog_timeout-tim.patch
│   ├── 0078-scx-Rename-rq-scx.watchdog_list-and-friends-to-runna.patch
│   ├── 0079-scx-Factor-out-scx_ops_bypass-and-s-scx_ops_disablin.patch
│   ├── 0080-scx-Implement-bypass-depth-and-always-bypass-while-d.patch
│   ├── 0081-scx-Implement-turning-off-bypassing.patch
│   ├── 0082-scx-Optimize-scx_ops_bypass.patch
│   ├── 0083-scx-Expose-bypassing-state-to-userland.patch
│   ├── 0084-scx-s-register_ext_kfuncs-scx_init.patch
│   ├── 0085-scx-Bypass-while-PM-operations-are-in-progress.patch
│   ├── 0086-scx-Disabling-scx_bpf_kick_cpu-while-bypassing.patch
│   ├── 0087-Revert-scx-Avoid-possible-deadlock-with-cpus_read_lo.patch
│   ├── 0088-scx-Make-scx_task_state-handling-more-idiomatic.patch
│   ├── 0089-scx-Sync-schedulers-from-SCX-v0.1.5-74923c6cdbc3.patch
│   ├── 0090-scx-Fix-direct-dispatch-for-non-builtin-DSQs.patch
│   ├── 0091-scx-Keep-track-of-enq-flags-in-direct-dispatch.patch
│   ├── 0092-scx-Test-vtime-dispatching-from-ops.select_cpu.patch
│   ├── 0093-scx-Implement-scx-selftests-framework.patch
│   ├── 0094-scx-Convert-remaining-testcases-to-use-new-framework.patch
│   ├── 0095-scx-Update-ddsp-testcases-to-check-for-error-exits.patch
│   └── 0096-scx-Copy-scx_exit_kind-to-scx_test.h.patch
├── sched-ext-patches-v9
│   └── 0001-sched-6.7-Implement-BPF-extensible-scheduler-class.patch
├── sched-ext-patches-v9-all
│   └── 0001-sched-ext-patches.patch
├── sched-ext-patches-v9-sep
│   ├── 0001-sched-6.7-Merge-BPF-changes.patch
│   ├── 0002-cgroup-Implement-cgroup_show_cftypes.patch
│   ├── 0003-sched-Restructure-sched_class-order-sanity-checks-in.patch
│   ├── 0004-sched-Allow-sched_cgroup_fork-to-fail-and-introduce-.patch
│   ├── 0005-sched-Add-sched_class-reweight_task.patch
│   ├── 0006-sched-Add-sched_class-switching_to-and-expose-check_.patch
│   ├── 0007-sched-Factor-out-cgroup-weight-conversion-functions.patch
│   ├── 0008-sched-Expose-css_tg-and-__setscheduler_prio.patch
│   ├── 0009-sched-Enumerate-CPU-cgroup-file-types.patch
│   ├── 0010-sched-Add-reason-to-sched_class-rq_-on-off-line.patch
│   ├── 0011-sched-Add-normal_policy.patch
│   ├── 0012-sched_ext-Add-boilerplate-for-extensible-scheduler-c.patch
│   ├── 0013-sched_ext-Implement-BPF-extensible-scheduler-class.patch
│   ├── 0014-sched_ext-Add-scx_simple-and-scx_example_qmap-exampl.patch
│   ├── 0015-sched_ext-Add-sysrq-S-which-disables-the-BPF-schedul.patch
│   ├── 0016-sched_ext-Implement-runnable-task-stall-watchdog.patch
│   ├── 0017-sched_ext-Allow-BPF-schedulers-to-disallow-specific-.patch
│   ├── 0018-sched_ext-Allow-BPF-schedulers-to-switch-all-eligibl.patch
│   ├── 0019-sched_ext-Print-sched_ext-info-when-dumping-stack.patch
│   ├── 0020-sched_ext-Implement-scx_bpf_kick_cpu-and-task-preemp.patch
│   ├── 0021-sched_ext-Add-a-central-scheduler-which-makes-all-sc.patch
│   ├── 0022-sched_ext-Make-watchdog-handle-ops.dispatch-looping-.patch
│   ├── 0023-sched_ext-Add-task-state-tracking-operations.patch
│   ├── 0024-sched_ext-Implement-tickless-support.patch
│   ├── 0025-sched_ext-Track-tasks-that-are-subjects-of-the-in-fl.patch
│   ├── 0026-sched_ext-Add-cgroup-support.patch
│   ├── 0027-sched_ext-Add-a-cgroup-based-core-scheduling-schedul.patch
│   ├── 0028-sched_ext-Add-a-cgroup-scheduler-which-uses-flattene.patch
│   ├── 0029-sched_ext-Implement-SCX_KICK_WAIT.patch
│   ├── 0030-sched_ext-Implement-sched_ext_ops.cpu_acquire-releas.patch
│   ├── 0031-sched_ext-Implement-sched_ext_ops.cpu_online-offline.patch
│   ├── 0032-sched_ext-Implement-core-sched-support.patch
│   ├── 0033-sched_ext-Add-vtime-ordered-priority-queue-to-dispat.patch
│   ├── 0034-sched_ext-Documentation-scheduler-Document-extensibl.patch
│   ├── 0035-sched_ext-Add-a-basic-userland-vruntime-scheduler.patch
│   ├── 0036-sched_ext-Add-scx_rusty-a-rust-userspace-hybrid-sche.patch
│   ├── 0037-sched_ext-Add-scx_layered-a-highly-configurable-mult.patch
│   ├── 0038-scx-Move-scx_ops_enable_state_str-outside-CONFIG_SCH.patch
│   ├── 0039-scx-Fix-a-straggling-atomic64_set.patch
│   ├── 0040-scx-Use-.bpf.-sub-skel.h-suffix-instead-of-.-sub-ske.patch
│   ├── 0041-scx-Add-s-uSIZE-typedefs-in-scx_common.h.patch
│   ├── 0042-scx_-rusty-layered-Generate-skel-file-in-OUT_DIR.patch
│   ├── 0043-scx_-rusty-layered-ravg_read-is-now-provided-by-scx_.patch
│   ├── 0044-scx_-rusty-layered-Make-naming-and-build-consistent-.patch
│   ├── 0045-scx_-rusty-layered-Run-bindgen-s-clang-with-CLANG_CF.patch
│   ├── 0046-scx_-rusty-layered-Factor-out-build.rs-s-into-scx_ut.patch
│   ├── 0047-scx_-rusty-layered-Follow-scx_utils-BpfBuilder-API-u.patch
│   ├── 0048-scx_-layered-rusty-Minor-build-updates.patch
│   ├── 0049-scx-Move-common-headers-under-include-scx.patch
│   ├── 0050-scx-More-include-path-and-build-updates.patch
│   ├── 0051-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0052-scx-Disable-vtime-ordering-for-internal-DSQs.patch
│   ├── 0053-scx-Enforce-either-or-usage-of-DSQ-FIFO-PRIQ-dispatc.patch
│   ├── 0054-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0055-scx-Remove-now-unused-rb_node-from-first_local_task.patch
│   ├── 0056-scx_sync-Sync-scheduler-changes-from-https-github.co.patch
│   ├── 0057-scx-Add-missing-to-error-invocation-in-Makefile.patch
│   ├── 0058-scx-Add-skeleton-for-scx-testing-framework.patch
│   ├── 0059-kernfs-convert-kernfs_idr_lock-to-an-irq-safe-raw-sp.patch
│   ├── 0060-sched_ext-fix-race-in-scx_move_task-with-exiting-tas.patch
│   ├── 0061-scx-Support-direct-dispatching-from-ops.select_cpu.patch
│   ├── 0062-scx-Remove-SCX_ENQ_LOCAL-flag.patch
│   ├── 0063-scx-Add-scx_bpf_select_cpu_dfl-kfunc.patch
│   ├── 0064-scx-Add-selftests-for-new-select_cpu-dispatch-semant.patch
│   ├── 0065-scx-Error-for-a-priq-builtin-DSQ-in-dispatch_enqueue.patch
│   ├── 0066-scx-Add-testcases-for-vtime-dispatching-to-builtin-D.patch
│   ├── 0067-scx-Always-set-task-scx-weight-before-enable.patch
│   ├── 0068-scx-Call-enable-disable-on-entry-exit-to-scx.patch
│   ├── 0069-scx-Rename-prep_enable-and-cancel_enable-add-exit_ta.patch
│   ├── 0070-scx-Add-init_enable_count-testcase.patch
│   ├── 0071-scx-Move-sched_ext_entity.ddsq_id-out-of-modifiable-.patch
│   ├── 0072-scx-Add-missing-DSQ-fallback-test-files.patch
│   ├── 0073-scx-Claim-idle-core-in-scx_select_cpu_dfl-for-nr_cpu.patch
│   ├── 0074-scx-Make-select_cpu_dfl-test-a-bit-less-brittle.patch
│   ├── 0075-scx-Set-default-slice-for-default-select_cpu-dispatc.patch
│   ├── 0076-scx-Avoid-possible-deadlock-with-cpus_read_lock.patch
│   ├── 0077-scx-Use-READ-WRITE_ONCE-for-scx_watchdog_timeout-tim.patch
│   ├── 0078-scx-Rename-rq-scx.watchdog_list-and-friends-to-runna.patch
│   ├── 0079-scx-Factor-out-scx_ops_bypass-and-s-scx_ops_disablin.patch
│   ├── 0080-scx-Implement-bypass-depth-and-always-bypass-while-d.patch
│   ├── 0081-scx-Implement-turning-off-bypassing.patch
│   ├── 0082-scx-Optimize-scx_ops_bypass.patch
│   ├── 0083-scx-Expose-bypassing-state-to-userland.patch
│   ├── 0084-scx-s-register_ext_kfuncs-scx_init.patch
│   ├── 0085-scx-Bypass-while-PM-operations-are-in-progress.patch
│   ├── 0086-scx-Disabling-scx_bpf_kick_cpu-while-bypassing.patch
│   ├── 0087-Revert-scx-Avoid-possible-deadlock-with-cpus_read_lo.patch
│   ├── 0088-scx-Make-scx_task_state-handling-more-idiomatic.patch
│   ├── 0089-scx-Sync-schedulers-from-SCX-v0.1.5-74923c6cdbc3.patch
│   ├── 0090-scx-Fix-direct-dispatch-for-non-builtin-DSQs.patch
│   ├── 0091-scx-Keep-track-of-enq-flags-in-direct-dispatch.patch
│   ├── 0092-scx-Test-vtime-dispatching-from-ops.select_cpu.patch
│   ├── 0093-scx-Implement-scx-selftests-framework.patch
│   ├── 0094-scx-Convert-remaining-testcases-to-use-new-framework.patch
│   ├── 0095-scx-Update-ddsp-testcases-to-check-for-error-exits.patch
│   ├── 0096-scx-Copy-scx_exit_kind-to-scx_test.h.patch
│   ├── 0097-scx-Narrow-cpus_read_lock-critical-section-in-scx_op.patch
│   ├── 0098-scx-Reorder-scx_fork_rwsem-cpu_hotplug_lock-and-scx_.patch
│   └── 0099-scx-Sync-from-scx-repo.patch
├── sound-patches
│   └── 0001-sound-6.7-merge-changes-from-dev-tree.patch
├── sound-patches-all
│   └── 0001-sound-patches.patch
├── sound-patches-sep
│   ├── 0001-ALSA-scarlett2-Update-maintainer-info.patch
│   ├── 0002-ALSA-scarlett2-Add-missing-error-check-to-scarlett2_.patch
│   ├── 0003-ALSA-scarlett2-Add-missing-error-check-to-scarlett2_.patch
│   ├── 0004-ALSA-scarlett2-Add-missing-error-checks-to-_ctl_get.patch
│   ├── 0005-ALSA-scarlett2-Add-clamp-in-scarlett2_mixer_ctl_put.patch
│   ├── 0006-ALSA-scarlett2-Add-missing-mutex-lock-around-get-met.patch
│   ├── 0007-ALSA-scarlett2-Add-defines-for-firmware-upgrade.patch
│   ├── 0008-ALSA-scarlett2-Retrieve-useful-flash-segment-numbers.patch
│   ├── 0009-ALSA-scarlett2-Add-skeleton-hwdep-ioctl-interface.patch
│   ├── 0010-ALSA-scarlett2-Add-ioctl-commands-to-erase-flash-seg.patch
│   ├── 0011-ALSA-scarlett2-Add-support-for-uploading-new-firmwar.patch
│   ├── 0012-ALSA-scarlett2-Simplify-enums-by-removing-explicit-v.patch
│   ├── 0013-ALSA-scarlett2-Infer-has_msd_mode-from-config-items.patch
│   ├── 0014-ALSA-scarlett2-Infer-standalone-switch-from-config-i.patch
│   ├── 0015-ALSA-scarlett2-Check-for-phantom-persistence-config-.patch
│   ├── 0016-ALSA-scarlett2-Check-presence-of-mixer-using-mux_ass.patch
│   ├── 0017-ALSA-scarlett2-Add-config-set-struct.patch
│   ├── 0018-ALSA-scarlett2-Remove-scarlett2_config_sets-array.patch
│   ├── 0019-ALSA-scarlett2-Add-check-for-config_item-presence.patch
│   ├── 0020-ALSA-scarlett2-Refactor-scarlett2_usb_set_config.patch
│   ├── 0021-ALSA-scarlett2-Refactor-scarlett2_config_save.patch
│   ├── 0022-ALSA-scarlett2-Formatting-fixes.patch
│   ├── 0023-ALSA-scarlett2-Parameterise-notifications.patch
│   ├── 0024-ALSA-scarlett2-Change-num_mux_-from-int-to-u8.patch
│   ├── 0025-ALSA-scarlett2-Refactor-common-port_count-lookups.patch
│   ├── 0026-ALSA-scarlett2-Remove-struct-scarlett2_usb_volume_st.patch
│   ├── 0027-ALSA-scarlett2-Split-dim_mute_update-from-vol_update.patch
│   ├── 0028-ALSA-scarlett2-Remove-line_out_hw_vol-device-info-en.patch
│   ├── 0029-ALSA-scarlett2-Allow-for-interfaces-without-per-chan.patch
│   ├── 0030-ALSA-scarlett2-Add-scarlett2_mixer_value_to_db.patch
│   ├── 0031-ALSA-scarlett2-Add-define-for-SCARLETT2_MIX_MAX.patch
│   ├── 0032-ALSA-scarlett2-Rename-db_scale_scarlett2_gain-to-vol.patch
│   ├── 0033-ALSA-scarlett2-Split-input_other-into-level-pad-air-.patch
│   ├── 0034-ALSA-scarlett2-Split-direct_monitor-out-from-monitor.patch
│   ├── 0035-ALSA-scarlett2-Remove-repeated-elem-head.mixer-refer.patch
│   ├── 0036-ALSA-scarlett2-Add-support-for-air-phantom-control-o.patch
│   ├── 0037-ALSA-scarlett2-Add-support-for-Gen-4-style-parameter.patch
│   ├── 0038-ALSA-scarlett2-Allow-for-controls-with-a-mute-mode.patch
│   ├── 0039-ALSA-scarlett2-Add-support-for-Air-Presence-Drive-op.patch
│   ├── 0040-ALSA-scarlett2-Add-support-for-software-controllable.patch
│   ├── 0041-ALSA-scarlett2-Minor-refactor-MSD-mode-check.patch
│   ├── 0042-ALSA-scarlett2-Disable-input-controls-while-autogain.patch
│   ├── 0043-ALSA-scarlett2-Disable-autogain-during-phantom-power.patch
│   ├── 0044-ALSA-scarlett2-Add-power-status-control.patch
│   ├── 0045-ALSA-scarlett2-Store-mix_ctls-for-Gen-4-Direct-Monit.patch
│   ├── 0046-ALSA-scarlett2-Handle-Gen-4-Direct-Monitor-mix-updat.patch
│   ├── 0047-ALSA-scarlett2-Add-support-for-custom-Gen-4-Direct-M.patch
│   ├── 0048-ALSA-scarlett2-Add-support-for-DSP-mux-channels.patch
│   ├── 0049-ALSA-scarlett2-Rename-DSP-mux-channels.patch
│   ├── 0050-ALSA-scarlett2-Add-minimum-firmware-version-check.patch
│   ├── 0051-ALSA-scarlett2-Add-R-O-headphone-volume-control.patch
│   ├── 0052-ALSA-scarlett2-Add-support-for-Solo-2i2-and-4i4-Gen-.patch
│   └── 0053-ALSA-scarlett2-Add-PCM-Input-Switch-for-Solo-Gen-4.patch
├── spadfs-patches
│   └── 0001-spadfs-6.7-merge-v1.0.18.patch
├── spadfs-patches-v2
│   └── 0001-spadfs-6.7-merge-v1.0.18.patch
├── steamdeck-patches
│   └── 0001-x86-Introduce-Steam-Deck-Patches.patch
├── uksmd-cachyos-patches
│   └── 0001-mm-expose-per-process-KSM-control-via-syscalls.patch
├── userfaultfd-patches
│   └── 0001-mm-6.7-add-userfaultfd-remap-option.patch
├── userfaultfd-patches-all
│   └── 0001-userfaultfd-patches.patch
├── userfaultfd-patches-sep
│   ├── 0001-mm-rmap-support-move-to-different-root-anon_vma-in-f.patch
│   ├── 0002-userfaultfd-UFFDIO_MOVE-uABI.patch
│   ├── 0003-selftests-mm-call-uffd_test_ctx_clear-at-the-end-of-.patch
│   ├── 0004-selftests-mm-add-uffd_test_case_ops-to-allow-test-ca.patch
│   └── 0005-selftests-mm-add-UFFDIO_MOVE-ioctl-test.patch
├── userfaultfd-patches-v2
│   └── 0001-mm-6.7-add-userfaultfd-remap-option.patch
├── userfaultfd-patches-v2-all
│   └── 0001-userfaultfd-patches.patch
├── userfaultfd-patches-v2-sep
│   ├── 0001-mm-rmap-support-move-to-different-root-anon_vma-in-f.patch
│   ├── 0002-userfaultfd-UFFDIO_MOVE-uABI.patch
│   ├── 0003-selftests-mm-call-uffd_test_ctx_clear-at-the-end-of-.patch
│   ├── 0004-selftests-mm-add-uffd_test_case_ops-to-allow-test-ca.patch
│   ├── 0005-selftests-mm-add-UFFDIO_MOVE-ioctl-test.patch
│   └── 0006-userfaultfd-avoid-huge_zero_page-in-UFFDIO_MOVE.patch
├── v4l2loopback-patches
│   └── 0001-media-v4l2-core-add-v4l2loopback.patch
├── winesync-patches
│   └── 0001-winesync-Introduce-the-winesync-driver-and-character.patch
├── xanmod-patches
│   └── 0001-xanmod-patches.patch
├── xanmod-patches-sep
│   ├── 0001-XANMOD-sched-core-Add-yield_type-sysctl-to-reduce-or.patch
│   ├── 0002-XANMOD-rcu-Change-sched_setscheduler_nocheck-calls-t.patch
│   ├── 0003-XANMOD-block-mq-deadline-Increase-write-priority-to-.patch
│   ├── 0004-XANMOD-block-mq-deadline-Disable-front_merges-by-def.patch
│   ├── 0005-XANMOD-block-set-rq_affinity-to-force-full-multithre.patch
│   ├── 0006-XANMOD-dcache-cache_pressure-50-decreases-the-rate-a.patch
│   ├── 0007-XANMOD-mm-vmscan-vm_swappiness-30-decreases-the-amou.patch
│   ├── 0008-XANMOD-sched-autogroup-Add-kernel-parameter-and-conf.patch
│   ├── 0009-XANMOD-cpufreq-tunes-ondemand-and-conservative-gover.patch
│   ├── 0010-XANMOD-lib-kconfig.debug-disable-default-CONFIG_SYMB.patch
│   ├── 0011-XANMOD-Makefile-Disable-GCC-vectorization-on-trees.patch
│   ├── 0012-XANMOD-scripts-setlocalversion-remove-tag-for-git-re.patch
│   └── 0013-XANMOD-scripts-setlocalversion-Move-localversion-fil.patch
├── zen-patches
│   └── 0001-zen-patches.patch
├── zen-patches-sep
│   ├── 0001-ZEN-Add-OpenRGB-patches.patch
│   ├── 0002-ZEN-Add-ACS-override-support.patch
│   ├── 0003-ZEN-PCI-Add-Intel-remapped-NVMe-device-support.patch
│   ├── 0004-ZEN-Disable-stack-conservation-for-GCC.patch
│   ├── 0005-ZEN-Input-evdev-use-call_rcu-when-detaching-client.patch
│   ├── 0006-ZEN-Add-sysctl-and-CONFIG-to-disallow-unprivileged-C.patch
│   ├── 0007-ZEN-cpufreq-Remove-schedutil-dependency-on-Intel-AMD.patch
│   ├── 0008-ZEN-intel-pstate-Implement-enable-parameter.patch
│   ├── 0009-ZEN-mm-Disable-watermark-boosting-by-default.patch
│   ├── 0010-ZEN-mm-Stop-kswapd-early-when-nothing-s-waiting-for-.patch
│   ├── 0011-ZEN-mm-Increment-kswapd_waiters-for-throttled-direct.patch
│   ├── 0012-i2c-i2c-nct6775-fix-Wimplicit-fallthrough.patch
│   ├── 0013-ZEN-Set-default-max-map-count-to-INT_MAX-5.patch
│   └── 0014-ZEN-mm-Don-t-hog-the-CPU-and-zone-lock-in-rmqueue_bu.patch
├── zstd-cachyos-patches
│   └── 0001-zstd-cachyos-patches.patch
├── zstd-cachyos-patches-sep
│   ├── 0001-zstd-6.7-merge-v1.5.5-into-kernel-tree.patch
│   └── 0002-zstd-fix-g_debuglevel-export-warning.patch
├── zstd-cachyos-patches-v2
│   └── 0001-zstd-cachyos-patches.patch
├── zstd-cachyos-patches-v2-sep
│   ├── 0001-zstd-6.7-merge-v1.5.5-into-kernel-tree.patch
│   ├── 0002-zstd-fix-g_debuglevel-export-warning.patch
│   └── 0003-lib-zstd-Refactor-intentional-wrap-around-test.patch
├── zstd-dev-patches
│   └── 0001-zstd-6.7-merge-changes-from-dev-tree.patch
├── zstd-dev-patches-v2
│   └── 0001-zstd-dev-patches.patch
└── zstd-dev-patches-v2-sep
    ├── 0001-zstd-6.7-merge-changes-from-dev-tree.patch
    └── 0002-lib-zstd-Refactor-intentional-wrap-around-test.patch

253 directories, 4467 files
