From 7c3cfda3b6d480a807e7546ae4a57399ababfc8f Mon Sep 17 00:00:00 2001
From: Elizabeth Figura <zfigura@codeweavers.com>
Date: Wed, 19 Jan 2022 19:10:12 -0600
Subject: [PATCH 15/32] ntsync: Introduce NTSYNC_IOC_PULSE_EVENT.

This corresponds to the NT syscall NtPulseEvent().
---
 drivers/misc/ntsync.c       | 11 +++++++++--
 include/uapi/linux/ntsync.h |  2 ++
 2 files changed, 11 insertions(+), 2 deletions(-)

diff --git a/drivers/misc/ntsync.c b/drivers/misc/ntsync.c
index 151714dee..45405d01e 100644
--- a/drivers/misc/ntsync.c
+++ b/drivers/misc/ntsync.c
@@ -703,7 +703,8 @@ static int ntsync_kill_owner(struct ntsync_device *dev, void __user *argp)
 	return 0;
 }
 
-static int ntsync_set_event(struct ntsync_device *dev, void __user *argp)
+static int ntsync_set_event(struct ntsync_device *dev, void __user *argp,
+			    bool pulse)
 {
 	struct ntsync_event_args __user *user_args = argp;
 	struct ntsync_event_args args;
@@ -725,6 +726,8 @@ static int ntsync_set_event(struct ntsync_device *dev, void __user *argp)
 		event->u.event.signaled = true;
 		try_wake_all_obj(dev, event);
 		try_wake_any_event(event);
+		if (pulse)
+			event->u.event.signaled = false;
 
 		spin_unlock(&event->lock);
 		spin_unlock(&dev->wait_all_lock);
@@ -734,6 +737,8 @@ static int ntsync_set_event(struct ntsync_device *dev, void __user *argp)
 		prev_state = event->u.event.signaled;
 		event->u.event.signaled = true;
 		try_wake_any_event(event);
+		if (pulse)
+			event->u.event.signaled = false;
 
 		spin_unlock(&event->lock);
 	}
@@ -1072,6 +1077,8 @@ static long ntsync_char_ioctl(struct file *file, unsigned int cmd,
 		return ntsync_delete(dev, argp);
 	case NTSYNC_IOC_KILL_OWNER:
 		return ntsync_kill_owner(dev, argp);
+	case NTSYNC_IOC_PULSE_EVENT:
+		return ntsync_set_event(dev, argp, true);
 	case NTSYNC_IOC_PUT_MUTEX:
 		return ntsync_put_mutex(dev, argp);
 	case NTSYNC_IOC_PUT_SEM:
@@ -1083,7 +1090,7 @@ static long ntsync_char_ioctl(struct file *file, unsigned int cmd,
 	case NTSYNC_IOC_RESET_EVENT:
 		return ntsync_reset_event(dev, argp);
 	case NTSYNC_IOC_SET_EVENT:
-		return ntsync_set_event(dev, argp);
+		return ntsync_set_event(dev, argp, false);
 	case NTSYNC_IOC_WAIT_ALL:
 		return ntsync_wait_all(dev, argp);
 	case NTSYNC_IOC_WAIT_ANY:
diff --git a/include/uapi/linux/ntsync.h b/include/uapi/linux/ntsync.h
index 806125856..30f56b438 100644
--- a/include/uapi/linux/ntsync.h
+++ b/include/uapi/linux/ntsync.h
@@ -65,5 +65,7 @@ struct ntsync_wait_args {
 					      struct ntsync_event_args)
 #define NTSYNC_IOC_RESET_EVENT		_IOWR(NTSYNC_IOC_BASE, 12, \
 					      struct ntsync_event_args)
+#define NTSYNC_IOC_PULSE_EVENT		_IOWR(NTSYNC_IOC_BASE, 13, \
+					      struct ntsync_event_args)
 
 #endif
-- 
2.43.0.232.ge79552d197

