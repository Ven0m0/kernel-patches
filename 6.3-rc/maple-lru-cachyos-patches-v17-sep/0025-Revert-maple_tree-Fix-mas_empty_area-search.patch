From 3783c5fe97fd7510189a2eb08acad027714ee0aa Mon Sep 17 00:00:00 2001
From: Piotr Gorski <lucjan.lucjanov@gmail.com>
Date: Fri, 21 Apr 2023 17:18:13 +0200
Subject: [PATCH 25/31] Revert "maple_tree: Fix mas_empty_area() search"

This reverts commit b2719507c1f1839f29e0581ddf9e34dc0a48b4c1.

Signed-off-by: Piotr Gorski <lucjan.lucjanov@gmail.com>
---
 lib/maple_tree.c | 20 +++++++++-----------
 1 file changed, 9 insertions(+), 11 deletions(-)

diff --git a/lib/maple_tree.c b/lib/maple_tree.c
index 110a36479..02c15ae3b 100644
--- a/lib/maple_tree.c
+++ b/lib/maple_tree.c
@@ -5032,10 +5032,10 @@ static inline bool mas_anode_descend(struct ma_state *mas, unsigned long size)
 {
 	enum maple_type type = mte_node_type(mas->node);
 	unsigned long pivot, min, gap = 0;
-	unsigned char offset, data_end;
-	unsigned long *gaps, *pivots;
-	void __rcu **slots;
-	struct maple_node *node;
+	unsigned char offset;
+	unsigned long *gaps;
+	unsigned long *pivots = ma_pivots(mas_mn(mas), type);
+	void __rcu **slots = ma_slots(mas_mn(mas), type);
 	bool found = false;
 
 	if (ma_is_dense(type)) {
@@ -5043,15 +5043,13 @@ static inline bool mas_anode_descend(struct ma_state *mas, unsigned long size)
 		return true;
 	}
 
-	node = mas_mn(mas);
-	pivots = ma_pivots(node, type);
-	slots = ma_slots(node, type);
-	gaps = ma_gaps(node, type);
+	gaps = ma_gaps(mte_to_node(mas->node), type);
 	offset = mas->offset;
 	min = mas_safe_min(mas, pivots, offset);
-	data_end = ma_data_end(node, type, pivots, mas->max);
-	for (; offset <= data_end; offset++) {
-		pivot = mas_logical_pivot(mas, pivots, offset, type);
+	for (; offset < mt_slots[type]; offset++) {
+		pivot = mas_safe_pivot(mas, pivots, offset, type);
+		if (offset && !pivot)
+			break;
 
 		/* Not within lower bounds */
 		if (mas->index > pivot)
-- 
2.40.0.71.g950264636c

