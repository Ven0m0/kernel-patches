From b16577574de9b0690e20f80e41ed8b3cfd5d11fd Mon Sep 17 00:00:00 2001
From: Alexander Potapenko <glider@google.com>
Date: Wed, 28 Sep 2022 14:14:53 +0200
Subject: [PATCH 47/49] fixup "x86: kmsan: handle CPU entry area"

Address comments that Marco left here:
https://github.com/google/kmsan/commit/466a27efa4f03c3cbe5c2508e6313a57a58e3f27
---
 arch/x86/include/asm/kmsan.h | 8 +++++++-
 arch/x86/mm/kmsan_shadow.c   | 6 ++----
 mm/kmsan/shadow.c            | 2 +-
 3 files changed, 10 insertions(+), 6 deletions(-)

diff --git a/arch/x86/include/asm/kmsan.h b/arch/x86/include/asm/kmsan.h
index c08e8e43c..8fa6ac0e2 100644
--- a/arch/x86/include/asm/kmsan.h
+++ b/arch/x86/include/asm/kmsan.h
@@ -18,10 +18,16 @@
 DECLARE_PER_CPU(char[CPU_ENTRY_AREA_SIZE], cpu_entry_area_shadow);
 DECLARE_PER_CPU(char[CPU_ENTRY_AREA_SIZE], cpu_entry_area_origin);
 
+/*
+ * Functions below are declared in the header to make sure they are inlined.
+ * They all are called from kmsan_get_metadata() for every memory access in
+ * the kernel, so speed is important here.
+ */
+
 /*
  * Compute metadata addresses for the CPU entry area on x86.
  */
-static inline void *kmsan_get_arch_meta_or_null(void *addr, bool is_origin)
+static inline void *arch_kmsan_get_meta_or_null(void *addr, bool is_origin)
 {
 	unsigned long addr64 = (unsigned long)addr;
 	char *metadata_array;
diff --git a/arch/x86/mm/kmsan_shadow.c b/arch/x86/mm/kmsan_shadow.c
index 56bdb9fe7..4c8213f81 100644
--- a/arch/x86/mm/kmsan_shadow.c
+++ b/arch/x86/mm/kmsan_shadow.c
@@ -4,7 +4,6 @@
  *
  * Copyright (C) 2022 Google LLC
  * Author: Alexander Potapenko <glider@google.com>
- *
  */
 
 #include <asm/cpu_entry_area.h>
@@ -14,9 +13,8 @@
  * Addresses within the CPU entry area (including e.g. exception stacks) do not
  * have struct page entries corresponding to them, so they need separate
  * handling.
- * kmsan_get_arch_meta_or_null() (declared in the header to aid inlining) maps
- * the addresses in CPU entry area to addresses in
- * cpu_entry_area_shadow/cpu_entry_area_origin.
+ * arch_kmsan_get_meta_or_null() (declared in the header) maps the addresses in
+ * CPU entry area to addresses in cpu_entry_area_shadow/cpu_entry_area_origin.
 */
 DEFINE_PER_CPU(char[CPU_ENTRY_AREA_SIZE], cpu_entry_area_shadow);
 DEFINE_PER_CPU(char[CPU_ENTRY_AREA_SIZE], cpu_entry_area_origin);
diff --git a/mm/kmsan/shadow.c b/mm/kmsan/shadow.c
index b3d8126b6..21e3e196e 100644
--- a/mm/kmsan/shadow.c
+++ b/mm/kmsan/shadow.c
@@ -136,7 +136,7 @@ void *kmsan_get_metadata(void *address, bool is_origin)
 	    kmsan_internal_is_module_addr(address))
 		return (void *)vmalloc_meta(address, is_origin);
 
-	ret = kmsan_get_arch_meta_or_null(address, is_origin);
+	ret = arch_kmsan_get_meta_or_null(address, is_origin);
 	if (ret)
 		return ret;
 
-- 
2.38.0.rc1.6.g4fd6c5e444

