From e3ebedd4b60c8277b88afb68342bf77be674d914 Mon Sep 17 00:00:00 2001
From: Matthew Wilcox <willy@infradead.org>
Date: Tue, 25 Jul 2023 15:31:17 +0100
Subject: [PATCH 04/16] 
 mm-drop-per-vma-lock-when-returning-vm_fault_retry-or-vm_fault_completed-fix

fix riscv

Link: https://lkml.kernel.org/r/CAJuCfpE6GWEx1rPBmNpUfoD5o-gNFz9-UFywzCE2PbEGBiVz7g@mail.gmail.com
Signed-off-by: Matthew Wilcox <willy@infradead.org>
Reported-by: Conor Dooley <conor.dooley@microchip.com>
  Closes: https://lkml.kernel.org/r/20230725-anaconda-that-ac3f79880af1@wendy
Cc: Suren Baghdasaryan <surenb@google.com>
Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
---
 arch/riscv/mm/fault.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/arch/riscv/mm/fault.c b/arch/riscv/mm/fault.c
index 6ea2cce4c..b82774958 100644
--- a/arch/riscv/mm/fault.c
+++ b/arch/riscv/mm/fault.c
@@ -297,7 +297,8 @@ void handle_page_fault(struct pt_regs *regs)
 	}
 
 	fault = handle_mm_fault(vma, addr, flags | FAULT_FLAG_VMA_LOCK, regs);
-	vma_end_read(vma);
+	if (!(fault & (VM_FAULT_RETRY | VM_FAULT_COMPLETED)))
+		vma_end_read(vma);
 
 	if (!(fault & VM_FAULT_RETRY)) {
 		count_vm_vma_lock_event(VMA_LOCK_SUCCESS);
-- 
2.41.0.159.g0bfa463d37

