From 8c52a19eb422326b62e5e07f379c90f85f3f5fc8 Mon Sep 17 00:00:00 2001
From: Oleksandr Natalenko <oleksandr@natalenko.name>
Date: Sun, 23 Jul 2023 13:57:51 +0200
Subject: [PATCH 3/3] Revert "io_uring: Use io_schedule* in cqring wait"

This reverts commit bd4f737b145d85c7183ec879ce46b57ce64362e1.
---
 io_uring/io_uring.c | 15 ++-------------
 1 file changed, 2 insertions(+), 13 deletions(-)

diff --git a/io_uring/io_uring.c b/io_uring/io_uring.c
index 7505de242..e8096d502 100644
--- a/io_uring/io_uring.c
+++ b/io_uring/io_uring.c
@@ -2489,8 +2489,6 @@ int io_run_task_work_sig(struct io_ring_ctx *ctx)
 static inline int io_cqring_wait_schedule(struct io_ring_ctx *ctx,
 					  struct io_wait_queue *iowq)
 {
-	int token, ret;
-
 	if (unlikely(READ_ONCE(ctx->check_cq)))
 		return 1;
 	if (unlikely(!llist_empty(&ctx->work_llist)))
@@ -2501,20 +2499,11 @@ static inline int io_cqring_wait_schedule(struct io_ring_ctx *ctx,
 		return -EINTR;
 	if (unlikely(io_should_wake(iowq)))
 		return 0;
-
-	/*
-	 * Use io_schedule_prepare/finish, so cpufreq can take into account
-	 * that the task is waiting for IO - turns out to be important for low
-	 * QD IO.
-	 */
-	token = io_schedule_prepare();
-	ret = 0;
 	if (iowq->timeout == KTIME_MAX)
 		schedule();
 	else if (!schedule_hrtimeout(&iowq->timeout, HRTIMER_MODE_ABS))
-		ret = -ETIME;
-	io_schedule_finish(token);
-	return ret;
+		return -ETIME;
+	return 0;
 }
 
 /*
-- 
2.41.0.159.g0bfa463d37

