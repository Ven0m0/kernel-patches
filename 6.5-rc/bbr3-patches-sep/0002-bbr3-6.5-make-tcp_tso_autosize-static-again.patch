From 0c8b174cacf9a972f80e06dd32d7f762b55d4526 Mon Sep 17 00:00:00 2001
From: Oleksandr Natalenko <oleksandr@natalenko.name>
Date: Wed, 26 Jul 2023 08:21:26 +0200
Subject: [PATCH 2/2] bbr3-6.5: make tcp_tso_autosize() static again

Signed-off-by: Oleksandr Natalenko <oleksandr@natalenko.name>
---
 include/net/tcp.h     | 4 ----
 net/ipv4/tcp_output.c | 4 ++--
 2 files changed, 2 insertions(+), 6 deletions(-)

diff --git a/include/net/tcp.h b/include/net/tcp.h
index e473caf40..8eb194559 100644
--- a/include/net/tcp.h
+++ b/include/net/tcp.h
@@ -622,10 +622,6 @@ bool tcp_schedule_loss_probe(struct sock *sk, bool advancing_rto);
 void tcp_skb_collapse_tstamp(struct sk_buff *skb,
 			     const struct sk_buff *next_skb);
 
-/* For BBRv1, for testing: */
-u32 tcp_tso_autosize(const struct sock *sk, unsigned int mss_now,
-		     int min_tso_segs);
-
 /* tcp_input.c */
 void tcp_rearm_rto(struct sock *sk);
 void tcp_synack_rtt_meas(struct sock *sk, struct request_sock *req);
diff --git a/net/ipv4/tcp_output.c b/net/ipv4/tcp_output.c
index e9a6ba853..2fb064057 100644
--- a/net/ipv4/tcp_output.c
+++ b/net/ipv4/tcp_output.c
@@ -1986,8 +1986,8 @@ static bool tcp_nagle_check(bool partial, const struct tcp_sock *tp,
  * for every 2^9 usec (aka 512 us) of RTT, so that the RTT-based allowance
  * is below 1500 bytes after 6 * ~500 usec = 3ms.
  */
-u32 tcp_tso_autosize(const struct sock *sk, unsigned int mss_now,
-		     int min_tso_segs)
+static u32 tcp_tso_autosize(const struct sock *sk, unsigned int mss_now,
+			    int min_tso_segs)
 {
 	unsigned long bytes;
 	u32 r;
-- 
2.41.0.159.g0bfa463d37

