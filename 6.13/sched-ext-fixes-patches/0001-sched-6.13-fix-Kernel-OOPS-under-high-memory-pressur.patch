From 04806d51d455356f737ed72e6dad49a1f46b1867 Mon Sep 17 00:00:00 2001
From: Piotr Gorski <lucjan.lucjanov@gmail.com>
Date: Thu, 23 Jan 2025 08:41:19 +0100
Subject: [PATCH] sched-6.13: fix Kernel OOPS under high memory pressure

Source: https://github.com/sched-ext/scx/issues/370#issuecomment-2608426827

Signed-off-by: Piotr Gorski <lucjan.lucjanov@gmail.com>
---
 kernel/sched/ext.c | 9 ++++++++-
 1 file changed, 8 insertions(+), 1 deletion(-)

diff --git a/kernel/sched/ext.c b/kernel/sched/ext.c
index 19813b387..72dbef850 100644
--- a/kernel/sched/ext.c
+++ b/kernel/sched/ext.c
@@ -4278,8 +4278,15 @@ void scx_move_task(struct task_struct *p)
 	 * cgroup_move(), because cgroup migrations never happen for PF_EXITING
 	 * tasks.
 	 */
-	if (task_group_is_autogroup(task_group(p)) || (p->flags & PF_EXITING))
+	if (task_group_is_autogroup(task_group(p)) || (p->flags & PF_EXITING)) {
+		if (WARN_ON_ONCE(p->scx.cgrp_moving_from)) {
+			pr_warn("scx_move_task: %s[%d] autogroup=%d exiting=%d\n",
+				p->comm, p->pid, task_group_is_autogroup(task_group(p)),
+				(bool)(p->flags & PF_EXITING));
+			p->scx.cgrp_moving_from = NULL;
+		}
 		return;
+	}
 
 	/*
 	 * @p must have ops.cgroup_prep_move() called on it and thus
-- 
2.48.1

