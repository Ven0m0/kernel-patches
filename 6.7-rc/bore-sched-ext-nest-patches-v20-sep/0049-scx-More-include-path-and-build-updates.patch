From c917e05faa3d965f6f48a45f3a94d28e29e20805 Mon Sep 17 00:00:00 2001
From: Tejun Heo <tj@kernel.org>
Date: Sun, 3 Dec 2023 14:32:53 -1000
Subject: [PATCH 49/86] scx: More include path and build updates

---
 tools/sched_ext/Makefile                       |  6 +++---
 tools/sched_ext/gnu/stubs.h                    |  1 -
 tools/sched_ext/include/bpf-compat/gnu/stubs.h | 11 +++++++++++
 tools/sched_ext/scx_flatcg.bpf.c               |  1 -
 tools/sched_ext/scx_layered/Cargo.toml         |  4 ++--
 tools/sched_ext/scx_rusty/Cargo.toml           |  4 ++--
 6 files changed, 18 insertions(+), 9 deletions(-)
 delete mode 100644 tools/sched_ext/gnu/stubs.h
 create mode 100644 tools/sched_ext/include/bpf-compat/gnu/stubs.h

diff --git a/tools/sched_ext/Makefile b/tools/sched_ext/Makefile
index 4cfdf4ece..b9e42771a 100644
--- a/tools/sched_ext/Makefile
+++ b/tools/sched_ext/Makefile
@@ -122,7 +122,8 @@ endef
 
 BPF_CFLAGS = -g -D__TARGET_ARCH_$(SRCARCH)					\
 	     $(if $(IS_LITTLE_ENDIAN),-mlittle-endian,-mbig-endian)		\
-	     -I$(INCLUDE_DIR) -I$(CURDIR)/include -I$(APIDIR)			\
+	     -I$(CURDIR)/include -I$(CURDIR)/include/bpf-compat			\
+	     -I$(INCLUDE_DIR) -I$(APIDIR)					\
 	     -I../../include							\
 	     $(call get_sys_includes,$(CLANG))					\
 	     -Wall -Wno-compare-distinct-pointer-types				\
@@ -163,8 +164,7 @@ else
 	$(Q)cp "$(VMLINUX_H)" $@
 endif
 
-$(SCXOBJ_DIR)/%.bpf.o: %.bpf.c $(INCLUDE_DIR)/vmlinux.h include/scx/common.bpf.h \
-		       user_exit_info.h ravg.bpf.h ravg_impl.bpf.h		\
+$(SCXOBJ_DIR)/%.bpf.o: %.bpf.c $(INCLUDE_DIR)/vmlinux.h include/scx/*.h		\
 		       | $(BPFOBJ) $(SCXOBJ_DIR)
 	$(call msg,CLNG-BPF,,$(notdir $@))
 	$(Q)$(CLANG) $(BPF_CFLAGS) -target bpf -c $< -o $@
diff --git a/tools/sched_ext/gnu/stubs.h b/tools/sched_ext/gnu/stubs.h
deleted file mode 100644
index 719225b16..000000000
--- a/tools/sched_ext/gnu/stubs.h
+++ /dev/null
@@ -1 +0,0 @@
-/* dummy .h to trick /usr/include/features.h to work with 'clang -target bpf' */
diff --git a/tools/sched_ext/include/bpf-compat/gnu/stubs.h b/tools/sched_ext/include/bpf-compat/gnu/stubs.h
new file mode 100644
index 000000000..ad7d139ce
--- /dev/null
+++ b/tools/sched_ext/include/bpf-compat/gnu/stubs.h
@@ -0,0 +1,11 @@
+/*
+ * Dummy gnu/stubs.h. clang can end up including /usr/include/gnu/stubs.h when
+ * compiling BPF files although its content doesn't play any role. The file in
+ * turn includes stubs-64.h or stubs-32.h depending on whether __x86_64__ is
+ * defined. When compiling a BPF source, __x86_64__ isn't set and thus
+ * stubs-32.h is selected. However, the file is not there if the system doesn't
+ * have 32bit glibc devel package installed leading to a build failure.
+ *
+ * The problem is worked around by making this file available in the include
+ * search paths before the system one when building BPF.
+ */
diff --git a/tools/sched_ext/scx_flatcg.bpf.c b/tools/sched_ext/scx_flatcg.bpf.c
index 79d625b38..84a60d7e4 100644
--- a/tools/sched_ext/scx_flatcg.bpf.c
+++ b/tools/sched_ext/scx_flatcg.bpf.c
@@ -44,7 +44,6 @@
  * cgroup-internal scheduling can be switched to FIFO with the -f option.
  */
 #include <scx/common.bpf.h>
-#include "user_exit_info.h"
 #include "scx_flatcg.h"
 
 char _license[] SEC("license") = "GPL";
diff --git a/tools/sched_ext/scx_layered/Cargo.toml b/tools/sched_ext/scx_layered/Cargo.toml
index 1de594354..19dd0243a 100644
--- a/tools/sched_ext/scx_layered/Cargo.toml
+++ b/tools/sched_ext/scx_layered/Cargo.toml
@@ -16,13 +16,13 @@ lazy_static = "1.4"
 libbpf-rs = "0.21"
 libc = "0.2"
 log = "0.4"
-scx_utils = "0.2"
+scx_utils = "0.3"
 serde = { version = "1.0", features = ["derive"] }
 serde_json = "1.0"
 simplelog = "0.12"
 
 [build-dependencies]
-scx_utils = "0.2"
+scx_utils = "0.3"
 
 [features]
 enable_backtrace = []
diff --git a/tools/sched_ext/scx_rusty/Cargo.toml b/tools/sched_ext/scx_rusty/Cargo.toml
index 23d37b70e..309643687 100644
--- a/tools/sched_ext/scx_rusty/Cargo.toml
+++ b/tools/sched_ext/scx_rusty/Cargo.toml
@@ -17,11 +17,11 @@ libbpf-rs = "0.21.0"
 libc = "0.2.137"
 log = "0.4.17"
 ordered-float = "3.4.0"
-scx_utils = "0.2"
+scx_utils = "0.3"
 simplelog = "0.12.0"
 
 [build-dependencies]
-scx_utils = "0.2"
+scx_utils = "0.3"
 
 [features]
 enable_backtrace = []
-- 
2.43.0.232.ge79552d197

