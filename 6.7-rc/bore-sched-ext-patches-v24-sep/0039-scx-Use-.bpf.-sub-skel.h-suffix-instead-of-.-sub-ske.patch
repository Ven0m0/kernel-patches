From 357a38c495ca94da9015991f6d6858426110b9b0 Mon Sep 17 00:00:00 2001
From: Tejun Heo <tj@kernel.org>
Date: Mon, 27 Nov 2023 15:10:53 -1000
Subject: [PATCH 39/74] scx: Use .bpf.[sub]skel.h suffix instead of
 .[sub]skel.h when building schedulers

This is to make life easier for the user sched/tools repo which uses meson
to build.
---
 tools/sched_ext/Makefile       | 12 ++++++------
 tools/sched_ext/scx_central.c  |  2 +-
 tools/sched_ext/scx_flatcg.c   |  2 +-
 tools/sched_ext/scx_pair.c     |  2 +-
 tools/sched_ext/scx_qmap.bpf.c |  1 -
 tools/sched_ext/scx_qmap.c     |  2 +-
 tools/sched_ext/scx_simple.c   |  2 +-
 tools/sched_ext/scx_userland.c |  2 +-
 8 files changed, 12 insertions(+), 13 deletions(-)

diff --git a/tools/sched_ext/Makefile b/tools/sched_ext/Makefile
index 94985639b..2380cbe58 100644
--- a/tools/sched_ext/Makefile
+++ b/tools/sched_ext/Makefile
@@ -169,15 +169,15 @@ $(SCXOBJ_DIR)/%.bpf.o: %.bpf.c $(INCLUDE_DIR)/vmlinux.h scx_common.bpf.h	\
 	$(call msg,CLNG-BPF,,$(notdir $@))
 	$(Q)$(CLANG) $(BPF_CFLAGS) -target bpf -c $< -o $@
 
-$(INCLUDE_DIR)/%.skel.h: $(SCXOBJ_DIR)/%.bpf.o $(INCLUDE_DIR)/vmlinux.h $(BPFTOOL)
+$(INCLUDE_DIR)/%.bpf.skel.h: $(SCXOBJ_DIR)/%.bpf.o $(INCLUDE_DIR)/vmlinux.h $(BPFTOOL)
 	$(eval sched=$(notdir $@))
 	$(call msg,GEN-SKEL,,$(sched))
 	$(Q)$(BPFTOOL) gen object $(<:.o=.linked1.o) $<
 	$(Q)$(BPFTOOL) gen object $(<:.o=.linked2.o) $(<:.o=.linked1.o)
 	$(Q)$(BPFTOOL) gen object $(<:.o=.linked3.o) $(<:.o=.linked2.o)
 	$(Q)diff $(<:.o=.linked2.o) $(<:.o=.linked3.o)
-	$(Q)$(BPFTOOL) gen skeleton $(<:.o=.linked3.o) name $(subst .skel.h,,$(sched)) > $@
-	$(Q)$(BPFTOOL) gen subskeleton $(<:.o=.linked3.o) name $(subst .skel.h,,$(sched)) > $(@:.skel.h=.subskel.h)
+	$(Q)$(BPFTOOL) gen skeleton $(<:.o=.linked3.o) name $(subst .bpf.skel.h,,$(sched)) > $@
+	$(Q)$(BPFTOOL) gen subskeleton $(<:.o=.linked3.o) name $(subst .bpf.skel.h,,$(sched)) > $(@:.skel.h=.subskel.h)
 
 SCX_COMMON_DEPS := scx_common.h user_exit_info.h | $(BINDIR)
 
@@ -190,7 +190,7 @@ c-sched-targets = scx_simple scx_qmap scx_central scx_pair scx_flatcg		\
 $(addprefix $(BINDIR)/,$(c-sched-targets)): \
 	$(BINDIR)/%: \
 		$(filter-out %.bpf.c,%.c) \
-		$(INCLUDE_DIR)/%.skel.h \
+		$(INCLUDE_DIR)/%.bpf.skel.h \
 		$(SCX_COMMON_DEPS)
 	$(eval sched=$(notdir $@))
 	$(CC) $(CFLAGS) -c $(sched).c -o $(SCXOBJ_DIR)/$(sched).o
@@ -229,7 +229,7 @@ install: all
 clean:
 	$(foreach sched,$(rust-sched-targets),cargo clean --manifest-path=$(sched)/Cargo.toml;)
 	rm -rf $(OUTPUT_DIR) $(HOST_OUTPUT_DIR)
-	rm -f *.o *.bpf.o *.skel.h *.subskel.h
+	rm -f *.o *.bpf.o *.bpf.skel.h *.bpf.subskel.h
 	rm -f $(c-sched-targets)
 
 help:
@@ -297,5 +297,5 @@ all_targets: $(c-sched-targets) $(rust-sched-targets)
 # delete failed targets
 .DELETE_ON_ERROR:
 
-# keep intermediate (.skel.h, .bpf.o, etc) targets
+# keep intermediate (.bpf.skel.h, .bpf.o, etc) targets
 .SECONDARY:
diff --git a/tools/sched_ext/scx_central.c b/tools/sched_ext/scx_central.c
index 1e2985900..914993d31 100644
--- a/tools/sched_ext/scx_central.c
+++ b/tools/sched_ext/scx_central.c
@@ -12,7 +12,7 @@
 #include <libgen.h>
 #include <bpf/bpf.h>
 #include "scx_common.h"
-#include "scx_central.skel.h"
+#include "scx_central.bpf.skel.h"
 
 const char help_fmt[] =
 "A central FIFO sched_ext scheduler.\n"
diff --git a/tools/sched_ext/scx_flatcg.c b/tools/sched_ext/scx_flatcg.c
index f824c4b34..886891540 100644
--- a/tools/sched_ext/scx_flatcg.c
+++ b/tools/sched_ext/scx_flatcg.c
@@ -14,7 +14,7 @@
 #include <bpf/bpf.h>
 #include "scx_common.h"
 #include "scx_flatcg.h"
-#include "scx_flatcg.skel.h"
+#include "scx_flatcg.bpf.skel.h"
 
 #ifndef FILEID_KERNFS
 #define FILEID_KERNFS		0xfe
diff --git a/tools/sched_ext/scx_pair.c b/tools/sched_ext/scx_pair.c
index 48344af03..7c377f180 100644
--- a/tools/sched_ext/scx_pair.c
+++ b/tools/sched_ext/scx_pair.c
@@ -11,7 +11,7 @@
 #include <bpf/bpf.h>
 #include "scx_common.h"
 #include "scx_pair.h"
-#include "scx_pair.skel.h"
+#include "scx_pair.bpf.skel.h"
 
 const char help_fmt[] =
 "A demo sched_ext core-scheduler which always makes every sibling CPU pair\n"
diff --git a/tools/sched_ext/scx_qmap.bpf.c b/tools/sched_ext/scx_qmap.bpf.c
index b6365df0f..090548ddd 100644
--- a/tools/sched_ext/scx_qmap.bpf.c
+++ b/tools/sched_ext/scx_qmap.bpf.c
@@ -23,7 +23,6 @@
  * Copyright (c) 2022 David Vernet <dvernet@meta.com>
  */
 #include "scx_common.bpf.h"
-#include <linux/sched/prio.h>
 
 char _license[] SEC("license") = "GPL";
 
diff --git a/tools/sched_ext/scx_qmap.c b/tools/sched_ext/scx_qmap.c
index edc3d0a4e..0b8506770 100644
--- a/tools/sched_ext/scx_qmap.c
+++ b/tools/sched_ext/scx_qmap.c
@@ -11,7 +11,7 @@
 #include <libgen.h>
 #include <bpf/bpf.h>
 #include "scx_common.h"
-#include "scx_qmap.skel.h"
+#include "scx_qmap.bpf.skel.h"
 
 const char help_fmt[] =
 "A simple five-level FIFO queue sched_ext scheduler.\n"
diff --git a/tools/sched_ext/scx_simple.c b/tools/sched_ext/scx_simple.c
index 900f1c3e7..b09b76be0 100644
--- a/tools/sched_ext/scx_simple.c
+++ b/tools/sched_ext/scx_simple.c
@@ -10,7 +10,7 @@
 #include <libgen.h>
 #include <bpf/bpf.h>
 #include "scx_common.h"
-#include "scx_simple.skel.h"
+#include "scx_simple.bpf.skel.h"
 
 const char help_fmt[] =
 "A simple sched_ext scheduler.\n"
diff --git a/tools/sched_ext/scx_userland.c b/tools/sched_ext/scx_userland.c
index a750f10df..7b5322b3f 100644
--- a/tools/sched_ext/scx_userland.c
+++ b/tools/sched_ext/scx_userland.c
@@ -29,7 +29,7 @@
 
 #include "scx_common.h"
 #include "scx_userland.h"
-#include "scx_userland.skel.h"
+#include "scx_userland.bpf.skel.h"
 
 const char help_fmt[] =
 "A minimal userland sched_ext scheduler.\n"
-- 
2.43.0.232.ge79552d197

