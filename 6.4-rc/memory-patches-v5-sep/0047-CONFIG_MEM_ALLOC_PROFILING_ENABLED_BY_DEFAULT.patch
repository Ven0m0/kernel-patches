From 716e2db4cfe83edd23077ed7833748ab7f01e7c5 Mon Sep 17 00:00:00 2001
From: Kent Overstreet <kent.overstreet@linux.dev>
Date: Tue, 30 May 2023 00:48:46 -0400
Subject: [PATCH 47/50] CONFIG_MEM_ALLOC_PROFILING_ENABLED_BY_DEFAULT

Signed-off-by: Kent Overstreet <kent.overstreet@linux.dev>
---
 include/linux/mem_profiling.h | 6 ++++--
 lib/Kconfig.debug             | 6 ++++++
 mm/profiling.c                | 3 ++-
 3 files changed, 12 insertions(+), 3 deletions(-)

diff --git a/include/linux/mem_profiling.h b/include/linux/mem_profiling.h
index e392b1386..5e6b70815 100644
--- a/include/linux/mem_profiling.h
+++ b/include/linux/mem_profiling.h
@@ -35,11 +35,13 @@ static inline struct alloc_tag *ct_to_alloc_tag(struct codetag *ct)
 	__section("alloc_tags") = { .ct = CODE_TAG_INIT };		\
 	struct alloc_tag * __maybe_unused _old = alloc_tag_save(&_alloc_tag)
 
-extern struct static_key_false mem_alloc_profiling_key;
+DECLARE_STATIC_KEY_MAYBE(CONFIG_MEM_ALLOC_PROFILING_ENABLED_BY_DEFAULT,
+			mem_alloc_profiling_key);
 
 static inline bool mem_alloc_profiling_enabled(void)
 {
-	return static_branch_unlikely(&mem_alloc_profiling_key);
+	return static_branch_maybe(CONFIG_MEM_ALLOC_PROFILING_ENABLED_BY_DEFAULT,
+				   &mem_alloc_profiling_key);
 }
 
 #ifdef CONFIG_MEM_ALLOC_PROFILING_DEBUG
diff --git a/lib/Kconfig.debug b/lib/Kconfig.debug
index 4c232d811..60496018f 100644
--- a/lib/Kconfig.debug
+++ b/lib/Kconfig.debug
@@ -974,10 +974,16 @@ config MEM_ALLOC_PROFILING
 	  initiated at that code location. The mechanism can be used to track
 	  memory leaks with a low performance impact.
 
+config MEM_ALLOC_PROFILING_ENABLED_BY_DEFAULT
+	bool "Disable memory allocation profiling by default"
+	default y
+	depends on MEM_ALLOC_PROFILING
+
 config MEM_ALLOC_PROFILING_DEBUG
 	bool "Memory allocation profiler debugging"
 	default n
 	depends on MEM_ALLOC_PROFILING
+	select MEM_ALLOC_PROFILING_ENABLED_BY_DEFAULT
 	help
 	  Adds warnings with helpful error messages for memory allocation
 	  profiling.
diff --git a/mm/profiling.c b/mm/profiling.c
index cdaacf293..275b758ce 100644
--- a/mm/profiling.c
+++ b/mm/profiling.c
@@ -11,7 +11,8 @@
 
 static struct codetag_type *alloc_tag_cttype;
 
-DEFINE_STATIC_KEY_FALSE(mem_alloc_profiling_key);
+DEFINE_STATIC_KEY_MAYBE(CONFIG_MEM_ALLOC_PROFILING_ENABLED_BY_DEFAULT,
+			mem_alloc_profiling_key);
 
 static void *allocinfo_start(struct seq_file *m, loff_t *pos)
 {
-- 
2.41.0

