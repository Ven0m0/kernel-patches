From 2b5df88f71dfc67cd045b6bdfd829e20fe48a663 Mon Sep 17 00:00:00 2001
From: Piotr Gorski <lucjan.lucjanov@gmail.com>
Date: Sat, 21 Jan 2023 02:45:35 +0100
Subject: [PATCH 298/353] Revert "mm/hugetlb: convert putback_active_hugepage
 to take in a folio"

This reverts commit 928b31bca88c50c2cf267f0ed61b605918533e98.

Signed-off-by: Piotr Gorski <lucjan.lucjanov@gmail.com>
---
 include/linux/hugetlb.h | 4 ++--
 mm/hugetlb.c            | 8 ++++----
 mm/migrate.c            | 8 ++++----
 3 files changed, 10 insertions(+), 10 deletions(-)

diff --git a/include/linux/hugetlb.h b/include/linux/hugetlb.h
index 40d5062c8..f7dfef3fd 100644
--- a/include/linux/hugetlb.h
+++ b/include/linux/hugetlb.h
@@ -173,7 +173,7 @@ int isolate_hugetlb(struct folio *folio, struct list_head *list);
 int get_hwpoison_hugetlb_folio(struct folio *folio, bool *hugetlb, bool unpoison);
 int get_huge_page_for_hwpoison(unsigned long pfn, int flags,
 				bool *migratable_cleared);
-void putback_active_hugetlb_folio(struct folio *folio);
+void putback_active_hugepage(struct page *page);
 void move_hugetlb_state(struct folio *old_folio, struct folio *new_folio, int reason);
 void free_huge_page(struct page *page);
 void hugetlb_fix_reserve_counts(struct inode *inode);
@@ -390,7 +390,7 @@ static inline int get_huge_page_for_hwpoison(unsigned long pfn, int flags,
 	return 0;
 }
 
-static inline void putback_active_hugetlb_folio(struct folio *folio)
+static inline void putback_active_hugepage(struct page *page)
 {
 }
 
diff --git a/mm/hugetlb.c b/mm/hugetlb.c
index e8c02ee57..3862dc1ec 100644
--- a/mm/hugetlb.c
+++ b/mm/hugetlb.c
@@ -7309,13 +7309,13 @@ int get_huge_page_for_hwpoison(unsigned long pfn, int flags,
 	return ret;
 }
 
-void putback_active_hugetlb_folio(struct folio *folio)
+void putback_active_hugepage(struct page *page)
 {
 	spin_lock_irq(&hugetlb_lock);
-	folio_set_hugetlb_migratable(folio);
-	list_move_tail(&folio->lru, &(folio_hstate(folio))->hugepage_activelist);
+	SetHPageMigratable(page);
+	list_move_tail(&page->lru, &(page_hstate(page))->hugepage_activelist);
 	spin_unlock_irq(&hugetlb_lock);
-	folio_put(folio);
+	put_page(page);
 }
 
 void move_hugetlb_state(struct folio *old_folio, struct folio *new_folio, int reason)
diff --git a/mm/migrate.c b/mm/migrate.c
index 1354a4fbb..ccef4dc28 100644
--- a/mm/migrate.c
+++ b/mm/migrate.c
@@ -151,7 +151,7 @@ void putback_movable_pages(struct list_head *l)
 
 	list_for_each_entry_safe(page, page2, l, lru) {
 		if (unlikely(PageHuge(page))) {
-			putback_active_hugetlb_folio(page_folio(page));
+			putback_active_hugepage(page);
 			continue;
 		}
 		list_del(&page->lru);
@@ -1357,7 +1357,7 @@ static int unmap_and_move_huge_page(new_page_t get_new_page,
 
 	if (folio_ref_count(src) == 1) {
 		/* page was freed from under us. So we are done. */
-		putback_active_hugetlb_folio(src);
+		putback_active_hugepage(hpage);
 		return MIGRATEPAGE_SUCCESS;
 	}
 
@@ -1442,7 +1442,7 @@ static int unmap_and_move_huge_page(new_page_t get_new_page,
 	folio_unlock(src);
 out:
 	if (rc == MIGRATEPAGE_SUCCESS)
-		putback_active_hugetlb_folio(src);
+		putback_active_hugepage(hpage);
 	else if (rc != -EAGAIN)
 		list_move_tail(&src->lru, ret);
 
@@ -1454,7 +1454,7 @@ static int unmap_and_move_huge_page(new_page_t get_new_page,
 	if (put_new_page)
 		put_new_page(new_hpage, private);
 	else
-		putback_active_hugetlb_folio(dst);
+		putback_active_hugepage(new_hpage);
 
 	return rc;
 }
-- 
2.39.0.rc2.1.gbd5df96b79

