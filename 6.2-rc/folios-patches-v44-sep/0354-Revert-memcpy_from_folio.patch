From aa64511cd1be27af7b414f97cfc8b1fcd124b1ba Mon Sep 17 00:00:00 2001
From: Piotr Gorski <lucjan.lucjanov@gmail.com>
Date: Thu, 26 Jan 2023 21:46:18 +0100
Subject: [PATCH 354/355] Revert "memcpy_from_folio()"

This reverts commit 8ed3e18c5310477041ad1d0ae3db86683e402c47.

Signed-off-by: Piotr Gorski <lucjan.lucjanov@gmail.com>
---
 fs/ext4/verity.c           | 16 +++++++++-------
 include/linux/highmem.h    | 29 -----------------------------
 include/linux/page-flags.h |  1 -
 3 files changed, 9 insertions(+), 37 deletions(-)

diff --git a/fs/ext4/verity.c b/fs/ext4/verity.c
index 838a206e2..30e3b6579 100644
--- a/fs/ext4/verity.c
+++ b/fs/ext4/verity.c
@@ -42,16 +42,18 @@ static int pagecache_read(struct inode *inode, void *buf, size_t count,
 			  loff_t pos)
 {
 	while (count) {
-		struct folio *folio;
-		size_t n;
+		size_t n = min_t(size_t, count,
+				 PAGE_SIZE - offset_in_page(pos));
+		struct page *page;
 
-		folio = read_mapping_folio(inode->i_mapping, pos >> PAGE_SHIFT,
+		page = read_mapping_page(inode->i_mapping, pos >> PAGE_SHIFT,
 					 NULL);
-		if (IS_ERR(folio))
-			return PTR_ERR(folio);
+		if (IS_ERR(page))
+			return PTR_ERR(page);
+
+		memcpy_from_page(buf, page, offset_in_page(pos), n);
 
-		n = memcpy_from_file_folio(buf, folio, pos, count);
-		folio_put(folio);
+		put_page(page);
 
 		buf += n;
 		pos += n;
diff --git a/include/linux/highmem.h b/include/linux/highmem.h
index 82017c822..bd9bb366a 100644
--- a/include/linux/highmem.h
+++ b/include/linux/highmem.h
@@ -414,35 +414,6 @@ static inline void memzero_page(struct page *page, size_t offset, size_t len)
 	kunmap_local(addr);
 }
 
-/**
- * memcpy_from_file_folio - Copy some bytes from a file folio.
- * @to: The destination buffer.
- * @folio: The folio to copy from.
- * @pos: The position in the file.
- * @len: The maximum number of bytes to copy.
- *
- * Copy up to @len bytes from this folio.  This may be limited by PAGE_SIZE
- * if the folio comes from HIGHMEM, and by the size of the folio.
- *
- * Return: The number of bytes copied from the folio.
- */
-static inline size_t memcpy_from_file_folio(char *to, struct folio *folio,
-		loff_t pos, size_t len)
-{
-	size_t offset = offset_in_folio(folio, pos);
-	char *from = kmap_local_folio(folio, offset);
-
-	if (folio_test_highmem(folio))
-		len = min(len, PAGE_SIZE - offset);
-	else
-		len = min(len, folio_size(folio) - offset);
-
-	memcpy(to, from, len);
-	kunmap_local(from);
-
-	return len;
-}
-
 /**
  * folio_zero_segments() - Zero two byte ranges in a folio.
  * @folio: The folio to write to.
diff --git a/include/linux/page-flags.h b/include/linux/page-flags.h
index a7e3a3405..69e93a0c1 100644
--- a/include/linux/page-flags.h
+++ b/include/linux/page-flags.h
@@ -531,7 +531,6 @@ PAGEFLAG(Readahead, readahead, PF_NO_COMPOUND)
  * available at this point.
  */
 #define PageHighMem(__p) is_highmem_idx(page_zonenum(__p))
-#define folio_test_highmem(__f)	is_highmem_idx(folio_zonenum(__f))
 #else
 PAGEFLAG_FALSE(HighMem, highmem)
 #endif
-- 
2.39.0.rc2.1.gbd5df96b79

