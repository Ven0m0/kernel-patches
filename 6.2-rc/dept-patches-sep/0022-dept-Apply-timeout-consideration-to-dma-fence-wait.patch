From a6edd302d8b11b8661b169b35274a6f43faf9d8a Mon Sep 17 00:00:00 2001
From: Byungchul Park <byungchul.park@lge.com>
Date: Mon, 9 Jan 2023 12:33:50 +0900
Subject: [PATCH 22/23] dept: Apply timeout consideration to dma fence wait

Now that CONFIG_DEPT_AGGRESSIVE_TIMEOUT_WAIT was introduced, apply the
consideration to dma fence wait.

Signed-off-by: Byungchul Park <byungchul.park@lge.com>
---
 drivers/dma-buf/dma-fence.c | 10 ++++++++--
 1 file changed, 8 insertions(+), 2 deletions(-)

diff --git a/drivers/dma-buf/dma-fence.c b/drivers/dma-buf/dma-fence.c
index dd190cf49..ee9b3501c 100644
--- a/drivers/dma-buf/dma-fence.c
+++ b/drivers/dma-buf/dma-fence.c
@@ -783,7 +783,10 @@ dma_fence_default_wait(struct dma_fence *fence, bool intr, signed long timeout)
 	cb.task = current;
 	list_add(&cb.base.node, &fence->cb_list);
 
-	sdt_might_sleep_strong(NULL);
+	if (timeout == MAX_SCHEDULE_TIMEOUT)
+		sdt_might_sleep_strong(NULL);
+	else
+		sdt_might_sleep_strong_timeout(NULL);
 	while (!test_bit(DMA_FENCE_FLAG_SIGNALED_BIT, &fence->flags) && ret > 0) {
 		if (intr)
 			__set_current_state(TASK_INTERRUPTIBLE);
@@ -887,7 +890,10 @@ dma_fence_wait_any_timeout(struct dma_fence **fences, uint32_t count,
 		}
 	}
 
-	sdt_might_sleep_strong(NULL);
+	if (timeout == MAX_SCHEDULE_TIMEOUT)
+		sdt_might_sleep_strong(NULL);
+	else
+		sdt_might_sleep_strong_timeout(NULL);
 	while (ret > 0) {
 		if (intr)
 			set_current_state(TASK_INTERRUPTIBLE);
-- 
2.39.0.rc2.1.gbd5df96b79

