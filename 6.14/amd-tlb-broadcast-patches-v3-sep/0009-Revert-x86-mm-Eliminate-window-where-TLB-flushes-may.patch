From 30d1f12c6756a2d7b467ce93ec58760104cea69d Mon Sep 17 00:00:00 2001
From: Peter Jung <admin@ptr1337.dev>
Date: Sun, 18 May 2025 16:22:24 +0200
Subject: [PATCH 09/15] Revert "x86/mm: Eliminate window where TLB flushes may
 be inadvertently skipped"

This reverts commit 399ec9ca8fc4999e676ff89a90184ec40031cf59.
---
 arch/x86/mm/tlb.c | 23 ++---------------------
 1 file changed, 2 insertions(+), 21 deletions(-)

diff --git a/arch/x86/mm/tlb.c b/arch/x86/mm/tlb.c
index a2ca0c2c3..e8dc5dc70 100644
--- a/arch/x86/mm/tlb.c
+++ b/arch/x86/mm/tlb.c
@@ -769,11 +769,7 @@ void switch_mm_irqs_off(struct mm_struct *unused, struct mm_struct *next,
 
 		choose_new_asid(next, next_tlb_gen, &new_asid, &need_flush);
 
-		/*
-		 * Indicate that CR3 is about to change. nmi_uaccess_okay()
-		 * and others are sensitive to the window where mm_cpumask(),
-		 * CR3 and cpu_tlbstate.loaded_mm are not all in sync.
- 		 */
+		/* Let nmi_uaccess_okay() know that we're changing CR3. */
 		this_cpu_write(cpu_tlbstate.loaded_mm, LOADED_MM_SWITCHING);
 		barrier();
 	}
@@ -1047,16 +1043,8 @@ static void flush_tlb_func(void *info)
 
 static bool should_flush_tlb(int cpu, void *data)
 {
-	struct mm_struct *loaded_mm = per_cpu(cpu_tlbstate.loaded_mm, cpu);
 	struct flush_tlb_info *info = data;
 
-	/*
-	 * Order the 'loaded_mm' and 'is_lazy' against their
-	 * write ordering in switch_mm_irqs_off(). Ensure
-	 * 'is_lazy' is at least as new as 'loaded_mm'.
-	 */
-	smp_rmb();
-
 	/* Lazy TLB will get flushed at the next context switch. */
 	if (per_cpu(cpu_tlbstate_shared.is_lazy, cpu))
 		return false;
@@ -1065,15 +1053,8 @@ static bool should_flush_tlb(int cpu, void *data)
 	if (!info->mm)
 		return true;
 
-	/*
-	 * While switching, the remote CPU could have state from
-	 * either the prev or next mm. Assume the worst and flush.
-	 */
-	if (loaded_mm == LOADED_MM_SWITCHING)
-		return true;
-
 	/* The target mm is loaded, and the CPU is not lazy. */
-	if (loaded_mm == info->mm)
+	if (per_cpu(cpu_tlbstate.loaded_mm, cpu) == info->mm)
 		return true;
 
 	/* In cpumask, but not the loaded mm? Periodically remove by flushing. */
-- 
2.49.0

