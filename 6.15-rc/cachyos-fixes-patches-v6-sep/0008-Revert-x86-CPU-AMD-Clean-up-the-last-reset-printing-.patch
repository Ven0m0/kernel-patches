From 5a514f0a89c85d60b332c3a7a08553d56febaf88 Mon Sep 17 00:00:00 2001
From: Eric Naim <dnaim@cachyos.org>
Date: Mon, 5 May 2025 22:31:54 +0800
Subject: [PATCH 08/10] Revert "x86/CPU/AMD: Clean up the last-reset printing
 code a bit"

This reverts commit eef78afa4795e1ca7ed187b267eb2c1351516f30.

Signed-off-by: Eric Naim <dnaim@cachyos.org>
---
 Documentation/arch/x86/amd-debugging.rst | 18 ++++++------------
 arch/x86/kernel/cpu/amd.c                | 15 +++++++--------
 2 files changed, 13 insertions(+), 20 deletions(-)

diff --git a/Documentation/arch/x86/amd-debugging.rst b/Documentation/arch/x86/amd-debugging.rst
index d92bf59d6..dea8a918c 100644
--- a/Documentation/arch/x86/amd-debugging.rst
+++ b/Documentation/arch/x86/amd-debugging.rst
@@ -52,7 +52,6 @@ report generated from this script to
 
 Spurious s2idle wakeups from an IRQ
 ===================================
-
 Spurious wakeups will generally have an IRQ set to ``/sys/power/pm_wakeup_irq``.
 This can be matched to ``/proc/interrupts`` to determine what device woke the system.
 
@@ -135,7 +134,6 @@ The ``amd_s2idle.py`` script will capture most of these artifacts for you.
 
 s2idle PM debug messages
 ========================
-
 During the s2idle flow on AMD systems, the ACPI LPS0 driver is responsible
 to check all uPEP constraints.  Failing uPEP constraints does not prevent
 s0i3 entry.  This means that if some constraints are not met, it is possible
@@ -162,7 +160,6 @@ After doing this, run the suspend cycle and look specifically for errors around:
 
 Historical examples of s2idle issues
 ====================================
-
 To help understand the types of issues that can occur and how to debug them,
 here are some historical examples of s2idle issues that have been resolved.
 
@@ -251,7 +248,6 @@ state entry.
 
 Runtime power consumption issues
 ================================
-
 Runtime power consumption is influenced by many factors, including but not
 limited to the configuration of the PCIe Active State Power Management (ASPM),
 the display brightness, the EPP policy of the CPU, and the power management
@@ -276,7 +272,6 @@ the battery life when more heavily biased towards performance.
 
 BIOS debug messages
 ===================
-
 Most OEM machines don't have a serial UART for outputting kernel or BIOS
 debug messages. However BIOS debug messages are useful for understanding
 both BIOS bugs and bugs with the Linux kernel drivers that call BIOS AML.
@@ -326,7 +321,6 @@ to help parse the messages.
 
 Random reboot issues
 ====================
-
 When a random reboot occurs, the high-level reason for the reboot is stored
 in a register that will persist onto the next boot.
 
@@ -344,7 +338,7 @@ There are 6 classes of reasons for the reboot:
 
    "0",  "Pin",      "thermal pin BP_THERMTRIP_L was tripped"
    "1",  "Pin",      "power button was pressed for 4 seconds"
-   "2",  "Pin",      "shutdown pin was tripped"
+   "2",  "Pin",      "shutdown pin was shorted"
    "4",  "Remote",   "remote ASF power off command was received"
    "9",  "Internal", "internal CPU thermal limit was tripped"
    "16", "Pin",      "system reset pin BP_SYS_RST_L was tripped"
@@ -352,8 +346,8 @@ There are 6 classes of reasons for the reboot:
    "18", "Software", "software wrote 0x4 to reset control register 0xCF9"
    "19", "Software", "software wrote 0x6 to reset control register 0xCF9"
    "20", "Software", "software wrote 0xE to reset control register 0xCF9"
-   "21", "ACPI-state", "ACPI power state transition occurred"
-   "22", "Pin",      "keyboard reset pin KB_RST_L was tripped"
+   "21", "Sleep",    "ACPI power state transition occurred"
+   "22", "Pin",      "keyboard reset pin KB_RST_L was asserted"
    "23", "Internal", "internal CPU shutdown event occurred"
    "24", "Hardware", "system failed to boot before failed boot timer expired"
    "25", "Hardware", "hardware watchdog timer expired"
@@ -363,6 +357,6 @@ There are 6 classes of reasons for the reboot:
    "30", "Internal", "a parity error occurred"
    "31", "Internal", "a software sync flood event occurred"
 
-This information is read by the kernel at bootup and printed into
-the syslog. When a random reboot occurs this message can be helpful
-to determine the next component to debug.
+This information is read by the kernel at bootup and is saved into the
+kernel ring buffer. When a random reboot occurs this message can be helpful
+to determine the next component to debug such an issue.
diff --git a/arch/x86/kernel/cpu/amd.c b/arch/x86/kernel/cpu/amd.c
index 469afcd4b..9a8c59045 100644
--- a/arch/x86/kernel/cpu/amd.c
+++ b/arch/x86/kernel/cpu/amd.c
@@ -1240,18 +1240,18 @@ void amd_check_microcode(void)
 }
 
 static const char * const s5_reset_reason_txt[] = {
-	[0]  = "thermal pin BP_THERMTRIP_L was tripped",
-	[1]  = "power button was pressed for 4 seconds",
-	[2]  = "shutdown pin was tripped",
-	[4]  = "remote ASF power off command was received",
-	[9]  = "internal CPU thermal limit was tripped",
+	[0] = "thermal pin BP_THERMTRIP_L was tripped",
+	[1] = "power button was pressed for 4 seconds",
+	[2] = "shutdown pin was shorted",
+	[4] = "remote ASF power off command was received",
+	[9] = "internal CPU thermal limit was tripped",
 	[16] = "system reset pin BP_SYS_RST_L was tripped",
 	[17] = "software issued PCI reset",
 	[18] = "software wrote 0x4 to reset control register 0xCF9",
 	[19] = "software wrote 0x6 to reset control register 0xCF9",
 	[20] = "software wrote 0xE to reset control register 0xCF9",
 	[21] = "ACPI power state transition occurred",
-	[22] = "keyboard reset pin KB_RST_L was tripped",
+	[22] = "keyboard reset pin KB_RST_L was asserted",
 	[23] = "internal CPU shutdown event occurred",
 	[24] = "system failed to boot before failed boot timer expired",
 	[25] = "hardware watchdog timer expired",
@@ -1282,10 +1282,9 @@ static __init int print_s5_reset_status_mmio(void)
 		if (!(value & BIT(i)))
 			continue;
 
-		if (s5_reset_reason_txt[i]) {
+		if (s5_reset_reason_txt[i])
 			pr_info("x86/amd: Previous system reset reason [0x%08lx]: %s\n",
 				value, s5_reset_reason_txt[i]);
-		}
 	}
 
 	return 0;
-- 
2.49.0

