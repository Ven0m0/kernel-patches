From 51263a4afd5913a4023f58285c93d3275c6fe4cd Mon Sep 17 00:00:00 2001
From: Piotr Gorski <lucjan.lucjanov@gmail.com>
Date: Wed, 7 Sep 2022 20:30:47 +0200
Subject: [PATCH 30/30] lrng-5.19: merge changes from dev tree

Signed-off-by: Piotr Gorski <lucjan.lucjanov@gmail.com>
---
 drivers/char/lrng/lrng_es_krng.c              | 33 ++++---------------
 .../char/lrng/lrng_interface_random_kernel.c  |  4 +--
 2 files changed, 8 insertions(+), 29 deletions(-)

diff --git a/drivers/char/lrng/lrng_es_krng.c b/drivers/char/lrng/lrng_es_krng.c
index 0ef88e6c8..519ba640c 100644
--- a/drivers/char/lrng/lrng_es_krng.c
+++ b/drivers/char/lrng/lrng_es_krng.c
@@ -23,17 +23,12 @@ MODULE_PARM_DESC(krng_entropy, "Entropy in bits of 256 data bits from the kernel
 
 static atomic_t lrng_krng_initial_rate = ATOMIC_INIT(0);
 
-static struct notifier_block lrng_krng_ready = {
-	.notifier_call = NULL,
-};
-
 static u32 lrng_krng_fips_entropylevel(u32 entropylevel)
 {
 	return fips_enabled ? 0 : entropylevel;
 }
 
-static int lrng_krng_adjust_entropy(struct notifier_block *nb,
-				    unsigned long action, void *data)
+static int lrng_krng_adjust_entropy(void)
 {
 	u32 entropylevel;
 
@@ -50,27 +45,11 @@ static int lrng_krng_adjust_entropy(struct notifier_block *nb,
 
 static u32 lrng_krng_entropylevel(u32 requested_bits)
 {
-	if (lrng_krng_ready.notifier_call == NULL) {
-		int err;
-
-		lrng_krng_ready.notifier_call = lrng_krng_adjust_entropy;
-
-		err = register_random_ready_notifier(&lrng_krng_ready);
-		switch (err) {
-		case 0:
-			atomic_set(&lrng_krng_initial_rate, krng_entropy);
-			krng_entropy = 0;
-			pr_debug("Kernel RNG is not yet seeded, setting entropy rate to 0 bits of entropy\n");
-			break;
-
-		case -EALREADY:
-			pr_debug("Kernel RNG is fully seeded, setting entropy rate to %u bits of entropy\n",
-				 lrng_krng_fips_entropylevel(krng_entropy));
-			break;
-		default:
-			lrng_krng_ready.notifier_call = NULL;
-			return 0;
-		}
+	static bool init = false;
+
+	if (unlikely(!init) && rng_is_initialized()) {
+		init = true;
+		lrng_krng_adjust_entropy();
 	}
 
 	return lrng_fast_noise_entropylevel(
diff --git a/drivers/char/lrng/lrng_interface_random_kernel.c b/drivers/char/lrng/lrng_interface_random_kernel.c
index e64c3b79a..471390bfd 100644
--- a/drivers/char/lrng/lrng_interface_random_kernel.c
+++ b/drivers/char/lrng/lrng_interface_random_kernel.c
@@ -21,7 +21,7 @@
 
 /********************************** Helper ***********************************/
 
-static bool lrng_trust_bootloader __ro_after_init =
+static bool lrng_trust_bootloader __initdata =
 	IS_ENABLED(CONFIG_RANDOM_TRUST_BOOTLOADER);
 
 static int __init lrng_parse_trust_bootloader(char *arg)
@@ -80,7 +80,7 @@ EXPORT_SYMBOL_GPL(add_hwgenerator_randomness);
  *	 insert into entropy pool.
  * @size: length of buffer
  */
-void add_bootloader_randomness(const void *buf, size_t size)
+void __init add_bootloader_randomness(const void *buf, size_t size)
 {
 	lrng_pool_insert_aux(buf, size, lrng_trust_bootloader ? size * 8 : 0);
 }
-- 
2.37.3.485.gbe1a02a17e

