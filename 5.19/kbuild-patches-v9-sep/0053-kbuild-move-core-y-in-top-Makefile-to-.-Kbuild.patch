From b42837414d35307393d1136fd31c13c9cc6191e9 Mon Sep 17 00:00:00 2001
From: Masahiro Yamada <masahiroy@kernel.org>
Date: Sun, 28 Aug 2022 11:39:58 +0900
Subject: [PATCH 53/58] kbuild: move core-y in top Makefile to ./Kbuild

Use the ordinary obj-y to list subdirectories.

There are some core-y entries remaining in arch/*/Makefile.
They will be moved after io_uring/built-in.a.

Note:
GNU Make seems to transform './.modules.order' to '.modules.order'
before matching it against the target pattern. Split ./.modules.order
to a dedicated rule to avoid "doesn't match the target pattern"
warning. [1]

[1]: https://lists.gnu.org/archive/html/bug-make/2022-08/msg00059.html

Signed-off-by: Masahiro Yamada <masahiroy@kernel.org>
---
 Kbuild                 | 16 ++++++++++++++++
 Makefile               | 10 +++++-----
 scripts/Makefile.build |  4 ++--
 3 files changed, 23 insertions(+), 7 deletions(-)

diff --git a/Kbuild b/Kbuild
index 0b9e8a16a..c8661cfc4 100644
--- a/Kbuild
+++ b/Kbuild
@@ -72,3 +72,19 @@ $(atomic-checks): $(obj)/.checked-%: include/linux/atomic/%  FORCE
 PHONY += prepare
 prepare: $(offsets-file) missing-syscalls $(atomic-checks)
 	@:
+
+# Ordinary directory descending
+# ---------------------------------------------------------------------------
+
+obj-y			+= init/
+obj-y			+= usr/
+obj-y			+= arch/$(SRCARCH)/
+obj-y			+= kernel/
+obj-y			+= certs/
+obj-y			+= mm/
+obj-y			+= fs/
+obj-y			+= ipc/
+obj-y			+= security/
+obj-y			+= crypto/
+obj-$(CONFIG_BLOCK)	+= block/
+obj-$(CONFIG_IO_URING)	+= io_uring/
diff --git a/Makefile b/Makefile
index db1e97e29..7a0de7eb1 100644
--- a/Makefile
+++ b/Makefile
@@ -676,7 +676,7 @@ endif
 
 ifeq ($(KBUILD_EXTMOD),)
 # Objects we will link into vmlinux / subdirs we need to visit
-core-y		:= init/ usr/ arch/$(SRCARCH)/
+core-y		:= ./
 drivers-y	:= drivers/ sound/
 drivers-$(CONFIG_SAMPLES) += samples/
 drivers-$(CONFIG_NET) += net/
@@ -1103,9 +1103,6 @@ export MODORDER := $(extmod_prefix)modules.order
 export MODULES_NSDEPS := $(extmod_prefix)modules.nsdeps
 
 ifeq ($(KBUILD_EXTMOD),)
-core-y			+= kernel/ certs/ mm/ fs/ ipc/ security/ crypto/
-core-$(CONFIG_BLOCK)	+= block/
-core-$(CONFIG_IO_URING)	+= io_uring/
 
 vmlinux-dirs	:= $(patsubst %/,%,$(filter %/, \
 		     $(core-y) $(core-m) $(drivers-y) $(drivers-m) \
@@ -1753,7 +1750,10 @@ ifdef CONFIG_MODULES
 
 subdir-modorder := $(addsuffix /.modules.order, $(build-dirs))
 
-$(sort $(subdir-modorder)): %/.modules.order: % ;
+# Split ./.modules.order into a dedicate target to avoid
+# "doesn't match the target pattern" warning
+./.modules.order: . ;
+$(sort $(filter-out ./.modules.order, $(subdir-modorder))): %/.modules.order: % ;
 
 cmd_modules_order = cat $(real-prereqs) > $@
 
diff --git a/scripts/Makefile.build b/scripts/Makefile.build
index c96c3c0ab..098c81166 100644
--- a/scripts/Makefile.build
+++ b/scripts/Makefile.build
@@ -464,8 +464,8 @@ PHONY += $(subdir-ym)
 $(subdir-ym):
 	$(Q)$(MAKE) $(build)=$@ \
 	$(if $(filter $@/, $(KBUILD_SINGLE_TARGETS)),single-build=) \
-	need-builtin=$(if $(filter $@/built-in.a, $(subdir-builtin)),1) \
-	need-modorder=$(if $(filter $@/.modules.order, $(subdir-modorder)),1)
+	need-builtin=$(if $(filter $@/built-in.a, $(subdir-builtin:./%=%)),1) \
+	need-modorder=$(if $(filter $@/.modules.order, $(subdir-modorder:./%=%)),1)
 
 # Add FORCE to the prequisites of a target to force it to be always rebuilt.
 # ---------------------------------------------------------------------------
-- 
2.37.1.377.g679aad9e82

