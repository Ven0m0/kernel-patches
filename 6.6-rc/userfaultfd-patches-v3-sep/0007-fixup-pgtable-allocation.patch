From a7533cb8847b36df3ad7aaa519d9d341dc136709 Mon Sep 17 00:00:00 2001
From: Suren Baghdasaryan <surenb@google.com>
Date: Wed, 20 Sep 2023 14:49:52 -0700
Subject: [PATCH 07/10] fixup: pgtable allocation

Signed-off-by: Suren Baghdasaryan <surenb@google.com>
---
 mm/huge_memory.c | 24 +++++++++++++++++++++---
 1 file changed, 21 insertions(+), 3 deletions(-)

diff --git a/mm/huge_memory.c b/mm/huge_memory.c
index bdfeaa178..4f3650e73 100644
--- a/mm/huge_memory.c
+++ b/mm/huge_memory.c
@@ -1955,7 +1955,7 @@ int remap_pages_huge_pmd(struct mm_struct *dst_mm,
 	struct page *src_page;
 	struct anon_vma *src_anon_vma, *dst_anon_vma;
 	spinlock_t *src_ptl, *dst_ptl;
-	pgtable_t pgtable;
+	pgtable_t src_pgtable, dst_pgtable = NULL;
 	struct mmu_notifier_range range;
 
 	src_pmdval = *src_pmd;
@@ -1980,6 +1980,14 @@ int remap_pages_huge_pmd(struct mm_struct *dst_mm,
 	get_page(src_page);
 	spin_unlock(src_ptl);
 
+	if (dst_mm != src_mm) {
+		dst_pgtable = pte_alloc_one(dst_mm);
+		if (unlikely(!dst_pgtable)) {
+			put_page(src_page);
+			return -ENOMEM;
+		}
+	}
+
 	mmu_notifier_range_init(&range, MMU_NOTIFY_CLEAR, 0, src_mm, src_addr,
 				src_addr + HPAGE_PMD_SIZE);
 	mmu_notifier_invalidate_range_start(&range);
@@ -1997,6 +2005,8 @@ int remap_pages_huge_pmd(struct mm_struct *dst_mm,
 		unlock_page(src_page);
 		put_page(src_page);
 		mmu_notifier_invalidate_range_end(&range);
+		if (dst_pgtable)
+			pte_free(dst_mm, dst_pgtable);
 		return -EAGAIN;
 	}
 	anon_vma_lock_write(src_anon_vma);
@@ -2012,6 +2022,8 @@ int remap_pages_huge_pmd(struct mm_struct *dst_mm,
 		unlock_page(src_page);
 		put_page(src_page);
 		mmu_notifier_invalidate_range_end(&range);
+		if (dst_pgtable)
+			pte_free(dst_mm, dst_pgtable);
 		return -EAGAIN;
 	}
 
@@ -2029,11 +2041,17 @@ int remap_pages_huge_pmd(struct mm_struct *dst_mm,
 	_dst_pmd = maybe_pmd_mkwrite(pmd_mkdirty(_dst_pmd), dst_vma);
 	set_pmd_at(dst_mm, dst_addr, dst_pmd, _dst_pmd);
 
-	pgtable = pgtable_trans_huge_withdraw(src_mm, src_pmd);
-	pgtable_trans_huge_deposit(dst_mm, dst_pmd, pgtable);
+	src_pgtable = pgtable_trans_huge_withdraw(src_mm, src_pmd);
 	if (dst_mm != src_mm) {
+		pgtable_trans_huge_deposit(dst_mm, dst_pmd, dst_pgtable);
+		pte_free(src_mm, src_pgtable);
+
+		mm_inc_nr_ptes(dst_mm);
+		mm_dec_nr_ptes(src_mm);
 		add_mm_counter(dst_mm, MM_ANONPAGES, HPAGE_PMD_NR);
 		add_mm_counter(src_mm, MM_ANONPAGES, -HPAGE_PMD_NR);
+	} else {
+		pgtable_trans_huge_deposit(dst_mm, dst_pmd, src_pgtable);
 	}
 	double_pt_unlock(src_ptl, dst_ptl);
 
-- 
2.42.0

