From 63da364ccf1b6a2d8894cf7852e883c0749c6334 Mon Sep 17 00:00:00 2001
From: Peter Zijlstra <peterz@infradead.org>
Date: Thu, 5 Oct 2023 15:30:13 +0200
Subject: [PATCH 09/10] sched/eevdf: Disable entity_eligible()

Disable entity_eligible() entirely, this makes tasks much easier to
pick, but also gives rise to degenerate cases like:

t=92 V=16
 A                   |----<
 B                    |<
>C   |----------------<
 D                    |<
 E                   |<
 F                    |<
 G                   |<
   |---------|-----*---|---------|---------|----

hence, default disable and hope that BIAS_ELIGIBLE has many of the
advantages while curbing the disadvantages.

Suggested-by: Youssef Esmat <youssefesmat@chromium.org>
Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
---
 kernel/sched/fair.c     | 3 +++
 kernel/sched/features.h | 1 +
 2 files changed, 4 insertions(+)

diff --git a/kernel/sched/fair.c b/kernel/sched/fair.c
index e68c30e6e..ca5a2970b 100644
--- a/kernel/sched/fair.c
+++ b/kernel/sched/fair.c
@@ -739,6 +739,9 @@ static void update_entity_lag(struct cfs_rq *cfs_rq, struct sched_entity *se)
  */
 int entity_eligible(struct cfs_rq *cfs_rq, struct sched_entity *se)
 {
+	if (sched_feat(EVDF))
+		return true;
+
 	struct sched_entity *curr = cfs_rq->curr;
 	s64 avg = cfs_rq->avg_vruntime;
 	u64 vslice = cfs_rq->avg_vslice;
diff --git a/kernel/sched/features.h b/kernel/sched/features.h
index 99c291a10..51fcca27b 100644
--- a/kernel/sched/features.h
+++ b/kernel/sched/features.h
@@ -11,6 +11,7 @@ SCHED_FEAT(PREEMPT_SHORT, true)
 SCHED_FEAT(PLACE_SLEEPER, false)
 SCHED_FEAT(GENTLE_SLEEPER, true)
 SCHED_FEAT(BIAS_ELIGIBLE, true)
+SCHED_FEAT(EVDF, false)
 
 /*
  * Prefer to schedule the task we woke last (assuming it failed
-- 
2.42.0

