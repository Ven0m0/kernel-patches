From ef131b78b9ab8e4057e51cb5f02f44de97030ca4 Mon Sep 17 00:00:00 2001
From: Piotr Gorski <lucjan.lucjanov@gmail.com>
Date: Tue, 7 Mar 2023 21:58:33 +0100
Subject: [PATCH 42/47] Revert "maple_tree: Fix mas_skip_node() end slot
 detection"

This reverts commit 6be1a7ee9e9f97f931e4517b5409283d70076794.

Signed-off-by: Piotr Gorski <lucjan.lucjanov@gmail.com>
---
 lib/maple_tree.c | 25 +++++++++++++++----------
 1 file changed, 15 insertions(+), 10 deletions(-)

diff --git a/lib/maple_tree.c b/lib/maple_tree.c
index 6754c1e68..ab2615131 100644
--- a/lib/maple_tree.c
+++ b/lib/maple_tree.c
@@ -5089,29 +5089,34 @@ static inline bool mas_rewind_node(struct ma_state *mas)
  */
 static inline bool mas_skip_node(struct ma_state *mas)
 {
+	unsigned char slot, slot_count;
 	unsigned long *pivots;
 	enum maple_type mt;
 
-	if (mas_is_err(mas))
-		return false;
-
+	mt = mte_node_type(mas->node);
+	slot_count = mt_slots[mt] - 1;
 	do {
 		if (mte_is_root(mas->node)) {
-			if (mas->offset >= mas_data_end(mas)) {
+			slot = mas->offset;
+			if (slot > slot_count) {
 				mas_set_err(mas, -EBUSY);
 				return false;
 			}
 		} else {
 			mas_ascend(mas);
+			slot = mas->offset;
+			mt = mte_node_type(mas->node);
+			slot_count = mt_slots[mt] - 1;
 		}
-	} while (mas->offset >= mas_data_end(mas));
+	} while (slot > slot_count);
 
-	mt = mte_node_type(mas->node);
+	mas->offset = ++slot;
 	pivots = ma_pivots(mas_mn(mas), mt);
-	mas->min = pivots[mas->offset] + 1;
-	mas->offset++;
-	if (mas->offset < mt_slots[mt])
-		mas->max = pivots[mas->offset];
+	if (slot > 0)
+		mas->min = pivots[slot - 1] + 1;
+
+	if (slot <= slot_count)
+		mas->max = pivots[slot];
 
 	return true;
 }
-- 
2.39.2.501.gd9d677b2d8

