From ffdcb739215e48d8f071a9e9181b3f75e60855ca Mon Sep 17 00:00:00 2001
From: Piotr Gorski <lucjan.lucjanov@gmail.com>
Date: Tue, 11 Apr 2023 08:36:20 +0200
Subject: [PATCH 43/48] Revert "maple_tree: Fix a potential memory leak, OOB
 access, or other unpredictable bug"

This reverts commit 3d1b862e33e74a01eade8d97d79c8916b1586dcc.

Signed-off-by: Piotr Gorski <lucjan.lucjanov@gmail.com>
---
 lib/maple_tree.c | 16 ++++++++++++----
 1 file changed, 12 insertions(+), 4 deletions(-)

diff --git a/lib/maple_tree.c b/lib/maple_tree.c
index 5bf86302a..1985738ff 100644
--- a/lib/maple_tree.c
+++ b/lib/maple_tree.c
@@ -1249,18 +1249,26 @@ static inline void mas_alloc_nodes(struct ma_state *mas, gfp_t gfp)
 	node = mas->alloc;
 	node->request_count = 0;
 	while (requested) {
-		max_req = MAPLE_ALLOC_SLOTS - node->node_count;
-		slots = (void **)&node->slot[node->node_count];
+		max_req = MAPLE_ALLOC_SLOTS;
+		if (node->node_count) {
+			unsigned int offset = node->node_count;
+
+			slots = (void **)&node->slot[offset];
+			max_req -= offset;
+		} else {
+			slots = (void **)&node->slot;
+		}
+
 		max_req = min(requested, max_req);
 		count = mt_alloc_bulk(gfp, max_req, slots);
 		if (!count)
 			goto nomem_bulk;
 
-		if (node->node_count == 0)
-			node->slot[0]->node_count = 0;
 		node->node_count += count;
 		allocated += count;
 		node = node->slot[0];
+		node->node_count = 0;
+		node->request_count = 0;
 		requested -= count;
 	}
 	mas->alloc->total = allocated;
-- 
2.40.0.71.g950264636c

