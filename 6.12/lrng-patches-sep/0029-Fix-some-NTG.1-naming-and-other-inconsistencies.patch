From 187e2443b9ad866959783584fd54e32b27dab095 Mon Sep 17 00:00:00 2001
From: Jakub Zelenka <bukka@php.net>
Date: Fri, 15 Nov 2024 15:44:51 +0100
Subject: [PATCH 29/29] Fix some NTG.1 naming and other inconsistencies

Signed-off-by: Stephan Mueller <smueller@chronox.de>
---
 drivers/char/lrng/lrng_es_mgr.c | 7 +++----
 drivers/char/lrng/lrng_es_mgr.h | 2 +-
 2 files changed, 4 insertions(+), 5 deletions(-)

diff --git a/drivers/char/lrng/lrng_es_mgr.c b/drivers/char/lrng/lrng_es_mgr.c
index e4816e2de..39e471ab1 100644
--- a/drivers/char/lrng/lrng_es_mgr.c
+++ b/drivers/char/lrng/lrng_es_mgr.c
@@ -107,9 +107,8 @@ bool lrng_enforce_panic_on_permanent_health_failure(void)
 	return lrng_panic_on_permanent_health_failure;
 }
 
-bool lrng_ntg1_2022_compliant(void)
+bool lrng_ntg1_2024_compliant(void)
 {
-	/* Implies use of /dev/random w/ O_SYNC / getrandom w/ GRND_RANDOM */
 	return ntg1;
 }
 
@@ -246,7 +245,7 @@ static u32 lrng_avail_entropy_thresh(void)
 bool lrng_fully_seeded(bool fully_seeded, u32 collected_entropy,
 		       struct entropy_buf *eb)
 {
-	/* AIS20/31 NTG.1: two entropy sources with each delivering 220 bits */
+	/* AIS20/31 NTG.1: two entropy sources with each delivering 240 bits */
 	if (ntg1) {
 		u32 i, result = 0, ent_thresh = lrng_avail_entropy_thresh();
 
@@ -352,7 +351,7 @@ void lrng_init_ops(struct entropy_buf *eb)
 		return;
 
 	requested_bits = ntg1 ?
-		/* Approximation so that two ES should deliver 220 bits each */
+		/* Approximation so that two ES should deliver 240 bits each */
 		(lrng_avail_entropy() + LRNG_AIS2031_NPTRNG_MIN_ENTROPY) :
 		/* Apply SP800-90C oversampling if applicable */
 		lrng_get_seed_entropy_osr(state->all_online_numa_node_seeded);
diff --git a/drivers/char/lrng/lrng_es_mgr.h b/drivers/char/lrng/lrng_es_mgr.h
index 7c4fbcb59..299a58d53 100644
--- a/drivers/char/lrng/lrng_es_mgr.h
+++ b/drivers/char/lrng/lrng_es_mgr.h
@@ -24,7 +24,7 @@ extern struct lrng_es_cb *lrng_es[];
 	for ((ctr) = 0; (ctr) < lrng_ext_es_last; (ctr)++)
 
 bool lrng_enforce_panic_on_permanent_health_failure(void);
-bool lrng_ntg1_2022_compliant(void);
+bool lrng_ntg1_2024_compliant(void);
 bool lrng_pool_all_numa_nodes_seeded_get(void);
 bool lrng_state_min_seeded(void);
 void lrng_debug_report_seedlevel(const char *name);
-- 
2.47.0

