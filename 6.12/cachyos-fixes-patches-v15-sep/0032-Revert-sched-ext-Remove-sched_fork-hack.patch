From 5c8af4e8f8b7c273ecbc44044b803d1693a48b41 Mon Sep 17 00:00:00 2001
From: Peter Jung <admin@ptr1337.dev>
Date: Thu, 5 Dec 2024 16:27:56 +0100
Subject: [PATCH 32/36] Revert "sched/ext: Remove sched_fork() hack"

This reverts commit 09162013082267af54bb39091b523a8daaa28955.
---
 include/linux/sched/ext.h | 1 +
 kernel/sched/ext.c        | 7 ++++++-
 2 files changed, 7 insertions(+), 1 deletion(-)

diff --git a/include/linux/sched/ext.h b/include/linux/sched/ext.h
index 2799e7284..1ddbde64a 100644
--- a/include/linux/sched/ext.h
+++ b/include/linux/sched/ext.h
@@ -199,6 +199,7 @@ struct sched_ext_entity {
 #ifdef CONFIG_EXT_GROUP_SCHED
 	struct cgroup		*cgrp_moving_from;
 #endif
+	/* must be the last field, see init_scx_entity() */
 	struct list_head	tasks_node;
 };
 
diff --git a/kernel/sched/ext.c b/kernel/sched/ext.c
index ecb88c528..751d73d50 100644
--- a/kernel/sched/ext.c
+++ b/kernel/sched/ext.c
@@ -3567,7 +3567,12 @@ static void scx_ops_exit_task(struct task_struct *p)
 
 void init_scx_entity(struct sched_ext_entity *scx)
 {
-	memset(scx, 0, sizeof(*scx));
+	/*
+	 * init_idle() calls this function again after fork sequence is
+	 * complete. Don't touch ->tasks_node as it's already linked.
+	 */
+	memset(scx, 0, offsetof(struct sched_ext_entity, tasks_node));
+
 	INIT_LIST_HEAD(&scx->dsq_list.node);
 	RB_CLEAR_NODE(&scx->dsq_priq);
 	scx->sticky_cpu = -1;
-- 
2.47.1

