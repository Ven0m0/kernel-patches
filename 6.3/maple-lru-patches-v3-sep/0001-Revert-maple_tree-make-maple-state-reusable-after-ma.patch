From 632917c1303fde040e5244ba9d3792de8eb7e1ab Mon Sep 17 00:00:00 2001
From: Piotr Gorski <lucjan.lucjanov@gmail.com>
Date: Mon, 24 Apr 2023 17:09:35 +0200
Subject: [PATCH 01/14] Revert "maple_tree: make maple state reusable after
 mas_empty_area_rev()"

This reverts commit 75d667de7666cac36bd55f000d366badf3f8b338.

Signed-off-by: Piotr Gorski <lucjan.lucjanov@gmail.com>
---
 lib/maple_tree.c | 27 ++++++++++++++-------------
 1 file changed, 14 insertions(+), 13 deletions(-)

diff --git a/lib/maple_tree.c b/lib/maple_tree.c
index 1281a40d5..54011237b 100644
--- a/lib/maple_tree.c
+++ b/lib/maple_tree.c
@@ -4965,8 +4965,7 @@ static inline void *mas_prev_entry(struct ma_state *mas, unsigned long min)
  * Return: True if found in a leaf, false otherwise.
  *
  */
-static bool mas_rev_awalk(struct ma_state *mas, unsigned long size,
-		unsigned long *gap_min, unsigned long *gap_max)
+static bool mas_rev_awalk(struct ma_state *mas, unsigned long size)
 {
 	enum maple_type type = mte_node_type(mas->node);
 	struct maple_node *node = mas_mn(mas);
@@ -5031,8 +5030,8 @@ static bool mas_rev_awalk(struct ma_state *mas, unsigned long size,
 
 	if (unlikely(ma_is_leaf(type))) {
 		mas->offset = offset;
-		*gap_min = min;
-		*gap_max = min + gap - 1;
+		mas->min = min;
+		mas->max = min + gap - 1;
 		return true;
 	}
 
@@ -5310,9 +5309,6 @@ int mas_empty_area(struct ma_state *mas, unsigned long min,
 	unsigned long *pivots;
 	enum maple_type mt;
 
-	if (min >= max)
-		return -EINVAL;
-
 	if (mas_is_start(mas))
 		mas_start(mas);
 	else if (mas->offset >= 2)
@@ -5367,9 +5363,6 @@ int mas_empty_area_rev(struct ma_state *mas, unsigned long min,
 {
 	struct maple_enode *last = mas->node;
 
-	if (min >= max)
-		return -EINVAL;
-
 	if (mas_is_start(mas)) {
 		mas_start(mas);
 		mas->offset = mas_data_end(mas);
@@ -5389,7 +5382,7 @@ int mas_empty_area_rev(struct ma_state *mas, unsigned long min,
 	mas->index = min;
 	mas->last = max;
 
-	while (!mas_rev_awalk(mas, size, &min, &max)) {
+	while (!mas_rev_awalk(mas, size)) {
 		if (last == mas->node) {
 			if (!mas_rewind_node(mas))
 				return -EBUSY;
@@ -5404,9 +5397,17 @@ int mas_empty_area_rev(struct ma_state *mas, unsigned long min,
 	if (unlikely(mas->offset == MAPLE_NODE_SLOTS))
 		return -EBUSY;
 
+	/*
+	 * mas_rev_awalk() has set mas->min and mas->max to the gap values.  If
+	 * the maximum is outside the window we are searching, then use the last
+	 * location in the search.
+	 * mas->max and mas->min is the range of the gap.
+	 * mas->index and mas->last are currently set to the search range.
+	 */
+
 	/* Trim the upper limit to the max. */
-	if (max <= mas->last)
-		mas->last = max;
+	if (mas->max <= mas->last)
+		mas->last = mas->max;
 
 	mas->index = mas->last - size + 1;
 	return 0;
-- 
2.40.1.445.gf85cd430b1

