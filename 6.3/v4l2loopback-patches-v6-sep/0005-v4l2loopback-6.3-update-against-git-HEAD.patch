From 2c25b7b7602fb50fefa8dc21a9f1b2d81b965a3c Mon Sep 17 00:00:00 2001
From: Oleksandr Natalenko <oleksandr@natalenko.name>
Date: Fri, 26 May 2023 10:31:23 +0200
Subject: [PATCH 5/5] v4l2loopback-6.3: update against git HEAD

Signed-off-by: Oleksandr Natalenko <oleksandr@natalenko.name>
---
 drivers/media/v4l2-core/v4l2loopback.c | 28 ++------------------------
 1 file changed, 2 insertions(+), 26 deletions(-)

diff --git a/drivers/media/v4l2-core/v4l2loopback.c b/drivers/media/v4l2-core/v4l2loopback.c
index ebcb11e4e..4659bdf7e 100644
--- a/drivers/media/v4l2-core/v4l2loopback.c
+++ b/drivers/media/v4l2-core/v4l2loopback.c
@@ -33,8 +33,8 @@
 #include <linux/miscdevice.h>
 #include "v4l2loopback.h"
 
-#if LINUX_VERSION_CODE < KERNEL_VERSION(3, 6, 1)
-#define kstrtoul strict_strtoul
+#if LINUX_VERSION_CODE < KERNEL_VERSION(4, 0, 0)
+#error This module is not supported on kernels before 4.0.0.
 #endif
 
 #if defined(timer_setup) && defined(from_timer)
@@ -94,14 +94,8 @@ MODULE_LICENSE("GPL");
 
 static inline void v4l2l_get_timestamp(struct v4l2_buffer *b)
 {
-	/* ktime_get_ts is considered deprecated, so use ktime_get_ts64 if possible */
-#if LINUX_VERSION_CODE < KERNEL_VERSION(3, 17, 0)
-	struct timespec ts;
-	ktime_get_ts(&ts);
-#else
 	struct timespec64 ts;
 	ktime_get_ts64(&ts);
-#endif
 
 	b->timestamp.tv_sec = ts.tv_sec;
 	b->timestamp.tv_usec = (ts.tv_nsec / NSEC_PER_USEC);
@@ -912,11 +906,6 @@ static int vidioc_querycap(struct file *file, void *priv,
 	snprintf(cap->bus_info, sizeof(cap->bus_info),
 		 "platform:v4l2loopback-%03d", device_nr);
 
-#if LINUX_VERSION_CODE < KERNEL_VERSION(3, 1, 0)
-	/* since 3.1.0, the v4l2-core system is supposed to set the version */
-	cap->version = V4L2LOOPBACK_VERSION_CODE;
-#endif
-
 	if (dev->announce_all_caps) {
 		capabilities |= V4L2_CAP_VIDEO_CAPTURE | V4L2_CAP_VIDEO_OUTPUT;
 	} else {
@@ -933,9 +922,7 @@ static int vidioc_querycap(struct file *file, void *priv,
 #endif /* >=linux-4.7.0 */
 		cap->device_caps = cap->capabilities = capabilities;
 
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(3, 3, 0)
 	cap->capabilities |= V4L2_CAP_DEVICE_CAPS;
-#endif
 
 	memset(cap->reserved, 0, sizeof(cap->reserved));
 	return 0;
@@ -2455,9 +2442,6 @@ static void init_buffers(struct v4l2_loopback_device *dev)
 		b->length = buffer_size;
 		b->field = V4L2_FIELD_NONE;
 		b->flags = 0;
-#if LINUX_VERSION_CODE < KERNEL_VERSION(3, 6, 1)
-		b->input = 0;
-#endif
 		b->m.offset = i * buffer_size;
 		b->memory = V4L2_MEMORY_MMAP;
 		b->sequence = 0;
@@ -2511,18 +2495,10 @@ static void init_vdev(struct video_device *vdev, int nr)
 #endif
 
 	if (debug > 1)
-#if LINUX_VERSION_CODE < KERNEL_VERSION(3, 20, 0)
-		vdev->debug = V4L2_DEBUG_IOCTL | V4L2_DEBUG_IOCTL_ARG;
-#else
 		vdev->dev_debug = V4L2_DEV_DEBUG_IOCTL |
 				  V4L2_DEV_DEBUG_IOCTL_ARG;
-#endif
 
-		/* since kernel-3.7, there is a new field 'vfl_dir' that has to be
-	 * set to VFL_DIR_M2M for bidirectional devices */
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(3, 7, 0)
 	vdev->vfl_dir = VFL_DIR_M2M;
-#endif
 
 	MARK();
 }
-- 
2.40.1.445.gf85cd430b1

