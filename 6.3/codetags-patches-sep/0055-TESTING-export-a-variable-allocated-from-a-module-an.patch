From 13ffb7177d3a9d9f493be52cc06caa042f6739af Mon Sep 17 00:00:00 2001
From: Suren Baghdasaryan <surenb@google.com>
Date: Tue, 28 Mar 2023 03:37:55 +0000
Subject: [PATCH 55/56] TESTING: export a variable allocated from a module and
 freed outside of it

Test:
insmod ctagmod.ko <-- allocates test_var
rmsmod ctagmod.ko <-- unloads module leaving test_var allocated
cat /sys/kernel/debug/allocations <-- frees test_var after module unload

Signed-off-by: Suren Baghdasaryan <surenb@google.com>
---
 drivers/staging/ctagmod/ctagmod.c | 4 ++++
 lib/alloc_tag.c                   | 9 +++++++++
 2 files changed, 13 insertions(+)

diff --git a/drivers/staging/ctagmod/ctagmod.c b/drivers/staging/ctagmod/ctagmod.c
index fd17fcb9b..b4dbf976a 100644
--- a/drivers/staging/ctagmod/ctagmod.c
+++ b/drivers/staging/ctagmod/ctagmod.c
@@ -9,6 +9,8 @@ MODULE_LICENSE("GPL");
 static struct page *pg_data;
 static void *slab_data;
 
+extern void *test_var;
+
 static int __init ctagmod_start(void)
 {
 #ifdef CONFIG_MEM_ALLOC_PROFILING
@@ -42,6 +44,8 @@ static int __init ctagmod_start(void)
 	}
 	kfree(slab_tmp);
 	printk(KERN_INFO "Slab object is allocated\n");
+
+	test_var = kmalloc(12, GFP_KERNEL);
 #else
 	printk(KERN_INFO "CONFIG_MEM_ALLOC_PROFILING is undefined\n");
 #endif
diff --git a/lib/alloc_tag.c b/lib/alloc_tag.c
index 28523c1d1..797fa0db3 100644
--- a/lib/alloc_tag.c
+++ b/lib/alloc_tag.c
@@ -89,11 +89,20 @@ static int allocations_file_open(struct inode *inode, struct file *file)
 	return 0;
 }
 
+void *test_var = NULL;
+EXPORT_SYMBOL_GPL(test_var);
+
 static int allocations_file_release(struct inode *inode, struct file *file)
 {
 	struct alloc_tag_file_iterator *iter = file->private_data;
 
 	kfree(iter);
+
+	/* free memory allocated by a module */
+	if (test_var) {
+		kfree(test_var);
+		test_var = NULL;
+	}
 	return 0;
 }
 
-- 
2.40.1.445.gf85cd430b1

