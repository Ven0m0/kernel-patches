From 03d414981ed06c1faa53c2e54f16660f9fa4d750 Mon Sep 17 00:00:00 2001
From: Piotr Gorski <lucjan.lucjanov@gmail.com>
Date: Thu, 1 Jun 2023 18:19:10 +0200
Subject: [PATCH 02/14] Revert "cpufreq: amd-pstate: Add ->fast_switch()
 callback"

This reverts commit bb72110150dee8e82f8750b6649cc15223322f0a.

Signed-off-by: Piotr Gorski <lucjan.lucjanov@gmail.com>
---
 drivers/cpufreq/amd-pstate.c | 37 +++++++-----------------------------
 1 file changed, 7 insertions(+), 30 deletions(-)

diff --git a/drivers/cpufreq/amd-pstate.c b/drivers/cpufreq/amd-pstate.c
index cd3f1698f..64f971fb6 100644
--- a/drivers/cpufreq/amd-pstate.c
+++ b/drivers/cpufreq/amd-pstate.c
@@ -422,8 +422,9 @@ static int amd_pstate_verify(struct cpufreq_policy_data *policy)
 	return 0;
 }
 
-static int amd_pstate_update_freq(struct cpufreq_policy *policy,
-				  unsigned int target_freq, bool fast_switch)
+static int amd_pstate_target(struct cpufreq_policy *policy,
+			     unsigned int target_freq,
+			     unsigned int relation)
 {
 	struct cpufreq_freqs freqs;
 	struct amd_cpudata *cpudata = policy->driver_data;
@@ -442,36 +443,14 @@ static int amd_pstate_update_freq(struct cpufreq_policy *policy,
 	des_perf = DIV_ROUND_CLOSEST(target_freq * cap_perf,
 				     cpudata->max_freq);
 
-	WARN_ON(fast_switch && !policy->fast_switch_enabled);
-	/*
-	 * If fast_switch is desired, then there aren't any registered
-	 * transition notifiers. See comment for
-	 * cpufreq_enable_fast_switch().
-	 */
-	if (!fast_switch)
-		cpufreq_freq_transition_begin(policy, &freqs);
-
-	amd_pstate_update(cpudata, min_perf, des_perf, max_perf, fast_switch);
-
-	if (!fast_switch)
-		cpufreq_freq_transition_end(policy, &freqs, false);
+	cpufreq_freq_transition_begin(policy, &freqs);
+	amd_pstate_update(cpudata, min_perf, des_perf,
+			  max_perf, false);
+	cpufreq_freq_transition_end(policy, &freqs, false);
 
 	return 0;
 }
 
-static int amd_pstate_target(struct cpufreq_policy *policy,
-			     unsigned int target_freq,
-			     unsigned int relation)
-{
-	return amd_pstate_update_freq(policy, target_freq, false);
-}
-
-static unsigned int amd_pstate_fast_switch(struct cpufreq_policy *policy,
-				  unsigned int target_freq)
-{
-	return amd_pstate_update_freq(policy, target_freq, true);
-}
-
 static void amd_pstate_adjust_perf(unsigned int cpu,
 				   unsigned long _min_perf,
 				   unsigned long target_perf,
@@ -719,7 +698,6 @@ static int amd_pstate_cpu_exit(struct cpufreq_policy *policy)
 
 	freq_qos_remove_request(&cpudata->req[1]);
 	freq_qos_remove_request(&cpudata->req[0]);
-	policy->fast_switch_possible = false;
 	kfree(cpudata);
 
 	return 0;
@@ -1254,7 +1232,6 @@ static struct cpufreq_driver amd_pstate_driver = {
 	.flags		= CPUFREQ_CONST_LOOPS | CPUFREQ_NEED_UPDATE_LIMITS,
 	.verify		= amd_pstate_verify,
 	.target		= amd_pstate_target,
-	.fast_switch    = amd_pstate_fast_switch,
 	.init		= amd_pstate_cpu_init,
 	.exit		= amd_pstate_cpu_exit,
 	.suspend	= amd_pstate_cpu_suspend,
-- 
2.41.0.rc2

