From 36e99e1c7d58801e41306d25a818173dc10cbcf2 Mon Sep 17 00:00:00 2001
From: Jan Kara <jack@suse.cz>
Date: Wed, 29 Mar 2023 17:49:43 +0200
Subject: [PATCH 091/106] ext4: Update comment in mpage_prepare_extent_to_map()

Since filemap_write_and_wait() is now enough to get journalled data to
final location update the comment in mpage_prepare_extent_to_map().

Signed-off-by: Jan Kara <jack@suse.cz>
Link: https://lore.kernel.org/r/20230329154950.19720-12-jack@suse.cz
Signed-off-by: Theodore Ts'o <tytso@mit.edu>
---
 fs/ext4/inode.c | 9 ++++-----
 1 file changed, 4 insertions(+), 5 deletions(-)

diff --git a/fs/ext4/inode.c b/fs/ext4/inode.c
index d314e34f1..1441b7e47 100644
--- a/fs/ext4/inode.c
+++ b/fs/ext4/inode.c
@@ -2496,11 +2496,10 @@ static int mpage_prepare_extent_to_map(struct mpage_da_data *mpd)
 			 * Just submit the page. For data=journal mode we
 			 * first handle writeout of the page for checkpoint and
 			 * only after that handle delayed page dirtying. This
-			 * is crutial so that forcing a transaction commit and
-			 * then calling filemap_write_and_wait() guarantees
-			 * current state of data is in its final location. Such
-			 * sequence is used for example by insert/collapse
-			 * range operations before discarding the page cache.
+			 * makes sure current data is checkpointed to the final
+			 * location before possibly journalling it again which
+			 * is desirable when the page is frequently dirtied
+			 * through a pin.
 			 */
 			if (!mpd->can_map) {
 				WARN_ON_ONCE(sb->s_writers.frozen ==
-- 
2.40.1.445.gf85cd430b1

