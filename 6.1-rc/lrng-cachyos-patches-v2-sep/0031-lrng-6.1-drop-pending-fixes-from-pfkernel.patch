From 6429e76456fbf52dab0559369c82d687acf66d44 Mon Sep 17 00:00:00 2001
From: Piotr Gorski <lucjan.lucjanov@gmail.com>
Date: Wed, 19 Oct 2022 18:37:49 +0200
Subject: [PATCH 31/32] lrng-6.1: drop pending fixes from pfkernel

Signed-off-by: Piotr Gorski <lucjan.lucjanov@gmail.com>
---
 drivers/char/lrng/lrng_interface_aux.c        | 50 -------------------
 .../char/lrng/lrng_interface_random_kernel.c  |  9 ++--
 2 files changed, 3 insertions(+), 56 deletions(-)

diff --git a/drivers/char/lrng/lrng_interface_aux.c b/drivers/char/lrng/lrng_interface_aux.c
index 36b8a32f2..0eb49bd6b 100644
--- a/drivers/char/lrng/lrng_interface_aux.c
+++ b/drivers/char/lrng/lrng_interface_aux.c
@@ -19,8 +19,6 @@ struct batched_entropy {
 	union {
 		u64 entropy_u64[LRNG_DRNG_BLOCKSIZE / sizeof(u64)];
 		u32 entropy_u32[LRNG_DRNG_BLOCKSIZE / sizeof(u32)];
-		u16 entropy_u16[LRNG_DRNG_BLOCKSIZE / sizeof(u16)];
-		u8 entropy_u8[LRNG_DRNG_BLOCKSIZE / sizeof(u8)];
 	};
 	unsigned int position;
 	spinlock_t batch_lock;
@@ -79,54 +77,6 @@ u32 get_random_u32(void)
 }
 EXPORT_SYMBOL(get_random_u32);
 
-static DEFINE_PER_CPU(struct batched_entropy, batched_entropy_u16) = {
-	.batch_lock	= __SPIN_LOCK_UNLOCKED(batched_entropy_u16.lock),
-};
-
-u16 get_random_u16(void)
-{
-	u16 ret;
-	unsigned long flags;
-	struct batched_entropy *batch;
-
-	lrng_debug_report_seedlevel("get_random_u16");
-
-	batch = raw_cpu_ptr(&batched_entropy_u16);
-	spin_lock_irqsave(&batch->batch_lock, flags);
-	if (batch->position % ARRAY_SIZE(batch->entropy_u16) == 0) {
-		lrng_get_random_bytes(batch->entropy_u16, LRNG_DRNG_BLOCKSIZE);
-		batch->position = 0;
-	}
-	ret = batch->entropy_u16[batch->position++];
-	spin_unlock_irqrestore(&batch->batch_lock, flags);
-	return ret;
-}
-EXPORT_SYMBOL(get_random_u16);
-
-static DEFINE_PER_CPU(struct batched_entropy, batched_entropy_u8) = {
-	.batch_lock	= __SPIN_LOCK_UNLOCKED(batched_entropy_u8.lock),
-};
-
-u8 get_random_u8(void)
-{
-	u8 ret;
-	unsigned long flags;
-	struct batched_entropy *batch;
-
-	lrng_debug_report_seedlevel("get_random_u8");
-
-	batch = raw_cpu_ptr(&batched_entropy_u8);
-	spin_lock_irqsave(&batch->batch_lock, flags);
-	if (batch->position % ARRAY_SIZE(batch->entropy_u8) == 0) {
-		lrng_get_random_bytes(batch->entropy_u8, LRNG_DRNG_BLOCKSIZE);
-		batch->position = 0;
-	}
-	ret = batch->entropy_u8[batch->position++];
-	spin_unlock_irqrestore(&batch->batch_lock, flags);
-	return ret;
-}
-EXPORT_SYMBOL(get_random_u8);
-
 #ifdef CONFIG_SMP
 /*
  * This function is called when the CPU is coming up, with entry
diff --git a/drivers/char/lrng/lrng_interface_random_kernel.c b/drivers/char/lrng/lrng_interface_random_kernel.c
index 007c5ae6e..471390bfd 100644
--- a/drivers/char/lrng/lrng_interface_random_kernel.c
+++ b/drivers/char/lrng/lrng_interface_random_kernel.c
@@ -30,15 +30,12 @@ static int __init lrng_parse_trust_bootloader(char *arg)
 }
 early_param("random.trust_bootloader", lrng_parse_trust_bootloader);
 
-void __init random_init_early(const char *command_line)
+int __init random_init(const char *command_line)
 {
-	lrng_rand_initialize();
+	int ret = lrng_rand_initialize();
 
 	lrng_pool_insert_aux(command_line, strlen(command_line), 0);
-}
-
-void __init random_init(void)
-{
+	return ret;
 }
 
 /************************ LRNG kernel input interfaces ************************/
-- 
2.38.0.rc1.6.g4fd6c5e444

