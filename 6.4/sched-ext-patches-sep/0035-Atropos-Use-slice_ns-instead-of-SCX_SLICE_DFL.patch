From 41c58508fd98b2ca90da9c7246b94fca8bf00424 Mon Sep 17 00:00:00 2001
From: David Vernet <void@manifault.com>
Date: Thu, 13 Apr 2023 18:12:33 -0500
Subject: [PATCH 35/39] Atropos: Use slice_ns instead of SCX_SLICE_DFL

There are a few places in Atropos where we ignore the slice_ns variable
when calculating vtime, and dispatching tasks. This patch fixes that by
updating those callsites t use the slice_ns variable that's set by user
space (or set by default) rather than using SCX_SLICE_DFL.

Signed-off-by: David Vernet <void@manifault.com>
---
 tools/sched_ext/atropos/src/bpf/atropos.bpf.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/tools/sched_ext/atropos/src/bpf/atropos.bpf.c b/tools/sched_ext/atropos/src/bpf/atropos.bpf.c
index 18df15ab1..0f9a3fcfc 100644
--- a/tools/sched_ext/atropos/src/bpf/atropos.bpf.c
+++ b/tools/sched_ext/atropos/src/bpf/atropos.bpf.c
@@ -365,7 +365,7 @@ void BPF_STRUCT_OPS(atropos_enqueue, struct task_struct *p, u32 enq_flags)
 		if (vtime_before(vtime, domc->vtime_now - slice_ns))
 			vtime = domc->vtime_now - slice_ns;
 
-		scx_bpf_dispatch_vtime(p, task_ctx->dom_id, SCX_SLICE_DFL, vtime,
+		scx_bpf_dispatch_vtime(p, task_ctx->dom_id, slice_ns, vtime,
 				       enq_flags);
 	}
 }
@@ -492,7 +492,7 @@ void BPF_STRUCT_OPS(atropos_stopping, struct task_struct *p, bool runnable)
 		return;
 
 	/* scale the execution time by the inverse of the weight and charge */
-	p->scx.dsq_vtime += (SCX_SLICE_DFL - p->scx.slice) * 100 / p->scx.weight;
+	p->scx.dsq_vtime += (slice_ns - p->scx.slice) * 100 / p->scx.weight;
 }
 
 void BPF_STRUCT_OPS(atropos_quiescent, struct task_struct *p, u64 deq_flags)
-- 
2.41.0

